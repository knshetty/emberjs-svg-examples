eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"emberjs-svg-examples/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"emberjs-svg-examples/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=emberjs-svg-examples/app.js");

;eval("define(\"emberjs-svg-examples/components/intraday-designer-infographic\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var IntradayDesignerInfographicComponent;\n\n    IntradayDesignerInfographicComponent = Ember.Component.extend({\n      snapsvgInit: function() {\n        var draw;\n        draw = Snap(\'#svgstage-wrapper\');\n        return this.set(\'draw\', draw);\n      },\n      didInsertElement: function() {\n        var s;\n        this.snapsvgInit();\n        s = this.get(\'draw\');\n        return Snap.load(\"assets/intraday-designer-infographic.svg\", function(f) {\n          var g;\n          g = f.select(\"g\");\n          s.append(g);\n          return s.addClass(\"svgLoaded\");\n        });\n      }\n    });\n\n    __exports__[\"default\"] = IntradayDesignerInfographicComponent;\n  });//# sourceURL=emberjs-svg-examples/components/intraday-designer-infographic.js");

;eval("define(\"emberjs-svg-examples/components/snapsvg-clock\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SnapsvgClockComponent;\n\n    SnapsvgClockComponent = Ember.Component.extend({\n      snapsvgInit: function() {\n        var draw;\n        draw = Snap(\'#snapsvg-wrapper\');\n        return this.set(\'draw\', draw);\n      },\n      didInsertElement: function() {\n        var cos, hand, i, j, nums, path, r, ref, ref1, s, sin, table;\n        this.snapsvgInit();\n        s = this.get(\'draw\');\n        path = \'\';\n        nums = s.text(300, 300, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]).attr({\n          font: \"300 40px Helvetica Neue\",\n          textAnchor: \"middle\"\n        });\n        for (i = j = 0; j <= 71; i = ++j) {\n          r = (ref = (ref1 = i % 6) != null ? ref1 : i % 3) != null ? ref : {\n            247: {\n              240: 230\n            }\n          };\n          sin = Math.sin(Snap.rad(5 * i));\n          cos = Math.cos(Snap.rad(5 * i));\n          path += \"M\" + [300 + 250 * cos, 300 + 250 * sin] + \"L\" + [300 + r * cos, 300 + r * sin];\n          if (!(i % 6)) {\n            nums.select(\"tspan:nth-child(\" + (i / 6 + 1) + \")\").attr({\n              x: 300 + 200 * Math.cos(Snap.rad(5 * i - 60)),\n              y: 300 + 200 * Math.sin(Snap.rad(5 * i - 60)) + 15\n            });\n          }\n        }\n        table = s.g(nums, s.path(path).attr({\n          fill: \"none\",\n          stroke: \"#000\",\n          strokeWidth: 2\n        })).attr({\n          transform: \"t0, 210\"\n        });\n        s.g(table).attr({\n          clip: s.circle(300, 300, 100)\n        });\n        hand = s.line(300, 200, 300, 400).attr({\n          fill: \"none\",\n          stroke: \"#f63\",\n          strokeWidth: 2\n        });\n        return s.circle(300, 300, 100).attr({\n          stroke: \"#000\",\n          strokeWidth: 10,\n          fillOpacity: 0\n        }).click(function() {\n          return Snap.animate(0, 360, (function(val) {\n            table.transform(\"t\" + [210 * Math.cos(Snap.rad(val + 90)), 210 * Math.sin(Snap.rad(val + 90))]);\n            return hand.transform(\"r\" + [val, 300, 300]);\n          }), 12000);\n        });\n      }\n    });\n\n    __exports__[\"default\"] = SnapsvgClockComponent;\n  });//# sourceURL=emberjs-svg-examples/components/snapsvg-clock.js");

;eval("define(\"emberjs-svg-examples/components/svg-clock-swissrailway\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SvgClockSwissrailwayComponent;\n\n    SvgClockSwissrailwayComponent = Ember.Component.extend({\n      classNames: [\'svgjs-clock-style\'],\n      svgInit: function() {\n        var draw;\n        draw = SVG(\'svg-wrapper\');\n        return this.set(\'draw\', draw);\n      },\n      didInsertElement: function() {\n        this.svgInit();\n        return this.get(\'draw\').clock(\'80%\').back().start().move(\'10%\', \'10%\');\n      }\n    });\n\n    __exports__[\"default\"] = SvgClockSwissrailwayComponent;\n  });//# sourceURL=emberjs-svg-examples/components/svg-clock-swissrailway.js");

;eval("define(\"emberjs-svg-examples/components/svg-snappy-rectangle\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SvgSnappyRectangleComponent;\n\n    SvgSnappyRectangleComponent = Ember.Component.extend({\n      classNames: [\'svgjs-rectangle-style\'],\n      color: void 0,\n      rect: void 0,\n      svgInit: function() {\n        var draw;\n        draw = SVG(\'svg-wrapper\');\n        return this.set(\'draw\', draw);\n      },\n      svgRender: function() {\n        var draw, rect;\n        draw = this.get(\'draw\');\n        rect = draw.rect(50, 50).fill(this.get(\'color\'));\n        return this.set(\'rect\', rect);\n      },\n      didInsertElement: function() {\n        this.svgInit();\n        this.set(\'color\', \'#f09\');\n        return this.get(\'rect\').mouseover(function() {\n          return this.animate(1000, SVG.easing.elastic).move(550 * Math.random(), 550 * Math.random()).rotate(-45 + 90 * Math.random()).fill({\n            r: ~~(Math.random() * 255),\n            g: ~~(Math.random() * 255),\n            b: ~~(Math.random() * 255)\n          });\n        });\n      },\n      colorDidChange: (function() {\n        return this.svgRender();\n      }).observes(\'color\')\n    });\n\n    __exports__[\"default\"] = SvgSnappyRectangleComponent;\n  });//# sourceURL=emberjs-svg-examples/components/svg-snappy-rectangle.js");

;eval("define(\"emberjs-svg-examples/components/world-population-infographic\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var WorldPopulationInfographicComponent;\n\n    WorldPopulationInfographicComponent = Ember.Component.extend({\n      snapsvgInit: function() {\n        this.set(\'draw_title\', Snap(\'#title-worldpopulation-svg-wrapper\'));\n        this.set(\'draw_sun\', Snap(\'#sun-worldpopulation-svg-wrapper\'));\n        this.set(\'draw_cloud1\', Snap(\'#cloud1-worldpopulation-svg-wrapper\'));\n        this.set(\'draw_cloud2\', Snap(\'#cloud2-worldpopulation-svg-wrapper\'));\n        this.set(\'draw_globe\', Snap(\'#globe-worldpopulation-svg-wrapper\'));\n        this.set(\'draw_europe\', Snap(\'#europe-worldpopulation-svg-wrapper\'));\n        this.set(\'draw_stat_europe\', Snap(\'#stat-europe-worldpopulation-svg-wrapper\'));\n        this.set(\'draw_northamerica\', Snap(\'#northamerica-worldpopulation-svg-wrapper\'));\n        this.set(\'draw_stat_northamerica\', Snap(\'#stat-northamerica-worldpopulation-svg-wrapper\'));\n        this.set(\'draw_southamerica\', Snap(\'#southamerica-worldpopulation-svg-wrapper\'));\n        this.set(\'draw_stat_southamerica\', Snap(\'#stat-southamerica-worldpopulation-svg-wrapper\'));\n        this.set(\'draw_africa\', Snap(\'#africa-worldpopulation-svg-wrapper\'));\n        this.set(\'draw_stat_africa\', Snap(\'#stat-africa-worldpopulation-svg-wrapper\'));\n        this.set(\'draw_asia\', Snap(\'#asia-worldpopulation-svg-wrapper\'));\n        return this.set(\'draw_stat_asia\', Snap(\'#stat-asia-worldpopulation-svg-wrapper\'));\n      },\n      didInsertElement: function() {\n        var africa_mainland, c1, c2, cr, cx, cy, madagascar, r, s_africa, s_asia, s_cloud_one, s_cloud_two, s_europe, s_globe, s_northamerica, s_southamerica, s_stat_africa, s_stat_asia, s_stat_europe, s_stat_northamerica, s_stat_southamerica, s_sun, sun, txt, x, y;\n        this.snapsvgInit();\n        s_sun = this.get(\'draw_sun\');\n        s_sun.addClass(\'svg-sun\');\n        sun = s_sun.circle(50, 50, 35);\n        sun.node.id = \'sun\';\n        s_cloud_one = this.get(\'draw_cloud1\');\n        s_cloud_one.g(s_cloud_one.path(\"M642.02-364.11c-0.772,0-1.519,0.114-2.229,0.313c-0.17-6.744-5.679-12.162-12.464-12.162   c-4.368,0-8.201,2.251-10.428,5.65c-1.38-2.61-4.117-4.393-7.275-4.393c-2.621,0-4.95,1.229-6.456,3.139   c-2.865-6.496-9.357-11.031-16.913-11.031c-8.99,0-16.479,6.42-18.138,14.926c-0.937-0.248-1.911-0.393-2.925-0.393   c-6.312,0-11.427,5.116-11.427,11.427c0,0.907,0.117,1.787,0.317,2.634h95.921c0.146-0.609,0.229-1.243,0.229-1.896   C650.233-360.433,646.556-364.11,642.02-364.11z\"));\n        s_cloud_one.g(s_cloud_one.path(\"M90.02,48.188c-0.771,0-1.518,0.113-2.229,0.312c-0.17-6.744-5.678-12.162-12.463-12.162   c-4.369,0-8.201,2.251-10.428,5.65c-1.381-2.61-4.117-4.393-7.275-4.393c-2.621,0-4.951,1.229-6.457,3.139   c-2.865-6.496-9.357-11.031-16.913-11.031c-8.99,0-16.479,6.42-18.138,14.926c-0.937-0.248-1.911-0.393-2.925-0.393   c-6.312,0-11.427,5.116-11.427,11.427c0,0.907,0.117,1.786,0.317,2.634h95.92c0.146-0.609,0.23-1.243,0.23-1.896   C98.234,51.863,94.557,48.188,90.02,48.188z\"));\n        s_cloud_two = this.get(\'draw_cloud2\');\n        s_cloud_two.g(s_cloud_two.path(\"M642.02-364.11c-0.772,0-1.519,0.114-2.229,0.313c-0.17-6.744-5.679-12.162-12.464-12.162   c-4.368,0-8.201,2.251-10.428,5.65c-1.38-2.61-4.117-4.393-7.275-4.393c-2.621,0-4.95,1.229-6.456,3.139   c-2.865-6.496-9.357-11.031-16.913-11.031c-8.99,0-16.479,6.42-18.138,14.926c-0.937-0.248-1.911-0.393-2.925-0.393   c-6.312,0-11.427,5.116-11.427,11.427c0,0.907,0.117,1.787,0.317,2.634h95.921c0.146-0.609,0.229-1.243,0.229-1.896   C650.233-360.433,646.556-364.11,642.02-364.11z\"));\n        s_cloud_two.g(s_cloud_two.path(\"M90.02,48.188c-0.771,0-1.518,0.113-2.229,0.312c-0.17-6.744-5.678-12.162-12.463-12.162   c-4.369,0-8.201,2.251-10.428,5.65c-1.381-2.61-4.117-4.393-7.275-4.393c-2.621,0-4.951,1.229-6.457,3.139   c-2.865-6.496-9.357-11.031-16.913-11.031c-8.99,0-16.479,6.42-18.138,14.926c-0.937-0.248-1.911-0.393-2.925-0.393   c-6.312,0-11.427,5.116-11.427,11.427c0,0.907,0.117,1.786,0.317,2.634h95.92c0.146-0.609,0.23-1.243,0.23-1.896   C98.234,51.863,94.557,48.188,90.02,48.188z\"));\n        s_globe = this.get(\'draw_globe\');\n        s_globe.g(s_globe.path(\"M128,80.5c0,13.2-4.7,24.3-14.2,33.5s-20.8,13.8-34,13.8s-24.5-4.6-34-13.8S31.7,93.7,31.7,80.5s4.7-24.4,14.2-33.6c9.4-9.2,20.7-13.7,33.9-13.7s24.5,4.6,33.9,13.7C123.3,56.2,128,67.4,128,80.5zM124.8,80.9v-1.7c-8.6-0.9-12.9-1.4-12.9-1.4c-0.2,0-2.4,0.2-6.5,0.6l2.5,4.8l-6.3,2.3l-3.6-8.2L96.7,78c2.1,3.8,3.2,7.4,3.4,10.9c-2.1,2.5-4.2,5.1-6.3,7.7c0,5.6-0.6,10.7-1.8,15.2l-6.3,5.5l-4.6-3c-0.4-6.4-1.5-12.8-3.2-19.3L74,89.5l-8.6-2l-2.2-5.2l1.5-7.5c2.5-0.7,6.1-2.1,10.8-4c1.1,0.8,2.5,1.3,4.2,1.5c1.5,0.2,2.9,0.4,4.4,0.6c0,0,2.1,0.6,6.3,1.7c2.4,0.7,4.6,1,6.4,1.1l2-5h-2.5l-1.4-7.6l-6.2-0.2l0.4,2.5l3.1,4l-2.5-1.2l0.6,1.8l-4.4,1l1.7-1.2l-1.2-3.5l-2.9-2.1L81,66.3l-3.3-0.6l-2,3.7l-3.8-1.9l2.9-3.5l4.4-1.2l1.8-2.7l6.4-2.9l1.4-1.6l1.4-6l-3.9,2l1.8,1L85.4,55l-1-2.8l-1.4,2.2l-4.2-3.6l8.9-7.7h7.3l0.8-4.3C91,37,85.9,36,80.5,36c-5.9,0-10.8,0.8-14.7,2.4c0.9,0.7,1.3,1.5,1.3,2.3c0,0.4-0.4,0.7-1.2,0.9c-0.6,0.1-1.1,0.2-1.7,0.3c-1.6,0.5-3.1,1.4-4.7,2.6s-3.1,3.5-4.4,6.7C54,53.7,52.9,55,51.6,55c-0.8,0-1.5-0.7-2.1-2c-0.6-1.3-0.9-2-1-2c-1.2,0-2.3,0.3-3.3,0.9c-2.7,1.8-5.2,5.7-7.5,11.7c-2.4,6.2-3.6,12.1-3.6,17.7c0,12.4,4.4,22.9,13.2,31.5s19.5,12.8,31.9,12.8s23.2-4.3,32.1-13S124.8,93.3,124.8,80.9z M71.9,49.7L70.3,51l-2.7,0.4l1-3.5h2.7L71.9,49.7z M75.9,56.7l-1.4,1.6l-0.6-1.8l1-1.7L75.9,56.7zM81.6,56.5l-2.2,2.3l-2.1-0.2l1.9-2.3l-1.2-0.4l-1.3-2.4l0.7-1.9L81.6,56.5zM84.1,69.2l-0.2,2l-1.9-2H84.1z\").addClass(\'svg-globe\'));\n        s_globe.g(s_globe.path(\"M86,17.9c0,0.9-0.3,1.3-1,1.3s-1-0.4-1-1.3V9.3h-0.5V30c0,0.9-0.4,1.3-1.2,1.3s-1.2-0.4-1.2-1.3V17.7h-0.6V30c0,0.9-0.4,1.3-1.2,1.3s-1.2-0.4-1.2-1.3V9.3h-0.5v8.6c0,0.9-0.3,1.3-1,1.3c-0.7,0-1-0.4-1-1.3V8c0-1.6,0.9-2.4,2.7-2.4h5 C85.1,5.6,86,6.4,86,8V17.9z M83,2.6c0,0.7-0.2,1.4-0.6,1.9s-0.9,0.9-1.5,0.9c-0.6,0-1.1-0.3-1.5-0.9s-0.6-1.2-0.6-1.9 c0-0.7,0.2-1.3,0.6-1.8C79.7,0.3,80.2,0,80.8,0c0.6,0,1.1,0.3,1.5,0.8S83,1.9,83,2.6z\").addClass(\'svg-man-01\'));\n        s_globe.g(s_globe.path(\"M109.5,24.8c-0.3,0.8-0.8,1.1-1.4,0.8c-0.6-0.3-0.7-0.8-0.4-1.6l3.3-8l-0.4-0.2l-7.9,19.2c-0.3,0.8-0.9,1-1.6,0.7c-0.7-0.3-0.9-0.9-0.6-1.6l4.7-11.4l-0.6-0.2l-4.7,11.4c-0.3,0.8-0.9,1-1.6,0.7c-0.7-0.3-0.9-0.9-0.6-1.6l7.9-19.2l-0.4-0.2l-3.3,8c-0.3,0.8-0.8,1.1-1.4,0.8c-0.6-0.3-0.7-0.8-0.4-1.6l3.8-9.1c0.6-1.5,1.7-1.9,3.4-1.2l4.6,1.9c1.6,0.7,2.2,1.8,1.5,3.2L109.5,24.8zM112.5,9.5c-0.3,0.7-0.7,1.2-1.3,1.5c-0.6,0.4-1.2,0.4-1.7,0.2c-0.5-0.2-0.9-0.7-1.1-1.4c-0.2-0.7-0.1-1.4,0.2-2 c0.3-0.7,0.7-1.1,1.3-1.4c0.6-0.3,1.1-0.3,1.7-0.1c0.5,0.2,0.9,0.6,1.1,1.3S112.8,8.8,112.5,9.5z\").addClass(\'svg-man-02\'));\n        s_globe.g(s_globe.path(\"M128.5,40.2c-0.6,0.6-1.1,0.7-1.6,0.2s-0.4-1,0.2-1.6l6.1-6.1l-0.3-0.3L118.2,47c-0.6,0.6-1.2,0.6-1.8,0.1c-0.6-0.6-0.6-1.2,0.1-1.8l8.7-8.7l-0.4-0.4l-8.7,8.7c-0.6,0.6-1.2,0.6-1.8,0.1c-0.6-0.6-0.6-1.2,0.1-1.8l14.7-14.7l-0.3-0.3 l-6.1,6.1c-0.6,0.6-1.1,0.7-1.6,0.2s-0.4-1,0.2-1.6l7-7c1.1-1.1,2.3-1.1,3.6,0.2l3.5,3.5c1.3,1.3,1.3,2.5,0.2,3.6L128.5,40.2z M137.2,27.2c-0.5,0.5-1.1,0.8-1.8,0.9c-0.7,0.1-1.3,0-1.7-0.5s-0.6-1-0.5-1.7c0.1-0.7,0.4-1.3,0.9-1.8c0.5-0.5,1.1-0.8,1.7-0.8 c0.6-0.1,1.2,0.1,1.6,0.5c0.4,0.4,0.6,0.9,0.5,1.6C138,26.1,137.7,26.7,137.2,27.2z\").addClass(\'svg-man-03\'));\n        s_globe.g(s_globe.path(\"M140.2,61.7c-0.8,0.3-1.3,0.2-1.6-0.4c-0.3-0.6,0-1.1,0.8-1.4l8-3.3l-0.2-0.4l-19.2,7.9c-0.8,0.3-1.3,0.1-1.6-0.6c-0.3-0.7-0.1-1.3,0.7-1.6l11.4-4.7l-0.2-0.6l-11.4,4.7c-0.8,0.3-1.3,0.1-1.6-0.6c-0.3-0.7-0.1-1.3,0.7-1.6l19.2-7.9l-0.2-0.4l-8,3.3c-0.8,0.3-1.3,0.2-1.6-0.4s0-1.1,0.8-1.4l9.1-3.8c1.5-0.6,2.6-0.1,3.3,1.6l1.9,4.6c0.7,1.6,0.3,2.8-1.2,3.4L140.2,61.7zM153.2,53c-0.7,0.3-1.3,0.3-2,0.2c-0.7-0.2-1.1-0.5-1.4-1.1c-0.2-0.5-0.2-1.1,0.2-1.7c0.4-0.6,0.9-1,1.5-1.3c0.7-0.3,1.3-0.3,1.9-0.1c0.6,0.2,1,0.6,1.3,1.1c0.2,0.5,0.2,1.1-0.1,1.7C154.4,52.3,153.9,52.7,153.2,53z\").addClass(\'svg-man-04\'));\n        s_globe.g(s_globe.path(\"M142.8,86c-0.9,0-1.3-0.3-1.3-1s0.4-1,1.3-1h8.6v-0.5h-20.8c-0.9,0-1.3-0.4-1.3-1.2s0.4-1.2,1.3-1.2H143v-0.6h-12.3c-0.9,0-1.3-0.4-1.3-1.2s0.4-1.2,1.3-1.2h20.8v-0.5h-8.6c-0.9,0-1.3-0.3-1.3-1c0-0.7,0.4-1,1.3-1h9.9c1.6,0,2.4,0.9,2.4,2.7v5c0,1.8-0.8,2.7-2.4,2.7H142.8z M158.2,83c-0.7,0-1.4-0.2-1.9-0.6s-0.9-0.9-0.9-1.5c0-0.6,0.3-1.1,0.9-1.5s1.2-0.6,1.9-0.6 c0.7,0,1.3,0.2,1.8,0.6c0.5,0.4,0.8,0.9,0.8,1.5c0,0.6-0.3,1.1-0.8,1.5S158.9,83,158.2,83z\").addClass(\'svg-man-05\'));\n        s_globe.g(s_globe.path(\"M135.9,109.5c-0.8-0.3-1.1-0.8-0.8-1.4s0.8-0.7,1.6-0.4l8,3.3l0.2-0.4l-19.2-7.9c-0.8-0.3-1-0.9-0.7-1.6s0.9-0.9,1.6-0.6l11.4,4.7l0.2-0.6l-11.4-4.7c-0.8-0.3-1-0.9-0.7-1.6c0.3-0.7,0.9-0.9,1.6-0.6l19.2,7.9l0.2-0.4l-8-3.3c-0.8-0.3-1.1-0.8-0.8-1.4c0.3-0.6,0.8-0.7,1.6-0.4l9.1,3.8c1.5,0.6,1.9,1.7,1.2,3.4l-1.9,4.6c-0.7,1.6-1.8,2.2-3.2,1.5L135.9,109.5z M151.2,112.5c-0.7-0.3-1.2-0.7-1.5-1.3c-0.4-0.6-0.4-1.2-0.2-1.7c0.2-0.5,0.7-0.9,1.4-1.1s1.4-0.1,2,0.2c0.7,0.3,1.1,0.7,1.4,1.3 c0.3,0.6,0.3,1.1,0.1,1.7c-0.2,0.5-0.6,0.9-1.3,1.1S151.9,112.8,151.2,112.5z\").addClass(\'svg-man-06\'));\n        s_globe.g(s_globe.path(\"M120.5,128.5c-0.6-0.6-0.7-1.1-0.2-1.6s1-0.4,1.6,0.2l6.1,6.1l0.3-0.3l-14.7-14.7c-0.6-0.6-0.6-1.2-0.1-1.8s1.2-0.6,1.8,0.1l8.7,8.7l0.4-0.4l-8.7-8.7c-0.6-0.6-0.6-1.2-0.1-1.8s1.2-0.6,1.8,0.1l14.7,14.7l0.3-0.3l-6.1-6.1c-0.6-0.6-0.7-1.1-0.2-1.6s1-0.4,1.6,0.2l7,7c1.1,1.1,1.1,2.3-0.2,3.6l-3.5,3.5c-1.3,1.3-2.5,1.3-3.6,0.2L120.5,128.5zM133.5,137.2c-0.5-0.5-0.8-1.1-0.9-1.8c-0.1-0.7,0-1.3,0.5-1.7c0.4-0.4,1-0.6,1.7-0.5c0.7,0.1,1.3,0.4,1.8,0.9c0.5,0.5,0.8,1.1,0.8,1.7c0.1,0.6-0.1,1.2-0.5,1.6c-0.4,0.4-0.9,0.6-1.6,0.5C134.6,138,134,137.7,133.5,137.2z\").addClass(\'svg-man-07\'));\n        s_globe.g(s_globe.path(\"M99,140.2c-0.3-0.8-0.2-1.3,0.4-1.6s1.1,0,1.4,0.8l3.3,8l0.4-0.2l-7.9-19.2c-0.3-0.8-0.1-1.3,0.6-1.6c0.7-0.3,1.3-0.1,1.6,0.7l4.7,11.4l0.6-0.2l-4.7-11.4c-0.3-0.8-0.1-1.3,0.6-1.6c0.7-0.3,1.3-0.1,1.6,0.7l7.9,19.2l0.4-0.2l-3.3-8c-0.3-0.8-0.2-1.3,0.4-1.6s1.1,0,1.4,0.8l3.8,9.1c0.6,1.5,0.1,2.6-1.6,3.3l-4.6,1.9c-1.6,0.7-2.8,0.3-3.4-1.2L99,140.2zM107.7,153.2c-0.3-0.7-0.3-1.3-0.2-2s0.5-1.1,1.1-1.4c0.5-0.2,1.1-0.2,1.7,0.2c0.6,0.4,1,0.9,1.3,1.5c0.3,0.7,0.3,1.3,0.1,1.9c-0.2,0.6-0.6,1-1.1,1.3c-0.5,0.2-1.1,0.2-1.7-0.1C108.4,154.4,108,153.9,107.7,153.2z\").addClass(\'svg-man-08\'));\n        s_globe.g(s_globe.path(\"M74.7,142.8c0-0.9,0.3-1.3,1-1.3c0.7,0,1,0.4,1,1.3v8.6h0.5v-20.8c0-0.9,0.4-1.3,1.2-1.3s1.2,0.4,1.2,1.3V143h0.6v-12.3c0-0.9,0.4-1.3,1.2-1.3s1.2,0.4,1.2,1.3v20.8h0.5v-8.6c0-0.9,0.3-1.3,1-1.3s1,0.4,1,1.3v9.9c0,1.6-0.9,2.4-2.7,2.4h-5c-1.8,0-2.7-0.8-2.7-2.4V142.8z M77.8,158.2c0-0.7,0.2-1.4,0.6-1.9s0.9-0.9,1.5-0.9c0.6,0,1.1,0.3,1.5,0.9s0.6,1.2,0.6,1.9 c0,0.7-0.2,1.3-0.6,1.8c-0.4,0.5-0.9,0.8-1.5,0.8c-0.6,0-1.1-0.3-1.5-0.8S77.8,158.9,77.8,158.2z\").addClass(\'svg-man-09\'));\n        s_globe.g(s_globe.path(\"M51.2,135.9c0.3-0.8,0.8-1.1,1.4-0.8c0.6,0.3,0.7,0.8,0.4,1.6l-3.3,8l0.4,0.2l7.9-19.2c0.3-0.8,0.9-1,1.6-0.7s0.9,0.9,0.6,1.6l-4.7,11.4l0.6,0.2l4.7-11.4c0.3-0.8,0.9-1,1.6-0.7c0.7,0.3,0.9,0.9,0.6,1.6l-7.9,19.2l0.4,0.2l3.3-8c0.3-0.8,0.8-1.1,1.4-0.8s0.7,0.8,0.4,1.6L57,149c-0.6,1.5-1.7,1.9-3.4,1.2l-4.6-1.9c-1.6-0.7-2.2-1.8-1.5-3.2L51.2,135.9zM48.2,151.2c0.3-0.7,0.7-1.2,1.3-1.5c0.6-0.4,1.2-0.4,1.7-0.2c0.5,0.2,0.9,0.7,1.1,1.4c0.2,0.7,0.1,1.4-0.2,2c-0.3,0.7-0.7,1.1-1.3,1.4c-0.6,0.3-1.1,0.3-1.7,0.1c-0.5-0.2-0.9-0.6-1.1-1.3C47.9,152.5,47.9,151.9,48.2,151.2z\").addClass(\'svg-man-10\'));\n        s_globe.g(s_globe.path(\"M32.2,120.5c0.6-0.6,1.1-0.7,1.6-0.2s0.4,1-0.2,1.6l-6.1,6.1l0.3,0.3l14.7-14.7c0.6-0.6,1.2-0.6,1.8-0.1 c0.6,0.6,0.6,1.2-0.1,1.8l-8.7,8.7l0.4,0.4l8.7-8.7c0.6-0.6,1.2-0.6,1.8-0.1c0.6,0.6,0.6,1.2-0.1,1.8l-14.7,14.7l0.3,0.3l6.1-6.1 c0.6-0.6,1.1-0.7,1.6-0.2s0.4,1-0.2,1.6l-7,7c-1.1,1.1-2.3,1.1-3.6-0.2l-3.5-3.5c-1.3-1.3-1.3-2.5-0.2-3.6L32.2,120.5z M23.5,133.5c0.5-0.5,1.1-0.8,1.8-0.9c0.7-0.1,1.3,0,1.7,0.5c0.4,0.4,0.6,1,0.5,1.7c-0.1,0.7-0.4,1.3-0.9,1.8c-0.5,0.5-1.1,0.8-1.7,0.8c-0.6,0.1-1.2-0.1-1.6-0.5c-0.4-0.4-0.6-0.9-0.5-1.6C22.7,134.6,23,134,23.5,133.5z\").addClass(\'svg-man-11\'));\n        s_globe.g(s_globe.path(\"M20.5,99c0.8-0.3,1.3-0.2,1.6,0.4c0.3,0.6,0,1.1-0.8,1.4l-8,3.3l0.2,0.4l19.2-7.9c0.8-0.3,1.3-0.1,1.6,0.6c0.3,0.7,0.1,1.3-0.7,1.6l-11.4,4.7l0.2,0.6l11.4-4.7c0.8-0.3,1.3-0.1,1.6,0.6c0.3,0.7,0.1,1.3-0.7,1.6l-19.2,7.9l0.2,0.4l8-3.3c0.8-0.3,1.3-0.2,1.6,0.4c0.3,0.6,0,1.1-0.8,1.4l-9.1,3.8c-1.5,0.6-2.6,0.1-3.3-1.6l-1.9-4.6c-0.7-1.6-0.3-2.8,1.2-3.4L20.5,99zM7.5,107.7c0.7-0.3,1.3-0.3,2-0.2c0.7,0.2,1.1,0.5,1.4,1.1c0.2,0.5,0.2,1.1-0.2,1.7c-0.4,0.6-0.9,1-1.5,1.3c-0.7,0.3-1.3,0.3-1.9,0.1s-1-0.6-1.3-1.1c-0.2-0.5-0.2-1.1,0.1-1.7C6.4,108.4,6.8,108,7.5,107.7z\").addClass(\'svg-man-12\'));\n        s_globe.g(s_globe.path(\"M17.9,74.7c0.9,0,1.3,0.3,1.3,1c0,0.7-0.4,1-1.3,1H9.3v0.5H30c0.9,0,1.3,0.4,1.3,1.2s-0.4,1.2-1.3,1.2H17.7v0.6H30c0.9,0,1.3,0.4,1.3,1.2s-0.4,1.2-1.3,1.2H9.3v0.5h8.6c0.9,0,1.3,0.3,1.3,1s-0.4,1-1.3,1H8c-1.6,0-2.4-0.9-2.4-2.7v-5c0-1.8,0.8-2.7,2.4-2.7H17.9zM2.6,77.8c0.7,0,1.4,0.2,1.9,0.6s0.9,0.9,0.9,1.5c0,0.6-0.3,1.1-0.9,1.5S3.3,82,2.6,82c-0.7,0-1.3-0.2-1.8-0.6C0.3,81,0,80.5,0,79.9c0-0.6,0.3-1.1,0.8-1.5S1.9,77.8,2.6,77.8z\").addClass(\'svg-man-13\'));\n        s_globe.g(s_globe.path(\"M24.8,51.2c0.8,0.3,1.1,0.8,0.8,1.4c-0.3,0.6-0.8,0.7-1.6,0.4l-8-3.3l-0.2,0.4l19.2,7.9c0.8,0.3,1,0.9,0.7,1.6c-0.3,0.7-0.9,0.9-1.6,0.6l-11.4-4.7l-0.2,0.6l11.4,4.7c0.8,0.3,1,0.9,0.7,1.6c-0.3,0.7-0.9,0.9-1.6,0.6l-19.2-7.9l-0.2,0.4l8,3.3c0.8,0.3,1.1,0.8,0.8,1.4c-0.3,0.6-0.8,0.7-1.6,0.4L11.7,57c-1.5-0.6-1.9-1.7-1.2-3.4l1.9-4.6c0.7-1.6,1.8-2.2,3.2-1.5L24.8,51.2zM9.5,48.2c0.7,0.3,1.2,0.7,1.5,1.3c0.4,0.6,0.4,1.2,0.2,1.7c-0.2,0.5-0.7,0.9-1.4,1.1c-0.7,0.2-1.4,0.1-2-0.2c-0.7-0.3-1.1-0.7-1.4-1.3s-0.3-1.1-0.1-1.7c0.2-0.5,0.6-0.9,1.3-1.1C8.2,47.9,8.8,47.9,9.5,48.2z\").addClass(\'svg-man-14\'));\n        s_globe.g(s_globe.path(\"M40.2,32.2c0.6,0.6,0.7,1.1,0.2,1.6s-1,0.4-1.6-0.2l-6.1-6.1l-0.3,0.3L47,42.5c0.6,0.6,0.6,1.2,0.1,1.8c-0.6,0.6-1.2,0.6-1.8-0.1l-8.7-8.7L36.2,36l8.7,8.7c0.6,0.6,0.6,1.2,0.1,1.8c-0.6,0.6-1.2,0.6-1.8-0.1L28.5,31.7L28.2,32l6.1,6.1c0.6,0.6,0.7,1.1,0.2,1.6s-1,0.4-1.6-0.2l-7-7c-1.1-1.1-1.1-2.3,0.2-3.6l3.5-3.5c1.3-1.3,2.5-1.3,3.6-0.2L40.2,32.2zM27.2,23.5c0.5,0.5,0.8,1.1,0.9,1.8c0.1,0.7,0,1.3-0.5,1.7s-1,0.6-1.7,0.5c-0.7-0.1-1.3-0.4-1.8-0.9c-0.5-0.5-0.8-1.1-0.8-1.7c-0.1-0.6,0.1-1.2,0.5-1.6c0.4-0.4,0.9-0.6,1.6-0.5S26.7,23,27.2,23.5z\").addClass(\'svg-man-15\'));\n        s_globe.g(s_globe.path(\"M61.7,20.5c0.3,0.8,0.2,1.3-0.4,1.6c-0.6,0.3-1.1,0-1.4-0.8l-3.3-8l-0.4,0.2l7.9,19.2c0.3,0.8,0.1,1.3-0.6,1.6c-0.7,0.3-1.3,0.1-1.6-0.7l-4.7-11.4l-0.6,0.2l4.7,11.4c0.3,0.8,0.1,1.3-0.6,1.6c-0.7,0.3-1.3,0.1-1.6-0.7l-7.9-19.2l-0.4,0.2l3.3,8c0.3,0.8,0.2,1.3-0.4,1.6c-0.6,0.3-1.1,0-1.4-0.8l-3.8-9.1c-0.6-1.5-0.1-2.6,1.6-3.3l4.6-1.9c1.6-0.7,2.8-0.3,3.4,1.2L61.7,20.5zM53,7.5c0.3,0.7,0.3,1.3,0.2,2c-0.2,0.7-0.5,1.1-1.1,1.4c-0.5,0.2-1.1,0.2-1.7-0.2c-0.6-0.4-1-0.9-1.3-1.5c-0.3-0.7-0.3-1.3-0.1-1.9c0.2-0.6,0.6-1,1.1-1.3c0.5-0.2,1.1-0.2,1.7,0.1C52.3,6.4,52.7,6.8,53,7.5z\").addClass(\'svg-man-16\'));\n        s_europe = this.get(\'draw_europe\');\n        s_europe.polygon(262.2, 467.1, 261.8, 466.8, 261.6, 465.1, 261, 464.6, 260.6, 463.3, 260.2, 462.9, 259.9, 463.1, 259.9, 462.9, 260.2, 462.2, 260.2, 461.3, 259.1, 460, 258.6, 460, 257.9, 459.3, 257.5, 459.3, 257, 458.8, 255.7, 459.2, 255.7, 460, 254.9, 460, 253.3, 461.8, 253.3, 462.4, 253, 462.7, 252.2, 462.6, 251.3, 463.5, 248.8, 463.5, 247.9, 462.6, 246.9, 462.6, 247.2, 464.3, 246.9, 464.6, 246.9, 465.6, 248.5, 467.3, 248.5, 468, 248.9, 468.9, 249.4, 469.3, 249.4, 472.8, 249, 473.1, 249.1, 475.2, 249.9, 475.2, 250.1, 476.4, 249.1, 477, 249.4, 478.7, 248.9, 479.1, 248.8, 482.7, 249.5, 483.3, 249.5, 483.8, 250.3, 484.7, 250.3, 485.4, 251.2, 486.1, 254.1, 486.1, 254.1, 485.2, 254.8, 484.6, 254.9, 482.8, 255.7, 482, 256.6, 482, 257.4, 483, 259.7, 483.8, 261.1, 472.6, 260.5, 471.6, 260.5, 470.1, 261.3, 469.6, 261.8, 468.2, 262.4, 467.7);\n        s_europe.polygon(310.7, 492, 310.7, 491.7, 310.1, 491.8, 309.6, 491.8, 309.3, 492.2, 308.5, 492.3, 308.1, 492.2, 307.6, 492.7, 307.6, 493.3, 304.1, 492.9, 302.6, 494.6, 296.9, 494.8, 295.9, 495.6, 294.6, 495.6, 293.8, 494.8, 293.1, 494.8, 291.4, 493.6, 290.9, 493.6, 290.5, 494, 289.3, 494, 289.3, 494.5, 288.6, 495.2, 287.5, 495.2, 286.6, 494.3, 285.4, 494.3, 284.5, 495, 284.5, 498.1, 283.9, 498.7, 285.3, 499.9, 288.3, 499.9, 288.9, 500.4, 290.5, 501.1, 291.5, 501.1, 292.6, 502.8, 293.8, 502.8, 296.9, 504.6, 300.1, 504.6, 301.2, 505, 301.2, 506, 304.7, 508.4, 308, 508.7, 308.4, 508.1, 308, 506.6, 310, 504.5, 309.3, 503.8, 309.3, 503.5, 308.8, 503.2, 309.2, 502.8, 308.4, 502, 307.9, 502, 307.9, 501.5, 307.5, 500.8, 307.5, 499.9, 308.2, 498.9, 308.2, 498.3, 308.6, 497.4, 308.7, 496.4, 310.4, 493.4, 310.2, 492.8, 310.8, 492.4);\n        s_europe.polygon(258, 441.2, 257.5, 442.4, 257.2, 442.4, 256.7, 441.8, 256, 441.8, 254.8, 443, 253.5, 443, 253.1, 443.4, 252.6, 443.4, 252, 443.6, 251.8, 445.6, 251.1, 446.4, 251.8, 447.2, 251.1, 447.9, 251.5, 448.8, 252.8, 450.1, 251.5, 450.7, 252.5, 451.6, 252.5, 452.3, 251.8, 453, 252, 453.7, 253.4, 453.7, 253.5, 454.1, 253.1, 454.6, 253.1, 455.1, 254.4, 456.2, 255.2, 456.2, 255.4, 456.5, 255.8, 456.9, 256.5, 457.1, 258.1, 455.6, 258.5, 450.7, 259.6, 449.7, 259.5, 443.9, 259.1, 443.3, 259, 439, 258.2, 438.3, 257.9, 438.6);\n        s_europe.polygon(91.5, 338, 92.1, 338.2, 92.7, 339, 99.4, 337.6, 100, 336.8, 101.7, 336.5, 101.6, 335.9, 100.9, 335.3, 101.3, 334.2, 102.1, 333.9, 102.7, 334.4, 103, 335.3, 103.8, 335.8, 104.3, 335.7, 106.7, 333.3, 108.1, 333.1, 108.8, 332.2, 108.7, 331.8, 110.6, 331.5, 111.7, 331.9, 113.1, 331.7, 113.8, 331.3, 114.2, 331.6, 114.7, 330.2, 115.8, 330.8, 116.2, 331.6, 116.8, 332, 118.3, 331.5, 118.9, 330.8, 118.8, 329, 119.8, 328.1, 121.4, 323.1, 122.9, 321.5, 122.5, 312.2, 120.6, 307.2, 121.7, 306, 122.4, 305.9, 122.8, 306.2, 124.4, 305.7, 124.8, 304.1, 127.1, 303.6, 128.7, 301.7, 128.1, 297.8, 127.4, 297.3, 125.6, 297.4, 125.4, 296.7, 125.9, 296.3, 126.5, 296.2, 127, 295.6, 126.4, 294.9, 126.4, 294.2, 124.8, 292.8, 124.3, 290.4, 122.4, 289, 117.7, 290, 117.6, 289.5, 114.8, 287, 114.1, 288, 112.9, 288.4, 112.3, 288.3, 109.9, 289.1, 108.5, 288.8, 107.8, 289, 106.1, 290.3, 105.3, 292.6, 105.5, 293.5, 105.1, 294, 103.3, 294.3, 102.6, 294.7, 102.7, 295.7, 103.1, 296, 105.9, 296.5, 106.7, 297, 105.8, 298.2, 104, 298.7, 102.9, 299.6, 103.1, 301.2, 102.9, 302, 102.4, 301.1, 101.7, 300.5, 100, 300.4, 99.1, 300.7, 98.4, 301.6, 97.8, 301.1, 97.6, 300, 96.2, 299.7, 95.5, 299.2, 91.5, 299.4, 91.3, 300.2, 91.7, 302.3, 90.2, 303.5, 94.3, 306.1, 91.2, 307.2, 91.3, 308.8, 90.1, 308.9, 89.6, 309.6, 88.9, 311.2, 92.9, 312.6, 92.5, 313.8, 93.1, 314.2, 95.4, 314.6, 97.4, 314.2, 98.2, 314.6, 98.3, 315.2, 97.4, 316.2, 96.3, 315.8, 95.4, 316.3, 93.9, 318.2, 93.9, 318.7, 91.6, 321.5, 91.3, 322.4, 92.5, 322.7, 93, 323.4, 91.2, 323.6, 89.7, 325.6, 89.7, 326.7, 88.8, 328.1, 87.3, 326.9, 84.9, 327.2, 84, 328, 85.1, 328.9, 88.9, 329.1, 88.6, 330.2, 85.4, 330.7, 84.1, 332.5, 85.4, 333.2, 85.8, 334.1, 86.1, 333.7, 89.2, 333.2, 89.6, 333.5, 88.4, 334.6, 87.1, 334.8, 86.1, 336.3, 87.1, 336.6, 89.6, 336.2, 90.4, 335.2, 91.1, 335.1, 91.2, 335.5, 90.5, 336.5, 89.6, 336.8, 88.5, 338.2, 89.2, 338.7);\n        s_europe.polygon(126.6, 268, 126.2, 268.6, 127, 269.2, 127.1, 270, 126.3, 270, 125.6, 269.5, 124.7, 270.6, 124.8, 271.3, 125.3, 272, 125.4, 272.8, 125.1, 273.6, 124.3, 274.1, 124.1, 274.5, 124.8, 274.8, 128.9, 274.2, 128.8, 271.9, 129.5, 271.8, 131.5, 269.5, 131.7, 272.5, 130.7, 273.1, 129.2, 276.3, 129.3, 277.2, 128.7, 278, 128.8, 280.2, 129.1, 280.8, 129.1, 282.3, 128.1, 284.1, 128, 285.1, 126.9, 287.2, 126.8, 288.3, 128.4, 288.3, 129, 287.5, 129.2, 286.4, 129.1, 285.6, 129.6, 284.6, 129.4, 283.7, 130.7, 282, 130.6, 281.3, 129.9, 280, 130.6, 279.2, 131.3, 279.6, 131.5, 280.4, 132.1, 280.8, 132.2, 281.3, 132.9, 282.2, 134.9, 277.9, 134.8, 278.8, 135, 279.3, 136.3, 280.2, 135.3, 280.4, 134.5, 281.5, 134.3, 282.5, 134.4, 283.2, 135.8, 285.3, 135.9, 286.2, 135.8, 286.8, 135.5, 287.2, 134.9, 287.6, 131.7, 293.6, 131.8, 295.9, 133.1, 295.6, 133.3, 295.4, 134.6, 295.4, 137.1, 297.5, 137.9, 297.5, 137.7, 296.6, 137.5, 296.4, 137.4, 295.2, 139.8, 296.3, 140.3, 297, 140.9, 296.9, 142.5, 295.8, 143.1, 295.7, 143.9, 295.2, 144.2, 294.3, 145.1, 294, 146, 294.2, 146.4, 294.9, 145.2, 296.6, 145.3, 297.1, 144.9, 298, 143.4, 299.3, 143.5, 300.2, 144.6, 301.5, 145.2, 304.2, 146.1, 305, 146.8, 306.2, 147.4, 306.1, 147.9, 305.3, 148.6, 305.4, 150.2, 306.5, 149.5, 307.5, 149.4, 308.1, 148.8, 308.5, 148, 309.5, 147.7, 310.5, 148.4, 311.8, 148.3, 312, 148.1, 313, 147.1, 314.5, 148, 316.1, 149, 316.8, 148.4, 316.9, 146.7, 316.3, 147.1, 317.7, 146.6, 317.8, 145.7, 317.1, 138.6, 318.3, 136.8, 320.1, 136.6, 320.8, 133.2, 323.9, 134, 324.1, 135.7, 323.6, 136.3, 322.8, 137.5, 322.6, 138.2, 323.1, 138.6, 330, 137.7, 331.1, 135.6, 332, 135, 332.8, 133.8, 332.9, 131.1, 334.7, 128.8, 335, 128.2, 335.8, 128.4, 336.6, 129, 337, 129.1, 337.7, 128.6, 338.3, 128.6, 338.8, 129.2, 339.1, 128.7, 339.8, 130.8, 340, 132.6, 339.5, 133, 339, 134.1, 338.9, 134.7, 338.2, 135.2, 338.5, 136.2, 339.9, 137.3, 339.8, 137.4, 340.5, 136.1, 340.5, 135.6, 341.2, 136.3, 341.7, 137.7, 341.6, 138.5, 340.6, 139.5, 340.5, 140.4, 341.1, 140.4, 341.8, 140.8, 342, 140.9, 342.7, 142.3, 343.7, 143.8, 344.3, 145.7, 344, 146, 343.6, 146.1, 342.8, 146.6, 342, 148.2, 341.8, 150.2, 340.8, 150.7, 340.1, 152.3, 339.1, 146.7, 345.8, 146.5, 346.4, 146.3, 346.7, 143.7, 347, 142.5, 345.9, 141.8, 346, 140.7, 345.8, 136.9, 346.3, 135.9, 348.8, 134.9, 349.3, 134.1, 348.7, 133.2, 350.2, 133.3, 351.4, 130.5, 354.6, 129.5, 354.7, 126.6, 358.4, 124.5, 359.8, 123.4, 359.9, 122.4, 360.4, 122.1, 361.7, 123.8, 361.6, 124.3, 360.9, 125.2, 360.8, 126.2, 361.4, 126.4, 362.5, 126, 362.6, 126.7, 363.1, 127.4, 363, 127.9, 362, 127.8, 361.4, 129.4, 359.9, 130.4, 359.8, 130.3, 359.3, 130.8, 358.6, 135.8, 357.7, 136.2, 357, 136.9, 357.6, 137.1, 358.6, 137.6, 358.6, 138, 359.4, 139.2, 360.3, 140.3, 360.5, 140.3, 359.8, 141.3, 359.1, 142, 358.2, 142.1, 357.5, 142, 356.9, 142.3, 355.2, 145.7, 353.5, 149.2, 353.8, 150.9, 355, 156.4, 354.6, 156, 353.5, 160.9, 352.7, 160.8, 352, 161.2, 351.5, 164.8, 352.4, 165.5, 352.9, 177.8, 352.4, 180.1, 350.9, 181, 350.9, 181.5, 350.3, 181.4, 349.6, 183.1, 348.6, 184.4, 348.3, 185.5, 347.6, 185.3, 346, 185.6, 344.5, 185, 344.1, 183.1, 344, 182.9, 344.4, 178.4, 343.9, 177.8, 343.5, 177.5, 343, 177.7, 342.8, 180.9, 342, 181.3, 341.4, 181.4, 340.4, 180.8, 339.9, 179.5, 339.7, 180.1, 339.6, 180.7, 338.8, 181.6, 338.7, 182.3, 338.9, 182.7, 338.4, 183.9, 338.2, 184.3, 337.4, 183.5, 337.2, 182.5, 336.4, 184.9, 335.8, 186.5, 334.3, 188, 329, 187.6, 327.8, 187.9, 326.4, 185.8, 324.2, 179.5, 322.3, 177.2, 323, 176.7, 324.4, 176, 325, 174.8, 325, 174.7, 324.6, 174.7, 323.8, 174, 322.8, 174, 322.2, 175.9, 320.9, 174.8, 316.6, 173.9, 315.5, 172.6, 314.6, 171.4, 306.2, 169.6, 304.6, 168.8, 303.1, 168.7, 302.4, 168.9, 301.8, 166.9, 300.3, 163.3, 299.2, 162.7, 298.8, 161.3, 292.8, 160.4, 292.1, 159.8, 289.6, 160.1, 288.2, 159.8, 286.7, 152.5, 279.9, 149, 280.7, 146.4, 280.2, 146.7, 279.8, 148.3, 279.5, 148.4, 278.5, 150.2, 277.4, 151.3, 277.3, 151.9, 276.6, 152.3, 275.1, 148.5, 274.7, 151.6, 273.1, 152.4, 273, 155.2, 269.1, 155.4, 267.7, 156.5, 266.2, 157.4, 262.5, 158.6, 260.5, 158.8, 259.8, 159.4, 259, 156.8, 256.1, 156, 256.3, 155, 256.8, 151, 256.6, 150.2, 256.9, 146.8, 256.5, 145, 257.2, 144.4, 257.9, 143, 258.2, 142.5, 257.8, 142.9, 256.5, 142.8, 256.2, 143.8, 254.9, 141.1, 253.6, 141.7, 253.7, 144.3, 251.4, 145.5, 251.1, 149.2, 247.2, 149.8, 245.9, 149.4, 245.1, 150, 243.9, 149.4, 243.1, 140.4, 244.9, 139.4, 244.1, 138, 244.3, 137.5, 243.9, 136.7, 243.7, 136, 243.2, 135.6, 243.7, 135, 246.7, 134.6, 247.5, 133.7, 247.8, 133, 249.8, 132.1, 251.1, 133.9, 252.7, 132.7, 253.2, 130.8, 253.3, 130.3, 253, 129.2, 253.5, 129.4, 255.4, 129, 256, 129.7, 257, 129.5, 257.7, 128.9, 258.2, 128.6, 259.3, 129.3, 260.2, 129.4, 260.7, 128.9, 261.8, 129.5, 263.8, 128.3, 265.1, 128.4, 267.4, 127.8, 268.1);\n        s_europe.polygon(407.2, 520.2, 405.8, 521.5, 405.1, 520.7, 405.3, 519.8, 396.8, 518.8, 395.4, 519.9, 390.1, 520.2, 388.7, 518.4, 386.1, 518.8, 385.1, 517.5, 384.9, 518.9, 383.7, 518.9, 383.4, 521.9, 394.7, 523.2, 396.6, 525.7, 398.5, 524.3, 402.5, 524.2, 404.4, 522.8, 408.9, 522.8, 410.6, 521.4, 410.7, 520.6);\n        s_europe.polygon(530.9, 366.6, 528.8, 366.3, 523.5, 362.9, 521.9, 363.5, 517, 361.1, 513.2, 361.8, 507.2, 356.1, 506.3, 356.8, 498.8, 358, 496.9, 357.3, 495.5, 356.1, 494.8, 356, 492.9, 356.5, 490.7, 355.5, 490.1, 354.6, 489.9, 351.7, 488.5, 348.5, 486.5, 347, 480.4, 346.3, 480.1, 345.2, 480.1, 344.4, 479.5, 343.7, 478.9, 341.7, 480.2, 340.3, 480.5, 339.3, 478.2, 336.7, 477.7, 335.2, 476.2, 333.8, 469.4, 333.4, 467.5, 334.8, 465.9, 334.8, 465.6, 334.4, 463.8, 333.8, 462, 336.4, 459.3, 337.1, 458, 336.5, 456.8, 336.5, 457.1, 335.5, 457.1, 334.3, 456.1, 332.2, 455.5, 327.9, 453.8, 325.3, 454.6, 323.6, 461.9, 323.9, 463.5, 323.3, 465.1, 321.6, 465.1, 320.7, 462.8, 316.8, 461.3, 316, 458.1, 315.9, 457.8, 315, 458.4, 313.5, 458.3, 312.2, 457.2, 312.2, 454.9, 311.1, 452.2, 307.2, 451.9, 305.7, 449.7, 303.7, 449.2, 301.4, 450.8, 299.1, 449.3, 297.5, 449.3, 294.2, 447.6, 292, 445.2, 290.5, 439.8, 290.6, 438.8, 291.4, 436.3, 291.8, 435.9, 291.4, 435.5, 288.9, 435.1, 288.2, 430.6, 288.9, 429.5, 287.7, 427.1, 287.7, 425.4, 286.6, 425.5, 283.4, 425.2, 282.4, 424.6, 281.8, 424.2, 280.8, 422.6, 279.1, 422.4, 278, 422.1, 277.6, 420.9, 277.7, 420.9, 277, 421.8, 276, 422, 271.5, 419.1, 268.5, 415.8, 268.4, 419.1, 268.5, 419.1, 266.2, 421.3, 264.1, 421.4, 262.4, 419.5, 260.5, 420, 254.2, 419.3, 252.7, 419.3, 251.6, 420, 250.5, 420.6, 250.5, 421.5, 249.8, 422, 248.8, 422.7, 248.1, 422.3, 246.8, 424, 245.4, 425.5, 245.4, 425.3, 244.1, 424, 242.7, 423.6, 243.2, 421.6, 244, 415.8, 243.9, 413.3, 242.7, 410.7, 242.6, 410, 242.3, 405.1, 241.8, 404.1, 242.2, 402.9, 242.2, 402, 241.7, 401, 243.1, 395.7, 243.1, 394.9, 243.9, 391.9, 243.9, 390.6, 244.3, 390, 245.4, 384.4, 247.5, 383.9, 248.1, 383.9, 249.6, 384.8, 250.5, 384.2, 251.1, 384.4, 256.2, 385.7, 258.3, 386.9, 258.7, 388.4, 258.7, 389, 259.4, 391.7, 258, 393.1, 259.6, 393.1, 260.5, 391.6, 262.7, 391.6, 264.1, 392.4, 264.3, 391.4, 264.3, 391.3, 267.4, 392.1, 268.8, 392, 271.1, 390.5, 273.1, 386.4, 275.4, 383.3, 275.1, 374.5, 265.7, 374.1, 266.1, 373, 266.1, 371.8, 266.7, 370.6, 266.8, 369.8, 267.7, 367.8, 267.9, 364.9, 272, 364.9, 274.1, 364.2, 275.5, 361.6, 278.1, 360.9, 280.1, 362.3, 291.8, 362.8, 292.3, 363.3, 294.2, 363, 295.1, 363.4, 295.5, 363.5, 296.8, 362.2, 297, 361, 298.1, 361, 300.1, 360.8, 300.9, 359.1, 301.7, 353.4, 301.8, 353.2, 302.6, 354.1, 305.4, 352.7, 305.9, 351.5, 305.9, 348.6, 308.8, 341.9, 308.5, 340.6, 308, 339.3, 306.7, 338.6, 305.2, 338.6, 304.2, 337.8, 303.3, 331.5, 303.2, 318.1, 308.8, 317.4, 309.5, 316.3, 309.5, 315.7, 310.1, 308.7, 311.6, 308.1, 312.1, 305, 313.4, 304.4, 314, 303.3, 314, 301.3, 315.9, 300.5, 315.9, 299.8, 315.1, 299.1, 313.6, 297.8, 312.3, 294.5, 312.3, 293.4, 311.2, 291.3, 311.2, 288.6, 308.6, 284.9, 309.2, 282.8, 311.8, 281.9, 311.5, 280.8, 311.8, 280.1, 312.4, 278.9, 311.6, 277.6, 312.8, 277.7, 312.9, 277.4, 313.4, 275.8, 314.6, 274.9, 314.6, 273.8, 315.1, 272.5, 315.1, 271.9, 315.6, 271.9, 316.3, 270.9, 316.3, 270.9, 317.4, 270.2, 317.4, 269.6, 316.8, 267.9, 316.9, 267, 317.6, 266.1, 316.6, 267.9, 315, 268.2, 314.2, 268.2, 313.4, 267.7, 312.3, 266.7, 313.2, 265.3, 313.3, 264.6, 312.7, 262.9, 312, 262, 312, 261.7, 312.2, 261.2, 311.4, 259.4, 311.4, 258.8, 308.4, 258.6, 308.2, 258.3, 307.6, 258.2, 307.1, 258.1, 307, 258.2, 306.4, 258.3, 306.3, 258.9, 306.2, 258.9, 306.4, 258.6, 306.6, 258.8, 306.7, 258.8, 307.1, 259.4, 307.2, 259.5, 307.5, 259.7, 307.6, 259.9, 307.4, 259.8, 307.1, 259.6, 306.9, 259.6, 306.7, 259.7, 306.7, 259.8, 306.8, 260, 306.6, 260, 306.3, 260.2, 306.5, 260.3, 306.7, 260.9, 306.7, 261, 306.5, 261.1, 306.5, 261.3, 306.6, 261, 306.6, 260.8, 306.8, 261.1, 307, 261.2, 307, 261.3, 307.1, 261.6, 307.1, 261.7, 307, 261.8, 307, 262.4, 306.8, 262.4, 306.7, 262.2, 305.7, 260.1, 304.1, 259, 304, 258.8, 304.3, 258.9, 304.5, 259.2, 304.5, 258.8, 304.6, 260, 305.2, 260.1, 305.4, 260.4, 305.5, 260.8, 305.9, 260.5, 306.1, 260.1, 305.7, 259.9, 305.6, 259.9, 305.9, 259.7, 305.9, 259.7, 305.4, 259.5, 305.3, 259.4, 305.2, 259.1, 305.3, 258.9, 305.1, 258.7, 305.1, 258.4, 304.7, 258.5, 304.6, 258.1, 304.5, 258, 304.7, 257.6, 304.7, 257.3, 304.8, 257, 304.8, 257.3, 304.4, 257.6, 304.4, 257.7, 304.3, 257.8, 304.2, 257.7, 303.9, 257.7, 303.6, 257.5, 303.4, 257.3, 303.4, 257.3, 303.3, 257.6, 303.3, 257.8, 303.1, 257.4, 303, 258.1, 302.4, 258.6, 302.5, 259, 302.1, 259.2, 301.8, 259.3, 301.8, 259.2, 301.5, 259.2, 301.3, 258.9, 301.1, 258.6, 301.1, 258.5, 301, 258.7, 300.7, 258.6, 300.6, 258.4, 298.8, 258.6, 298.8, 258.8, 298.6, 258.8, 298.3, 258.6, 298.1, 258.5, 298.2, 257.5, 298.2, 257.5, 297.9, 257.9, 297.8, 257.9, 297.6, 258.2, 297.5, 258.7, 297.8, 258.9, 297.6, 259.4, 298.2, 259.6, 298.2, 260.1, 298.7, 259.9, 298.7, 259.6, 298.5, 259.3, 298.5, 259.3, 298.6, 259.8, 299, 260, 299, 260.1, 299, 260, 299.1, 260.1, 299.2, 260.2, 299.3, 260.2, 299.5, 260, 299.7, 260.4, 300, 260.8, 300.2, 260.8, 300.7, 261, 300.9, 260.9, 301, 261.1, 301.5, 261, 301.6, 261.3, 301.8, 261.7, 301.9, 261.7, 302.6, 261.9, 302.9, 261.9, 303.3, 262.1, 303.3, 262.1, 302.8, 262, 302.7, 261.8, 302.3, 262, 302.2, 262.2, 302.4, 262.5, 302.4, 262.8, 302.3, 262.9, 302.4, 262.9, 302.6, 263.1, 302.9, 263.2, 303.3, 263, 303.4, 262.8, 303.5, 262.5, 303.7, 262.6, 303.7, 263.4, 303.8, 263.5, 304, 263.7, 304, 263.7, 303.9, 263.7, 303.6, 263.8, 303.5, 264.2, 303.8, 264.4, 303.9, 264.6, 303.9, 264.9, 304.2, 265.3, 304.2, 265.5, 304.3, 265.9, 304.3, 266.2, 304.4, 266.7, 304.4, 267.1, 304.1, 268.2, 304, 268.4, 303.7, 268.4, 303.4, 268.7, 302.6, 268.7, 301, 268.6, 300.7, 268.7, 300.6, 269, 300.6, 268.6, 299.5, 267.8, 298.7, 267.7, 298.1, 267.7, 298, 268, 298, 268.1, 297.8, 267.6, 297.4, 267.6, 297, 267, 296.1, 267, 296.2, 267, 296.6, 266.9, 296.7, 267, 296.8, 267, 297.3, 266.8, 297.2, 266.7, 297.3, 267, 297.6, 266.9, 297.7, 267, 298, 266.5, 298, 266.4, 298.1, 266.2, 298.2, 266, 298.5, 265.7, 298.5, 265.5, 298.3, 265.5, 298, 265.8, 297.9, 266.1, 297.7, 265.9, 297.7, 266, 297.5, 265.9, 297.4, 266.3, 297.2, 266, 297.2, 265.8, 297, 265.5, 297, 265.4, 296.8, 265.3, 296.5, 265.1, 296.3, 264.8, 296.3, 264.3, 296, 264.2, 296.1, 264.2, 296.4, 264, 296.4, 264, 296.2, 263.8, 296.2, 261.2, 297.4, 261.1, 297.6, 260.6, 297.6, 260.3, 297.2, 260.2, 297.3, 259.6, 297.2, 259.7, 296.8, 259.8, 296.6, 260.5, 296.2, 260.5, 296.1, 260.4, 296, 260, 295.9, 259.4, 296, 259.2, 295.6, 258.5, 295, 258, 295, 257.9, 294.8, 258.6, 294.8, 260.1, 295.3, 261.6, 294.8, 261.6, 294.6, 262, 294.3, 262.1, 294.2, 261.7, 294, 262, 293.5, 262, 293.3, 261.9, 293.2, 261.3, 293.1, 260.9, 293, 260.6, 293, 260.6, 292.7, 261.8, 292.8, 261.9, 292.7, 261.4, 292.7, 261.4, 292.5, 261.6, 292.4, 262.5, 292.4, 262.7, 292.5, 262.8, 292.7, 262.9, 292.9, 263.2, 293, 263.2, 292.8, 263.4, 292.7, 263.1, 292.4, 263.6, 292, 263.8, 291.5, 263.8, 291.1, 263.6, 290.7, 263.8, 290.2, 263.8, 290.1, 263.4, 290.1, 263.8, 289.8, 263.4, 288.5, 263.6, 287.8, 264.3, 286.9, 264.5, 286.3, 264.8, 286.2, 265.4, 286.4, 265.4, 286.7, 265.2, 287, 265.2, 287.4, 264.9, 287.4, 264.9, 287.3, 264.5, 287.4, 264.5, 287.9, 264.7, 288.3, 264.9, 288.3, 265, 288.1, 265.1, 288, 265.9, 288, 266, 287.9, 266.1, 287.6, 266.3, 287.3, 267, 287.3, 267.1, 287.4, 267, 287.5, 267, 287.7, 266.8, 287.8, 267.2, 288.3, 267.5, 288.3, 267.6, 288.2, 267.7, 288, 267.6, 287.6, 267.7, 287.1, 268.6, 285.7, 268.9, 285.5, 268.8, 284.6, 269.4, 283.9, 268.6, 283.2, 268.4, 282.9, 268.1, 282.8, 268, 282.6, 266.5, 282.8, 266.3, 283.1, 265.5, 283.1, 264.5, 282.6, 264.3, 282.6, 264.2, 282.3, 264.2, 282.1, 264, 282, 263.8, 282.2, 263.4, 282.3, 263.3, 282.5, 263.3, 282.6, 263.2, 283.3, 263.1, 282.9, 263.2, 282.3, 264.1, 281.3, 264.1, 281, 263.4, 280.5, 263.2, 280.6, 262.9, 280.5, 263.6, 280.4, 263.7, 280.5, 264, 280.2, 263.9, 279.8, 263.6, 279.6, 263.5, 279.3, 263.3, 279, 263.5, 276.2, 263.9, 276, 264.8, 273.3, 265.4, 272.8, 265.3, 269.7, 265.4, 269.4, 264.4, 268.5, 264.3, 267.4, 264.5, 266.6, 265, 266.1, 265.3, 266, 265.9, 265.4, 265.8, 265.2, 264.9, 265.5, 263.4, 266.9, 262.9, 267.1, 262.7, 267.4, 260.5, 267.6, 257.2, 273, 256.1, 273.8, 254.3, 274.3, 252.9, 273.9, 251.8, 274.3, 251.7, 274.6, 250, 274.8, 249.6, 274.7, 249.1, 275.1, 248.9, 275.3, 248.9, 275.6, 246.5, 279.2, 246.4, 280.2, 246.7, 280.5, 246.7, 280.5, 246.7, 279.6, 247.2, 280, 247.2, 280.7, 248.3, 281.4, 248.4, 281.6, 248.7, 281.9, 248.9, 282.3, 249.2, 282.2, 249.4, 282.1, 249.4, 281.7, 249.3, 281.5, 249.2, 281.3, 249.2, 281, 249.1, 281, 248.8, 281.2, 248.7, 281.1, 248.9, 280.8, 248.7, 280.6, 248.6, 279.9, 248.5, 279.8, 248.6, 279.6, 248.6, 279.3, 248.7, 279.2, 248.9, 279.1, 249, 278.9, 249.2, 278.7, 249.5, 278.6, 249.6, 278.4, 249.6, 278.2, 249.7, 277.9, 249.5, 277.8, 250.1, 277.1, 250.8, 277.1, 251.2, 276.5, 251.2, 276.3, 251.4, 276.5, 251.6, 276.3, 251.6, 276, 251.8, 276.2, 251.9, 276.3, 252.2, 276.3, 252.4, 276.2, 253.2, 276.1, 253.7, 275.7, 253.5, 275.5, 253.2, 275.2, 253.1, 274.7, 253.2, 275, 253.7, 275.3, 253.9, 275.7, 254.1, 275.7, 254.2, 276, 254.7, 276.4, 255, 276.5, 255.2, 276.1, 256.2, 275.7, 256.3, 275.7, 256.7, 275.5, 257, 275.5, 257, 275.7, 257.6, 275.5, 257.7, 275.4, 258.5, 275.4, 259.2, 275, 259.4, 274.9, 259.6, 274.9, 259.9, 275, 260.4, 275.4, 260.2, 275.4, 260, 275.5, 259.8, 275.7, 258.5, 275.7, 258.3, 275.9, 258.2, 276.3, 258, 276.4, 257.9, 276.5, 257.8, 276.7, 257.6, 276.9, 257.6, 277.2, 257.3, 276.9, 257.3, 276.8, 257.5, 276.6, 257.5, 276.3, 256.6, 276.2, 255.2, 276.4, 254.9, 276.9, 254.8, 277.1, 254.4, 277.4, 254.3, 277.9, 254.7, 278.3, 254.7, 278.6, 254.4, 278.7, 254.4, 279.2, 254.5, 279.5, 254.6, 279.5, 254.9, 279.7, 255, 279.9, 254.9, 280.2, 254.5, 280.7, 254.4, 280.9, 254.4, 281.2, 254.6, 280.9, 254.9, 280.7, 255.4, 280.7, 255.5, 280.8, 255.5, 281.7, 255.3, 282.2, 255.3, 282.4, 255.6, 282.6, 256.1, 282.6, 256.1, 282.8, 255.8, 282.8, 255.5, 283, 255.3, 283, 255.2, 282.9, 255.1, 282.7, 255.1, 282.2, 255.3, 281.8, 255.1, 281.6, 255, 281.7, 254.8, 281.9, 254.2, 281.9, 253.7, 282.3, 253.7, 282.7, 253.4, 282.7, 253.4, 282.4, 253.2, 282.3, 253.5, 281.8, 253.4, 281.7, 253.8, 281.4, 253.9, 281.1, 253.9, 280.8, 254.1, 280.6, 253.9, 279.7, 253.7, 279.6, 253.7, 279.4, 253.4, 279.2, 253, 279.3, 252.5, 279.2, 251.7, 280.1, 251.6, 280.4, 252, 280.5, 252.1, 280.7, 251.2, 281, 250.8, 281.8, 250.4, 281.9, 250.3, 281.9, 250.3, 282.5, 250.5, 282.7, 250.7, 282.9, 250.8, 283.6, 250.5, 283.8, 249.7, 283.6, 250, 283.8, 249.8, 283.8, 249.6, 283.6, 249.6, 283.2, 249.3, 283, 249.3, 282.9, 249.3, 282.6, 249.1, 282.6, 249, 282.8, 248.8, 282.8, 248, 282.5, 247.2, 282.5, 247.1, 282.7, 247, 282.7, 246.9, 282.3, 246.5, 282, 246.6, 281.9, 246.2, 281.8, 246.2, 281.5, 246.3, 281.4, 246.2, 280.8, 245.8, 281.4, 245.8, 282.1, 245.5, 282.5, 245.5, 285, 245.7, 285.1, 245.7, 284.7, 245.8, 284.5, 246.4, 285, 246, 285, 245.9, 285.2, 247, 286.1, 247, 286.2, 246.7, 286.6, 246.6, 286.5, 246.6, 286.2, 246.1, 286.3, 246, 286.1, 245.6, 285.9, 245.5, 290.7, 245.8, 290.9, 245.9, 290.8, 245.6, 289.3, 246.9, 290, 247.2, 290.4, 247.3, 291, 247.4, 291.3, 247.8, 291.6, 247.8, 291.9, 247.7, 292.2, 246.9, 293.1, 246.4, 293.3, 246.3, 293.3, 246.3, 292.9, 246.1, 292.8, 245.9, 291.4, 246, 295.3, 245.9, 295.7, 245.6, 296.1, 245.6, 296.9, 245.3, 297.3, 245.6, 297.5, 245.9, 297.5, 247.2, 298.6, 247.4, 298.4, 247.1, 298, 246.4, 297.4, 246.7, 297, 247.3, 296.9, 247.2, 297.1, 247.4, 297.3, 247.4, 297.6, 248.9, 298.7, 249.1, 298.7, 249.4, 299, 249.7, 299, 250, 299.5, 250.2, 301.8, 250.5, 302.4, 250.2, 305.3, 250.5, 305.6, 250.5, 307.7, 251.6, 308.7, 252.1, 309.9, 252.5, 310.3, 252.5, 311.3, 251.7, 312.1, 250.8, 312.1, 250.1, 313.5, 251.3, 313.5, 251.3, 315.1, 251.9, 315.6, 252.8, 315.6, 252.5, 316.8, 251.8, 316.8, 251.8, 317.4, 252.3, 318.1, 253.1, 318.8, 251.2, 318.8, 250.8, 318.4, 249.8, 318.3, 249.8, 318.8, 248.9, 319.4, 249.2, 323.7, 248.3, 322, 247.6, 321.4, 247, 321.4, 247, 323.2, 247.4, 323.6, 246.7, 323.7, 245.7, 322.8, 245.8, 321.7, 245.5, 320.6, 245.1, 320.3, 239.5, 320.7, 238.6, 321.5, 238.6, 322.3, 237.9, 322.9, 238.2, 324.1, 238.7, 324.5, 239.3, 324.5, 239.9, 325.1, 239, 325.5, 238.4, 325.1, 238.1, 325.1, 238, 325, 237.7, 324.9, 237.6, 324.6, 237.5, 324.5, 237.4, 324.4, 236.4, 324, 236.4, 324, 236.2, 323.9, 236.2, 323.7, 236, 323, 236.1, 322.8, 235.7, 322.6, 235.7, 322.5, 235.4, 322.5, 235.2, 322.4, 234.5, 322.5, 234.1, 322.7, 232.5, 322.9, 232, 323.2, 231.9, 323.3, 231.6, 323.2, 231.5, 323, 231.1, 323, 231.1, 323.2, 231.1, 323.2, 231.1, 323.2, 231, 323.2, 230.9, 323.3, 230.9, 323.4, 231, 323.4, 231.2, 323.4, 231.3, 323.5, 231.1, 323.7, 231.2, 323.6, 231.2, 323.5, 230.8, 323.5, 230.8, 323.4, 230.8, 323.2, 230.9, 323.1, 229.5, 323.1, 226.6, 324.1, 225.1, 325.3, 224.8, 326.1, 224.6, 326.4, 224.7, 326.6, 224.7, 326.7, 224.6, 326.7, 224.6, 326.8, 224.7, 327.2, 224.8, 327.3, 224.8, 327.4, 224.9, 327.9, 224.7, 328.4, 224.8, 328.5, 224.6, 328.6, 224.3, 328.8, 224.7, 329.1, 225, 329.2, 225.1, 329.1, 225.3, 329.1, 225.7, 329.4, 226, 329.4, 226.1, 329.3, 226.6, 329.1, 226.7, 329.2, 226.7, 329.3, 227, 329.3, 227.1, 329.4, 226.9, 329.4, 226.7, 329.5, 226.2, 330.2, 226.1, 331.3, 226.2, 331.5, 226.5, 331.9, 227.8, 332, 228.5, 331.8, 228.7, 331.8, 228.9, 331.7, 229, 331.5, 229.3, 331.5, 229.4, 331.7, 228, 332.1, 227.9, 332.4, 228, 332.6, 228.1, 333.3, 227.6, 334.1, 227.2, 334.3, 226.9, 334.6, 226.7, 334.7, 226.3, 334.8, 225.7, 335.2, 225.7, 335.3, 225.7, 335.5, 225.4, 335.8, 225.1, 335.9, 224.9, 335.9, 224.6, 336, 224.4, 336, 224.4, 336, 224.2, 336, 224, 335.7, 223.8, 335.7, 223.4, 335.4, 222.7, 335.4, 222.2, 335.1, 221.8, 335.1, 221.8, 334.8, 221.3, 334.7, 221.1, 334.4, 221.8, 334.4, 222.3, 333.7, 222, 333.6, 221.9, 333.5, 221.9, 333.3, 222, 333.2, 222.1, 333.1, 222.1, 332.9, 222, 332.8, 222, 332.3, 221.8, 332.1, 221.7, 331.7, 221.8, 331.5, 222.8, 331.7, 223.1, 331.5, 223.3, 331.5, 223.4, 331.4, 223.4, 331.2, 223.6, 331.1, 223.8, 331.1, 223.9, 330.8, 223.9, 330.6, 223.5, 330.2, 222.9, 330.3, 222.7, 330.5, 222.6, 330.4, 222.5, 329.1, 222.2, 328.5, 222.3, 328.3, 221.7, 328, 221.1, 328.5, 221.1, 328.6, 221.2, 328.9, 220.8, 328.8, 220.6, 328.6, 220.5, 328.6, 220.2, 328.3, 220.4, 327.8, 220, 327.7, 219.6, 327.9, 218.3, 333.1, 218.8, 333.4, 218.4, 333.3, 218.2, 333.5, 216.7, 336.3, 214.8, 338.2, 214.8, 338.4, 214.5, 338.6, 214.9, 339.1, 215.1, 339.1, 215.7, 339.6, 215.2, 339.6, 214.8, 339.2, 214.6, 339.2, 214.2, 338.8, 213.9, 338.8, 213.7, 338.8, 213.8, 339.9, 214, 340.2, 214.2, 340.2, 214.7, 340.6, 214.9, 340.6, 215.5, 341.2, 215.9, 341.2, 216.1, 341.4, 217.2, 341.9, 218, 341.9, 218.6, 341.4, 218.7, 341.5, 218.8, 341.5, 218.9, 341.6, 219.1, 341.6, 219.3, 341.4, 219.4, 341.5, 219.5, 341.3, 219.8, 341.3, 219.8, 341.5, 220.1, 341.5, 220.1, 341.8, 219.9, 341.9, 219.4, 341.9, 219.4, 341.8, 219.1, 341.8, 218.9, 341.9, 218.6, 341.9, 218.5, 341.9, 218.1, 341.9, 217.6, 342.3, 217.3, 342.3, 217, 341.9, 215.7, 341.8, 215, 341.2, 215, 341.1, 214.9, 341.1, 214.3, 340.6, 214.1, 340.6, 213.9, 340.3, 213.7, 340.3, 213.5, 340.2, 213.4, 340.3, 213.1, 340.3, 213, 340.4, 212.7, 340.4, 212.4, 340.5, 212.4, 340.9, 212.6, 340.9, 212.8, 340.7, 213, 340.7, 213.4, 340.7, 213.6, 341, 213.6, 341.2, 213.7, 341.4, 213.8, 341.6, 214, 341.7, 214.4, 341.7, 214.6, 341.9, 214.7, 341.9, 215.2, 342.3, 216, 342.3, 216.3, 342, 216.3, 342.2, 216.1, 342.4, 215.8, 342.6, 215.7, 342.7, 214.7, 342.6, 214.6, 342.5, 214.2, 342.5, 214.2, 342.6, 214.5, 342.8, 214.7, 342.8, 214.8, 342.9, 214.9, 342.9, 214.9, 343.2, 214.8, 343.1, 214.7, 342.9, 214.2, 342.9, 214.1, 342.8, 214, 342.8, 213.8, 342.9, 213.7, 343, 213.4, 342.9, 213.3, 343.1, 213.6, 343.5, 213.7, 343.7, 214, 343.9, 214.5, 343.9, 214.7, 344.1, 215, 344.1, 215.1, 344.1, 215.3, 344.1, 215.6, 344.3, 215.6, 344.6, 215.4, 344.8, 215.3, 344.9, 214.2, 344.8, 213.2, 343.8, 212.8, 343.8, 212.6, 343.5, 211.4, 343.5, 211.1, 343.7, 210.6, 343.3, 210.6, 343.1, 211, 343.5, 211.2, 343.5, 211.3, 343.4, 212.3, 343.5, 212.5, 343.2, 212.5, 343.1, 212.3, 342.8, 210.9, 342.8, 210.7, 342.9, 210.4, 342.9, 210.3, 342.8, 210, 342.8, 209.9, 342.9, 209.6, 343, 209.3, 343.3, 209, 343.3, 209, 343.5, 209.2, 343.7, 209.2, 343.8, 209.9, 344.6, 210.5, 344.6, 210.8, 344.4, 210.8, 344.6, 211.2, 345.1, 211.4, 345.1, 211.8, 345.2, 212.4, 345.1, 212.5, 345.1, 212.5, 344.8, 212.7, 344.6, 212.9, 344.6, 213.1, 344.6, 213.3, 344.7, 213.4, 344.8, 213.6, 344.8, 213.9, 345.1, 214.8, 345.2, 215.1, 345.4, 214.9, 345.5, 214.8, 345.7, 214.8, 345.6, 214.6, 345.6, 214.5, 345.7, 214.2, 345.7, 214.1, 345.7, 214, 345.6, 213.9, 345.6, 213.7, 345.6, 213.3, 345.1, 212.8, 345.2, 212.8, 345.6, 212.4, 345.7, 212.2, 345.8, 211.7, 345.8, 211.6, 345.7, 211.2, 345.7, 211.1, 345.8, 210.4, 345.3, 209.9, 345.3, 209.6, 345, 209.4, 345, 209, 345.1, 208.7, 345.1, 208.1, 345.5, 206.7, 345.5, 206.3, 345.9, 205.6, 345.9, 203.3, 347.4, 201.6, 347.5, 201.1, 348.1, 196.2, 348.6, 195, 349.3, 190.5, 349.5, 188, 351.6, 187.7, 354.7, 187, 355.4, 187, 357.4, 188.1, 358.5, 185.1, 361.5, 182, 361.5, 179.7, 362.8, 178.7, 362.8, 175.2, 365.3, 175.2, 366.3, 175.8, 366.9, 177, 366.9, 177, 367.9, 175.5, 367.9, 174.7, 368.9, 164.4, 369, 163.3, 367.8, 162.1, 365.3, 156.8, 365.3, 157.2, 367.9, 158.4, 369.2, 158.4, 372.1, 159.8, 373.4, 159.8, 375.4, 160.6, 376.3, 159.8, 377.2, 153.5, 377.3, 152.5, 376.3, 151.2, 376.8, 150.3, 377.8, 146.4, 374.4, 145, 374.4, 143.7, 375.7, 142.7, 374.8, 141.3, 376.2, 134, 376.5, 131.5, 378.6, 131.5, 380.2, 134, 380.2, 133.9, 383.5, 132.8, 383.5, 132.8, 384.5, 134.3, 384.5, 135.9, 385.6, 135.9, 386.8, 141.3, 386.8, 143.1, 388.7, 145.2, 388.7, 146.2, 390.5, 151.8, 390.5, 152.7, 392.8, 154.9, 392.6, 156.4, 393, 154.7, 394.7, 154.9, 396.8, 158.4, 401.7, 162.6, 403, 163.7, 404.1, 162.4, 406.5, 163.8, 411.1, 166.8, 414.1, 166.9, 417.1, 165.8, 416, 165, 413.7, 164.1, 412.8, 162.7, 412.8, 161.5, 428.7, 160.7, 429.5, 160.9, 432, 157.4, 436.7, 151.2, 436.7, 150.2, 435.8, 148.7, 435.2, 147.6, 435.2, 146.2, 436.4, 143.6, 436.1, 142.3, 434.8, 110.4, 434.2, 107, 431.8, 102.8, 432, 101.2, 432.8, 101.2, 435.3, 100.3, 435.9, 93.8, 437.1, 91.4, 439.8, 91.4, 440.4, 92.6, 441.8, 94.3, 442.8, 94.7, 443.6, 94.9, 453.1, 94.3, 453.7, 94.6, 454.6, 94.6, 455.6, 95.3, 457.6, 95.3, 459.7, 95.9, 460.3, 96.3, 463.4, 95.6, 464.2, 95.6, 466.5, 95, 468.3, 95, 470.6, 93.5, 472.1, 93.3, 475.2, 92.2, 476.5, 91.8, 477.4, 90.5, 478.7, 90.6, 479.6, 90, 480.2, 89.4, 484.6, 90, 485.1, 90, 485.8, 91.3, 486, 93.7, 483.6, 93.7, 484.5, 91.8, 487, 91.8, 488.2, 95.2, 488.4, 95.5, 488.1, 94.9, 488.7, 95.5, 489.4, 94.9, 490.8, 94.7, 497.2, 95.2, 498.7, 95.2, 499.8, 93.6, 501.4, 94, 503.1, 94.4, 502.7, 98.3, 502.3, 100.8, 503.2, 104.1, 503.2, 104.5, 502.7, 106.7, 501.6, 107, 500.8, 112, 500.8, 114.5, 503.2, 116.4, 503.8, 117, 504.4, 117, 506.7, 117.4, 507.6, 118, 508.2, 118.8, 511.1, 121.1, 512.9, 122.2, 513, 122.8, 513.6, 123.9, 513.6, 125.2, 513.1, 126.6, 511.6, 126.6, 510.4, 128.6, 509.2, 132.2, 509.2, 133.5, 507.3, 134.1, 507.3, 134.6, 506.8, 139.1, 506.8, 140.1, 506.3, 144.8, 506.1, 145.4, 506.7, 147.8, 506.7, 149.3, 507.2, 150.9, 505.6, 151.5, 505.6, 153.9, 506.4, 156.4, 504, 157.1, 500.9, 160.9, 498.2, 164.1, 498.2, 165.3, 497.8, 165.3, 497.1, 166.9, 495.5, 168.1, 491.4, 171.6, 487.6, 172.4, 487.6, 174.9, 485.7, 171.4, 481.4, 171.1, 480.5, 171.8, 475.1, 178.6, 466.8, 181.2, 465.2, 180.6, 464.7, 180.6, 463, 181.8, 462.4, 182.7, 461.5, 187, 459.9, 188.2, 459.9, 188.7, 459.3, 189.7, 459.3, 191.9, 457.2, 193.1, 457.2, 194.4, 455.9, 194.7, 455, 194.7, 452.8, 195.5, 452, 195.5, 451, 196, 450.5, 196, 446.6, 195.6, 446.4, 195.7, 444, 195.5, 443.4, 196.1, 440.8, 197.9, 438.9, 199.1, 438.4, 200.6, 438.3, 205.4, 435.3, 206.5, 435.4, 206.5, 435.9, 206.7, 436.3, 206.8, 436.6, 208.6, 436.5, 209, 436.7, 210, 436.7, 210.4, 437.1, 211, 437.3, 211.6, 437.9, 212.1, 437.9, 212.4, 437.7, 214.8, 437.3, 215.1, 436.6, 215.3, 436.4, 215.6, 436.4, 216.6, 437.1, 216.6, 437.3, 216.3, 437.6, 215.1, 437.7, 215.1, 438.2, 217.8, 438.6, 218, 438.8, 218, 439, 218.3, 439.6, 218.2, 439.7, 218.7, 440, 218.9, 440, 220.4, 440.5, 221.1, 440.5, 221.2, 441, 222.9, 441.7, 223.2, 441.5, 225.1, 441.7, 225.3, 441.8, 225.7, 441.5, 229.8, 440.8, 230.3, 439.4, 230.9, 438.6, 233, 437.3, 233.3, 436.9, 233.6, 436.7, 234, 436.6, 234.3, 436.3, 235.3, 435.8, 235.3, 435.6, 236, 435, 237.2, 434.9, 237.8, 434.2, 239.4, 434.3, 239.8, 433.9, 244.1, 432.5, 244.9, 430.7, 247.4, 428.9, 247.4, 427.7, 250.3, 424.8, 253.9, 424.8, 256.3, 426.6, 259.2, 426.6, 265.2, 429.7, 266.5, 435.3, 268.3, 437.6, 268.3, 439.9, 270.6, 442.2, 271, 443.2, 288.1, 457.5, 290.3, 457.5, 291.8, 459.1, 295.9, 459.1, 302.4, 465.5, 305, 465.5, 309.6, 471.6, 312.1, 472.9, 313.3, 472.9, 314.6, 473.9, 314.6, 477, 317.3, 477.9, 317.3, 481.8, 318.7, 483.3, 317.5, 484.5, 316.8, 486.1, 315.4, 486.1, 315.4, 488.2, 314.6, 490.1, 312.8, 491.8, 312.8, 493.2, 317.5, 494, 321.8, 488.7, 321.8, 486.1, 323.5, 484.5, 327.4, 483, 326.8, 478.9, 322.1, 474.2, 322.1, 472.1, 325.9, 468.3, 327.2, 468.3, 328.7, 469.8, 332.6, 469.3, 334.3, 471.1, 334.3, 472.9, 337.9, 472.9, 338.6, 470.6, 338.3, 469.2, 324.4, 460.5, 324.1, 460.5, 315.8, 456.7, 316.8, 454.6, 318.4, 453.1, 317.1, 451.3, 306.7, 450.9, 304.9, 449, 300.5, 447.4, 298.4, 445.2, 297.7, 439.1, 292.9, 432.7, 290.4, 431.4, 289.4, 431.4, 284, 425.6, 284, 422.1, 285.5, 420.6, 285.5, 418.6, 284.3, 417.4, 283.6, 415.5, 282.4, 414.6, 284.3, 412.6, 285.7, 413, 286.7, 412.8, 288.2, 412.1, 288.8, 412.1, 288.5, 411.4, 288.9, 411, 291.4, 410.6, 292.2, 411, 292.7, 410.8, 293, 411.6, 293.4, 411.6, 294, 412.8, 295.2, 413.7, 294.9, 414.4, 295, 414.7, 295.6, 415.6, 295.5, 417.1, 298.8, 421.7, 299.7, 421, 299.8, 420.5, 299.8, 420, 300.2, 419.3, 300.4, 419.1, 301.5, 416.8, 301.5, 415.4, 302.3, 415.1, 302.6, 415.1, 304.1, 415.8, 304.5, 416.5, 306.5, 418, 306.7, 418.6, 307.1, 419, 307.5, 422.7, 310.4, 426.6, 310.5, 428.1, 312.4, 429.7, 312.8, 430.4, 317.5, 433.2, 317.6, 434.6, 318, 435.1, 319.1, 435.6, 319.4, 435.2, 320.5, 434.7, 326.9, 435.9, 340.4, 444.9, 340.8, 445.9, 348.1, 453.6, 348.1, 456, 347.7, 457.4, 347.7, 460.9, 346.8, 463.3, 346.8, 467.9, 352.8, 473.2, 353.2, 474.4, 353.8, 475, 354.5, 477.3, 357.2, 479.6, 358.4, 479.5, 360.9, 480.3, 361.3, 480.9, 361.1, 481.6, 357.6, 480.5, 358.4, 482.4, 359.3, 483.4, 360.2, 485.6, 360.3, 486.3, 360.7, 486.9, 361.3, 487.4, 361.8, 487.5, 362.4, 487.2, 362.5, 486.9, 363.4, 488, 364.5, 488.2, 365.2, 487.8, 366.4, 488, 367.1, 487.7, 367.6, 487.7, 367.8, 487.5, 369.4, 487.2, 375.2, 488.8, 379.3, 491.6, 379.2, 492, 378.2, 492.3, 377.3, 492, 376.7, 492.3, 376.8, 492.8, 376.6, 493.2, 376.2, 493.4, 373.3, 491.5, 373.1, 491.2, 370, 490.1, 369.2, 489.3, 367.6, 488.5, 366.1, 489, 366, 489.5, 365.4, 489.6, 365, 489.8, 363.8, 489.7, 363, 489.3, 362.4, 490.4, 362, 490.6, 362, 491.3, 361.6, 491.8, 360.3, 492.1, 360.1, 492.9, 362, 494.5, 362.1, 495.1, 363.3, 496, 364.9, 498.6, 364.6, 499.7, 363.6, 500.6, 363.4, 501.3, 363.5, 501.9, 363.9, 502.7, 364.4, 503.1, 364.4, 503.6, 364.2, 504.2, 364.4, 504.7, 364.3, 505.3, 366.5, 505.6, 366.8, 505, 366.6, 504, 366.7, 503.4, 367.1, 503, 367.8, 502.7, 368.4, 502.9, 368.7, 503.3, 368.7, 503.9, 370.8, 507.1, 370.3, 508.6, 370.7, 509.3, 371.5, 509.7, 371.7, 508.7, 371.6, 508.1, 372.9, 506, 373.2, 505.8, 374.7, 506.1, 374.7, 507.2, 375.3, 507.9, 375.7, 508, 376.1, 508.6, 376.1, 509, 376.8, 509.4, 377.2, 510.1, 377.6, 510.3, 378, 509.9, 376.9, 507.4, 377.5, 505.9, 374.6, 498.1, 374.8, 497.3, 375.4, 497.4, 376.5, 498.2, 377.4, 498.5, 378.2, 499.3, 377.9, 500.1, 378.2, 500.6, 379.3, 500.1, 379.7, 499.7, 380, 499.6, 381.2, 499.7, 381.6, 499.6, 381.8, 499, 380.8, 498.1, 380.6, 497.6, 380.2, 497.8, 379.4, 497.7, 379, 497.3, 378.1, 494.8, 377.4, 494.4, 377.5, 494, 380.4, 493.2, 383, 493.7, 384.3, 495.1, 384.7, 495.3, 386, 497, 386.5, 497.2, 387.1, 496.6, 387.2, 496.1, 386.5, 492.3, 386.9, 491.8, 386.9, 491.4, 386.5, 490.6, 385.1, 490.4, 380.9, 487.2, 380.7, 486.6, 380.4, 486.1, 379.5, 485.8, 379.3, 486, 378.5, 485.8, 378.1, 485.1, 374.4, 483.6, 374.1, 483.1, 374.3, 482.7, 377.4, 483.4, 378, 483.3, 378.3, 482.3, 377.8, 481.3, 377.6, 480.6, 376.6, 479.5, 376.7, 478.9, 377.7, 478.3, 377.8, 478.1, 378.4, 478.2, 379.6, 479.3, 379.8, 479.7, 380.3, 480.2, 381.3, 480.3, 381.1, 479.7, 374.5, 469.8, 375.7, 468.6, 375.8, 467.1, 376.4, 466.5, 376.9, 466.5, 378.1, 465.6, 379.5, 468.7, 380.3, 469.6, 381.1, 469.6, 381.9, 470.7, 381.9, 471.3, 383.4, 473.1, 383.8, 472.6, 383.8, 471.5, 383.3, 470.9, 383.3, 470.3, 383.7, 469.9, 386.3, 472.5, 387.3, 472.5, 387.9, 471.9, 386.1, 470.1, 385.7, 469.1, 386.4, 468.4, 388.8, 470.7, 389.7, 470.2, 389.7, 469.2, 386.2, 465.8, 386.3, 463.9, 391.2, 464.2, 392.8, 462.6, 396.3, 462.6, 396.6, 462.3, 398.5, 462.3, 398.8, 462, 400.7, 463.4, 402, 462.9, 404.4, 462.9, 405.3, 463.6, 407, 463.6, 407, 464.4, 408.6, 462.7, 409.4, 459.2, 410.7, 458.5, 411.6, 457.2, 409.7, 453.2, 410.9, 452.1, 416, 450.3, 417.1, 450.3, 417.7, 450.9, 422.8, 451.5, 423.5, 450.9, 422.6, 448.9, 421, 447.3, 420.5, 445.9, 425.9, 435.6, 427.6, 435.9, 428.4, 435.5, 429.9, 424.9, 431.6, 423.1, 431.8, 422.1, 431.6, 421, 432.5, 420.2, 432.5, 418.8, 433.5, 418.9, 433.3, 420, 437.5, 419.7, 438.7, 418.3, 438.3, 416.6, 439.3, 415.6, 439.4, 415, 438.8, 413, 438.8, 410.7, 439.4, 410.7, 442.1, 409.1, 443.4, 408.8, 446, 405.6, 446.7, 405.6, 448.5, 402.1, 449.8, 400.8, 454.7, 400, 456.1, 400.5, 457.5, 400.5, 458.8, 397.7, 459, 395.7, 457.3, 393.8, 457.7, 392.4, 457.7, 393.4, 459.8, 395.2, 460, 399.5, 460.6, 400.3, 462.9, 400.2, 463.9, 399.7, 465.1, 399.7, 463.6, 401.7, 459.7, 401.7, 459.2, 402.2, 459.1, 403.4, 458.3, 404.2, 474.4, 406.6, 475, 407.8, 474.3, 408.5, 472.9, 408.5, 465.1, 413.7, 466.2, 413.7, 472.7, 416.9, 473.4, 417.8, 473.1, 421.6, 471.9, 422.8, 473.6, 423.5, 474.4, 424.5, 477.5, 424.5, 482, 421.3, 482.8, 419.9, 486.6, 419.6, 489.6, 417.8, 489.9, 417.1, 492, 417.4, 493.5, 418.1, 496.2, 418.1, 498.4, 416.9, 499.7, 416.9, 500.8, 415.1, 500.8, 413.9, 497.7, 412.8, 496.3, 413.5, 492.5, 413.6, 490.9, 414.3, 489.4, 413.9, 485.1, 407.2, 485.1, 405.8, 486.7, 405, 488.2, 403.2, 491.3, 402.6, 493.9, 399.9, 499.3, 399.2, 500, 398.5, 503, 398.8, 515.6, 394, 515.9, 390.5, 517, 389, 519, 388.2, 521.2, 386.1, 529.3, 385.8, 529.5, 384.5, 530.4, 383.5, 529.7, 378.7, 528.9, 378, 528.8, 376.9, 530, 374.5, 529.3, 372.7, 530.9, 371.6, 531.6, 370.1, 531.6, 368.3, 530.9, 366.6);\n        s_europe.polygon(221.7, 215.9, 224, 217.2, 225, 217.2, 223.6, 217.6, 221.2, 217.6, 219.8, 219.6, 237.6, 219.2, 239.8, 219.9, 240.7, 220.9, 239.5, 222.1, 238, 222.1, 236.9, 223, 235.8, 221.8, 224.3, 221.3, 220.6, 224.9, 221.4, 225.7, 222.7, 225.7, 222.7, 226.3, 224.4, 227.1, 223.4, 228, 224, 228.6, 224.9, 229.1, 223.6, 230.5, 222.3, 230.5, 219.9, 231.3, 219.9, 232.6, 221, 233.7, 221.7, 233.1, 224.1, 233.1, 225.5, 234.5, 227.4, 233.9, 230.4, 230.8, 231.8, 230.8, 233.3, 231.8, 232.7, 232.4, 231.9, 232.4, 231.4, 231.8, 229.9, 233.3, 229.9, 234.6, 227.6, 235.2, 225.2, 237.6, 226.2, 238.6, 227.3, 239.1, 229.2, 239.1, 228.4, 240, 227.3, 240, 224.6, 242.7, 223.4, 242.7, 220.8, 243.9, 221.2, 244.4, 221.2, 245.4, 223.9, 245.4, 225.9, 244.7, 225.5, 243.4, 229.1, 243.3, 230.5, 241.9, 231.1, 242.4, 229.6, 243.9, 229.1, 245.3, 229.9, 246.1, 228.9, 246.1, 228, 247, 227.6, 249, 229.1, 249.3, 229.8, 248.6, 230.7, 248.6, 228.7, 250.7, 226.8, 250.7, 225.3, 249.2, 224.7, 250.8, 223.7, 251.8, 223.7, 253.2, 226.3, 255.9, 227.3, 257.7, 229.8, 257.7, 229.8, 258.8, 232.1, 260, 233, 259.1, 234.6, 259.1, 234.9, 259.6, 233.1, 261.5, 236.6, 261.5, 237.3, 262.3, 243.4, 262.3, 244.2, 261.5, 245.6, 261.2, 246.2, 260.6, 248.2, 260.6, 250, 258.8, 250.8, 258.8, 252.5, 257, 253.7, 257, 254.7, 256, 255.9, 253.3, 257.6, 251.6, 258.8, 251.6, 259.9, 250.5, 259.9, 249.1, 260.7, 248.3, 261.6, 249.3, 262.4, 249.3, 263.5, 248.2, 264.5, 248.2, 264.9, 247, 267.2, 244.7, 266, 243.4, 266, 242.2, 267.3, 241.5, 267.3, 239, 268.6, 237.7, 269.4, 238.5, 269.4, 240.1, 268.6, 240.9, 268.6, 242.6, 269.6, 243.6, 269.6, 246.6, 273.4, 247.3, 273.4, 250.3, 273.6, 250.5, 275, 257.1, 275.4, 257.7, 276.7, 258.8, 276.9, 259.4, 279, 261.1, 278.9, 265, 280.2, 267.4, 280.2, 268.2, 282.4, 271.2, 282.9, 273.6, 283.5, 274.5, 283.7, 275.3, 286.5, 278.8, 287.5, 279.3, 288.5, 280.2, 288.9, 281.9, 287.8, 282.9, 286.6, 285.1, 287.2, 290.2, 288.8, 291, 289.7, 292.3, 290.7, 295.7, 292.3, 296.6, 294.7, 296.5, 295.4, 295.9, 301.1, 295.5, 301.4, 293.3, 301.8, 292.9, 301.8, 292.2, 300.8, 291.2, 301.1, 290.4, 302.2, 289.6, 302.2, 289, 303, 288.2, 304.9, 288, 306.4, 286.3, 307.2, 286.3, 308.1, 286, 313.2, 286, 313.5, 286.9, 314.8, 288.2, 315.9, 286, 316.7, 285.3, 317.4, 283.7, 317.6, 282.3, 319.2, 280.8, 319.2, 280, 320.8, 277.8, 321, 276.3, 321.4, 275.9, 321.5, 271.2, 321.9, 271.2, 322.5, 270, 322.2, 265.4, 321.6, 264.2, 322.7, 264.1, 322.7, 260.3, 323.5, 258.8, 323, 257.3, 322.7, 257.1, 323.5, 256.4, 323.7, 255.7, 322.8, 254.7, 325.1, 254.4, 326.6, 252.9, 327.8, 253.2, 329.9, 252.6, 331.4, 250.8, 331.3, 249.9, 331.5, 249.7, 332.1, 249.9, 332.8, 250.7, 332.8, 251.5, 337.6, 246.9, 336.3, 245.4, 335.9, 244.3, 336.9, 244.3, 336.9, 245.6, 338.2, 246.5, 339.6, 246.2, 339, 245, 337.9, 244.2, 337.9, 243.7, 339.7, 241.6, 341.2, 241.3, 343.4, 237.9, 341.6, 235.6, 340.3, 235, 337.8, 232.4, 337.9, 231.6, 335.6, 230.6, 334.5, 229.4, 333.4, 229.4, 330.2, 227.1, 327.5, 226.7, 327.5, 219.7, 327.1, 218.8, 327.2, 213.8, 329, 211.5, 328.7, 210.4, 329.4, 209.7, 329.4, 208.7, 330.3, 207.8, 330.3, 206.3, 331, 205.2, 329.6, 204.3, 330.1, 201.8, 332.8, 201.5, 333.7, 201.1, 334.3, 197, 333.8, 195.8, 335.3, 197.5, 337.5, 196.8, 338.8, 195, 340.1, 194.5, 340.4, 193.4, 341.8, 192, 344.6, 191.5, 350, 187.4, 350.8, 187.4, 352.1, 186.2, 353.4, 185.9, 355.1, 184.4, 357.7, 183.4, 359, 183.4, 359.2, 182.6, 360.4, 181.3, 360.4, 180.7, 366.1, 174.3, 366.2, 173.7, 365.9, 172.8, 363.7, 170.7, 363.1, 169.3, 363.6, 169.3, 364.2, 168, 366.1, 166.3, 366.6, 163.9, 367.2, 163.3, 367.4, 162, 367.1, 161.4, 367.8, 160.8, 369.2, 160.8, 370.2, 159.7, 370.2, 158.8, 371, 158.1, 372.2, 158.1, 373.2, 157.6, 373.2, 156.8, 373.8, 155.2, 376.3, 155.4, 376.3, 154.9, 377.2, 154.3, 377.8, 154.3, 378.5, 155, 379.7, 155.6, 392.4, 155, 393.7, 156.3, 394.9, 156.3, 395.6, 157, 396.4, 156.9, 397.9, 158.6, 399.5, 159, 399.8, 161.5, 399.3, 163.4, 399.6, 165, 400.7, 166.1, 400.7, 166.7, 400.1, 167.7, 400, 168.5, 395.7, 168.5, 395.1, 169, 394.3, 169.4, 384.6, 180, 383.4, 180.4, 382.8, 180.9, 382.8, 181.7, 382, 182.4, 381.1, 182.3, 379.7, 182.9, 378.3, 185.5, 376.1, 186.1, 375.5, 185.6, 373.8, 187.6, 373.8, 190.6, 373.3, 191.1, 372.2, 191.6, 366.9, 191.5, 366.2, 192.9, 365.8, 195.8, 364.6, 196.2, 363.4, 198.1, 363.4, 203.7, 364.4, 204.3, 364.4, 205, 364.6, 205.7, 364.6, 210.3, 365.9, 211.2, 366.9, 215, 366.4, 215.6, 366.7, 217.8, 366.2, 218.4, 366.2, 220.3, 365.5, 221, 364.8, 225.5, 365.3, 227, 365.9, 227.7, 368, 228.6, 369.1, 229.7, 371.4, 229.7, 371.8, 230.2, 375, 231.1, 375.5, 231.6, 374.9, 233.2, 378.5, 233, 378.5, 233.3, 378.9, 233.8, 379, 234.3, 381, 236.3, 393.3, 235.6, 393.3, 235, 395.5, 233.6, 398.2, 233.7, 403.5, 231.5, 404.2, 231.8, 406.4, 231.6, 406.7, 231.3, 407.5, 231.3, 410.7, 229.7, 412, 230.1, 422.7, 229.6, 453.4, 200.8, 455.2, 196.6, 455.2, 195.3, 441.7, 184.6, 444.7, 182.6, 446.5, 179.5, 446.6, 178.4, 441.8, 174.2, 441.8, 172.3, 442.4, 171.5, 442.4, 170.5, 439.1, 168.3, 438.1, 166.5, 439.6, 164.8, 439.6, 164, 439.1, 163.5, 440.2, 156.8, 442.9, 156.6, 442.9, 153.8, 433.6, 138.9, 433.6, 138, 440.9, 128.5, 441.4, 127.2, 441.3, 126.5, 434.3, 119.9, 432.3, 119.4, 429.4, 116.4, 428.5, 114.5, 428.5, 113.1, 430.2, 111.5, 430, 108.3, 429.4, 107.6, 430.1, 106.6, 431.2, 106.6, 431.9, 105.1, 434, 105.1, 436.1, 103, 437.1, 100.8, 438.3, 100.8, 438.8, 100.4, 440.9, 100.4, 443.7, 97, 444.9, 96.2, 447, 97.7, 449.2, 97.8, 449.8, 97.2, 449.4, 95.2, 450.5, 94.1, 449.3, 92.9, 448.4, 93.8, 446.5, 94.3, 445.1, 92.7, 444, 93.8, 439.8, 93.8, 439.8, 92.6, 437.8, 90.7, 436.7, 90.7, 435.3, 89.4, 434.1, 89.3, 431.8, 88.2, 433.8, 87.6, 435.8, 88.6, 443.9, 88.6, 447, 85.7, 448.5, 85.7, 450.4, 85, 451.2, 85, 450, 83.9, 450, 82, 445.5, 81.1, 442.6, 78.9, 436.4, 78.9, 436.6, 77.6, 435.5, 76.6, 431.1, 76.4, 428.9, 78.4, 428.9, 79.5, 426.8, 83.9, 426.8, 82.8, 425.5, 82.2, 425.5, 80.7, 425, 80.2, 425.9, 79.2, 425.4, 78.8, 423.6, 78.8, 423.6, 77.7, 425.9, 76.1, 428.5, 75.5, 427.9, 74.9, 427.9, 73.9, 426.5, 73.9, 426.5, 72.5, 424.6, 72.5, 423.5, 73.1, 420.5, 73.1, 419.4, 73.6, 418.8, 74.2, 418.6, 75.5, 419.1, 77.4, 417.1, 79, 416.2, 81, 416.2, 81.9, 415.3, 81.8, 414.9, 82.2, 414.3, 81.8, 412.1, 83.4, 411.2, 83.4, 411.3, 79.5, 412, 78.8, 412.1, 74.5, 411.5, 75.4, 410.5, 75.4, 409.2, 76.7, 408.2, 76.6, 401.6, 83.1, 400.9, 86.7, 400.2, 87.4, 398.2, 87.5, 397.7, 87, 397.5, 85.7, 398.2, 84.9, 398.2, 83, 398.9, 82.3, 398.3, 81.5, 399.8, 81.1, 403.1, 77.6, 403.9, 77.6, 405, 74.9, 408, 74.9, 405.1, 72, 402.8, 72, 402, 73.5, 403, 74.5, 401.2, 75.1, 400.5, 75.8, 399.4, 75.8, 398, 75, 398, 74.2, 396.6, 74.2, 393.8, 75.5, 393.8, 76.4, 392.9, 77.8, 393.8, 77.8, 393.8, 79.5, 390.6, 79.5, 390.9, 82.2, 386.4, 82.5, 385.6, 83.3, 385, 85.1, 381.7, 87, 381.7, 88, 382.7, 89, 380.6, 89.7, 378.6, 88.1, 378.6, 86.6, 377.9, 85.9, 377.9, 84.2, 375.7, 85.3, 374.9, 86.1, 373.4, 86.8, 371, 85.8, 369.8, 86.4, 367.8, 85.6, 364.8, 85.6, 364.8, 86.5, 366.9, 87.3, 368.6, 89, 370.1, 89.2, 370.1, 90.2, 369, 91.8, 369, 91, 366.9, 91.2, 365.5, 89.8, 363.8, 90.4, 363.5, 92.7, 361.9, 92.7, 360.9, 91.7, 358.2, 95.1, 359.1, 96.7, 358.1, 96.7, 352.4, 100.4, 354, 98.8, 354, 98, 355.4, 96.8, 355.4, 95.7, 356.2, 94.9, 356.2, 91.5, 351.5, 94.1, 350.8, 95.3, 351.5, 96, 349.8, 98.3, 348.4, 98.8, 348.9, 98.3, 349.7, 94.2, 345.2, 94.2, 344.4, 95.1, 343.8, 96.8, 343.8, 98.2, 345.8, 100.3, 344.3, 100.3, 342.6, 98.5, 341.8, 97, 341.8, 94, 339.4, 94, 338.1, 95.4, 338.1, 96.8, 339.7, 98.2, 339.6, 99.1, 341.3, 100.8, 339.6, 100.8, 339, 101.7, 335.6, 98.2, 333.9, 98.2, 333.9, 97.2, 334.8, 95.8, 331.3, 97.2, 330.1, 98.3, 328.8, 98.3, 327.2, 99.9, 325.1, 100.8, 326.9, 102.5, 325.8, 103.6, 326.8, 104.9, 329.1, 104.8, 330.7, 103.1, 332.6, 104, 330.9, 105.6, 330.7, 107.5, 331.5, 108.3, 331.9, 109.5, 330.7, 110.6, 327.9, 109.3, 326.6, 110.6, 324.2, 111.8, 323.2, 112.8, 323.8, 114, 327.6, 114.8, 328.3, 114.1, 331.2, 114.1, 329.4, 115.9, 328.8, 115.9, 328.1, 116.5, 328.1, 117.2, 326.8, 116, 324.7, 116, 321.5, 115, 321.5, 116.6, 322.5, 117.6, 320.1, 120.7, 320.2, 122.4, 318.7, 122.7, 317.9, 121.8, 317.9, 118.9, 316.1, 118.9, 314, 120.9, 315.7, 122.7, 314.5, 123.4, 312.6, 123.4, 310.6, 122.4, 309.2, 122.9, 308.7, 123.4, 308.1, 124.6, 306.5, 126.2, 309.4, 126.3, 310.5, 125.2, 313.2, 125.7, 314.2, 126.6, 313.6, 127.2, 311.4, 127.2, 310.8, 127.9, 312.3, 129.5, 313.7, 129.5, 314.2, 130.7, 310.5, 130.4, 308.2, 129.4, 307.5, 130.1, 303.5, 131.5, 306, 132.9, 315.1, 133.2, 311.1, 134.9, 310.1, 134.9, 308.3, 133.8, 304.7, 134.1, 302.4, 136.3, 300, 136.7, 296.3, 139.8, 296.7, 140.2, 294.1, 142.7, 294.7, 144, 293.3, 145.4, 291.7, 145.4, 291.5, 146.5, 292.8, 147.8, 298.3, 147.4, 296.1, 149.3, 290.6, 149.8, 291.4, 153.8, 291, 153.3, 289.2, 153.3, 287.6, 154, 287.6, 154.9, 286.6, 155.9, 285.6, 156.1, 284.9, 156.8, 285.4, 158.3, 286.5, 158.3, 286.9, 160.2, 286.1, 160.2, 284.7, 159.7, 284.1, 159.7, 282.4, 161.3, 283.5, 162.4, 285.2, 162.4, 285.2, 163.5, 286.3, 163.5, 288.5, 162.8, 285.8, 165.8, 278.9, 166.1, 278.9, 168.1, 279.6, 168.9, 277.8, 169.5, 276.9, 170.5, 276.9, 171.4, 278.4, 172.8, 277.2, 174.1, 276.9, 175.3, 275.2, 175.3, 273.9, 174.1, 270.8, 174.1, 270.3, 175.3, 268.9, 175.5, 268.4, 176.8, 267.2, 177.9, 266, 177.9, 264.8, 179.2, 265.2, 180.4, 265.2, 181.6, 264, 181.6, 261.8, 183.9, 262.7, 184.7, 262, 185.4, 262.7, 187.3, 263.8, 187.5, 264.5, 186.8, 265.8, 186.8, 266.9, 185.7, 267.7, 185.7, 269.4, 185.2, 270.2, 185.2, 271.5, 183.9, 269.9, 182.3, 271.7, 182.3, 274.5, 180.1, 276.4, 180.1, 276.1, 181.3, 274.4, 181.8, 273.3, 183.3, 274.4, 184.3, 274.4, 185, 272, 185, 270.5, 186.5, 270.7, 187.4, 271.4, 188.1, 270.9, 189, 264.9, 188.7, 264.7, 189.9, 264, 190.6, 262.1, 190.8, 262.1, 188.8, 260.6, 187.3, 259.4, 186.8, 255.1, 191, 255.1, 189, 254.7, 189.5, 252.2, 189.5, 251, 191.5, 251, 193, 249.9, 193, 249.3, 194.1, 252, 196.9, 249.6, 196.1, 248.2, 196.1, 247.3, 195.1, 246.2, 195.1, 249.1, 198, 249.1, 199.4, 246.9, 197.2, 245.6, 197.2, 244.3, 196, 244.3, 194.7, 243.1, 194.7, 242.1, 195.5, 237, 195.5, 236.8, 196.7, 238.1, 198, 240, 198, 242.5, 199.1, 240.7, 200.8, 238, 200.8, 235.8, 200, 231.9, 200.6, 234.1, 202.1, 235.6, 202.1, 238.7, 205.7, 237.8, 206.5, 237.8, 205.2, 231.9, 202.4, 232.7, 203.3, 231.5, 203.3, 231.5, 205.7, 230.7, 204.9, 228.6, 204.6, 227.6, 205.7, 229.6, 207.7, 224.3, 207.5, 222.7, 209.1, 226, 210.8, 226.8, 211.5, 219.4, 212.3, 219.4, 213.6);\n        s_stat_europe = this.get(\'draw_stat_europe\');\n        c1 = s_stat_europe.circle(cx = \"115\", cy = \"115\", r = \"70\").addClass(\"circle-back\");\n        c2 = s_stat_europe.circle(cx = \"115\", cy = \"115\", cr = \"70\").addClass(\"circle-front\").attr({\n          transform: \"r-90\"\n        });\n        s_stat_europe.g(c1, c2);\n        txt = s_stat_europe.text(x = \"35%\", y = \"50%\", \"7.4%\").addClass(\"greentext\");\n        s_stat_europe.g(txt).addClass(\"textpercentage\");\n        setTimeout(function() {\n          return s_stat_europe.addClass(\'sevenhalf-percent-filled\');\n        }, 2000);\n        s_northamerica = this.get(\'draw_northamerica\');\n        s_northamerica.path(\"M8.939,0.561l21.38,4.638l20.249,1.131h3.054l3.281,1.244h3.506l-2.376,2.828l-0.68,1.697l3.734-0.679 l2.828-1.245c0,0,2.149,0.905,2.489,0.905s4.298-0.113,4.298-0.113l-4.978,2.941l-0.679,2.828l1.811,6.9c0,0,2.262-3.281,2.149-3.62 c-0.115-0.339-1.134-2.715-1.018-3.054c0.112-0.34,1.694-3.281,1.694-3.281l1.02-0.905l2.262,1.131l-1.244,3.28l0.679,1.018 l1.131-1.357l1.584,1.697l-1.472,2.489l2.603,1.81l5.431-4.639l-0.565-1.357l3.62-0.226l1.132-1.243l-0.792-1.471l0.792-2.603 l5.656-1.471l2.262-1.81l0.904-4.865h2.714l1.02,3.168L100,8.476l-4.865,3.62l-0.677,3.168l2.261,2.037l-5.316,2.488l-0.564,2.49 l-0.907,2.941l-1.924-0.565l-1.356,3.621l3.057,5.542L80.659,45.81l1.018,3.618l4.412,7.015v2.941l-1.697,1.132l-4.185-4.638 l-0.114-3.507l-3.507-3.053l-2.263,2.035L71.38,49.43l-6.447,0.907l0.905,2.262l-9.503-0.451l-6.787,3.619l-1.583,3.395l1.016,2.602 l-3.957-1.583l-3.847-6.449l-2.376-1.922l-2.149,1.81l-3.167-1.696l-1.245-3.28l-1.81-2.489h-4.186l-0.339,1.133l-12.896-4.978 l-4.073-1.245l-0.565-2.715l-4.978-2.487l-1.017-6.449v-2.376l-1.697-4.412v-1.131L0,19.457l1.358-2.148l0.341-3.734l3.507-7.353 L4.526,0l3.167,4.186L8.939,0.561z\");\n        s_stat_northamerica = this.get(\'draw_stat_northamerica\');\n        c1 = s_stat_northamerica.circle(cx = \"115\", cy = \"115\", r = \"70\").addClass(\"circle-back\");\n        c2 = s_stat_northamerica.circle(cx = \"115\", cy = \"115\", cr = \"70\").addClass(\"circle-front\").attr({\n          transform: \"r-90\"\n        });\n        s_stat_northamerica.g(c1, c2);\n        txt = s_stat_northamerica.text(x = \"35%\", y = \"50%\", \"4.7%\").addClass(\"greentext\");\n        s_stat_northamerica.g(txt).addClass(\"textpercentage\");\n        setTimeout(function() {\n          return s_stat_northamerica.addClass(\'five-percent-filled\');\n        }, 2000);\n        s_southamerica = this.get(\'draw_southamerica\');\n        s_southamerica.path(\"M86.082,42.816l-0.227-0.117h-0.805l-0.176-0.101h-0.067l-1.197-0.779l-0.243-0.36l-1.625-0.905l-0.889,0.042l-0.159,0.168  l-0.513-0.193l-0.183,0.042l-1.157-0.436l-0.612,0.143l-0.133,0.176l-0.093,0.042h-0.092l0.092-0.293l-0.092,0.025l-0.084,0.076  l-0.059,0.31l-0.319,0.269l0.06-0.461l0.269-0.251v-0.176l-0.243-0.009L77.77,39.9l-0.311-0.377l-0.276-0.151l-0.21,0.009  l-0.066,0.066l0.018-0.125l-0.06-0.167h-0.243l-0.335-0.109h-0.084l-0.017-0.125l-0.109-0.067l-0.36-0.008l-0.218-0.143  l-0.159-0.008l-0.176-0.151l-0.101,0.109l-0.134-0.067l-0.536,0.084l-0.243,0.444l0.017,0.235l-0.067,0.059l-0.158-0.092  l-0.076,0.075l-0.209,0.05l-0.336,0.528v0.143l-0.201,0.176l-0.017-0.1l0.067-0.235l0.075-0.084l0.024-0.268L72.9,39.624  l-0.108,0.126v-0.051l-0.185-0.059l-0.604,0.034l-0.108-0.109l-0.126-0.721l-0.637,0.427l-0.151,0.218l-0.485,0.05l-0.235-0.092  l0.276-0.218h0.085l0.31,0.126l0.653-0.687l-0.042-0.209h-0.125l-0.294,0.301l1.584-2.086l0.009-0.209l-0.067-0.143l-0.26-0.059  l-0.159-0.151h-0.093l-0.158-0.15l-0.402-1.584l-0.269-0.402l-0.227,0.042l-0.033-0.167l-0.084-0.084l-0.159,0.176l-0.134-0.134  l-0.009-0.227l-0.569-0.612l-0.813-0.276l-0.251,0.084l0.059-0.125l-0.753-0.235l-0.269,0.008l-0.085,0.143l-0.394-0.126h-0.301  l-0.076,0.101v0.134l-0.243-0.16l-0.628-0.092l-0.143,0.075l-0.159,0.302l0.024-0.31l-0.158-0.051l-0.227-0.234l-0.042-0.151  l-0.637-0.503h-0.118v0.118l-0.192,0.327l0.042-0.469l0.084-0.201l-0.059-0.159l0.025-0.151l-0.093-0.092l-0.234-0.117l-0.167-0.234  l-0.319-0.227l-0.176-0.017l-0.134-0.151l-0.227-0.033l-0.159-0.16l-1.114,0.201l-0.135-0.025l-0.107-0.143l0.435-0.042l0.051-0.05  v-0.143l0.26-0.604l-0.067-0.075l-0.428-0.151h-0.083l-0.084-0.1l-0.201,0.083v-0.083l-0.301-0.118l-0.102,0.193h-0.117  l-0.084-0.117v-0.143l-0.066-0.084l-0.327,0.109l0.117-0.134l0.018-0.159h-0.076l-0.176-0.118l0.059-0.058l0.68-0.134l0.065-0.059  l-0.065-0.025l-1.561,0.075l-0.032,0.076l0.067,0.092l-0.344,0.025l-0.311,0.134l-0.076,0.109L58.94,28.58l-0.871-0.117  l-0.117-0.151l-0.277-0.193l-1.533,0.16l-0.226-0.101l-0.085-0.168v-0.159l-0.05-0.143l-0.478-0.394l-0.755-0.117l-0.15,0.066  l-0.293,0.025v0.051l-1.197,0.502l-0.043,0.285l0.168,0.436l0.159,0.134l0.092,0.234l-0.05,0.369l-0.285,0.276h-0.16l-0.133-0.075  l-0.06-0.201l-0.143-0.125l-0.108-0.034l0.033-0.578l0.277-0.168l0.142-0.26l-0.1-0.1l-0.06-0.319l-0.167-0.251l0.024-0.176  l0.143-0.185h0.159l0.31-0.352V26.56l-0.25-0.117H52.58l-0.344,0.36l-0.201,0.101L51.9,27.038l-0.51,0.226l-0.193,0.193l-0.721-0.05  l-0.192,0.159v0.226l-0.167,0.251l-0.067-0.075V27.8h-0.134l-0.16-0.159l-0.569,0.469l-0.176,0.997l-0.109,0.109h-0.159  l-0.084,0.159l-0.687,0.612l0.033,0.562h-0.142v-0.176l-1.022-0.955l-0.378-0.126l-0.134-0.134l-0.327,0.025l-0.176-0.1  l-0.377-0.008l-1.299,0.679h-0.67l-0.102-0.134l-0.143,0.05H43.07l-0.411-0.52l-0.143-0.059l-0.595-0.796l-0.109-0.075l-0.327-0.771  l0.118-0.268v-0.118l-0.075-0.134v-0.092l0.134-0.185l0.025-0.075L41.679,26.3l0.083-0.26l-0.059-0.369l0.135-0.646l0.176-0.201  l0.059-0.385l-0.033-0.134l-0.084-0.067l0.084-0.108l0.016-0.109l-0.1-0.193l-0.177-0.084h-0.2l-0.209-0.125l-0.117-0.269  l-0.11-0.084L40.455,23.1l-0.369,0.05l-0.05-0.025h-0.101l-0.066-0.042l-0.186-0.025l-0.107,0.025l-0.043,0.042l-0.494,0.134  l-1.048-0.118l-0.05-0.067L37.665,23.2l-0.034,0.034l-0.327,0.05l-0.317-0.05l-0.102-0.067l-0.016-0.167l0.367-0.419l0.094-0.034  v-0.092l0.059-0.059l0.066-0.746l-0.066-0.067l0.049-0.058v-0.218l0.168-0.268v-0.151l-0.049-0.101l-0.151-0.008V20.56l0.041-0.125  h0.193v0.277l0.109,0.109v0.083l0.101-0.109l0.385-1.81l0.512-0.645l-0.043-0.427l-0.125-0.168l-0.303,0.109h-1.742l-0.277,0.151  l-0.334-0.051l-0.512,0.47l-0.041,1.005l-0.134,0.067l-0.018,0.109l-0.151,0.276v0.167l-0.787,0.511h-0.703l-0.186,0.109  l-1.793,0.385l-0.168-0.411h-0.251l-0.15-0.125h-0.638l-1.726-3.159l0.025-2.497l0.1-0.302l-0.041-0.486h0.234l0.067-0.067  l0.051-0.201l0.1-0.092v-0.26l-1.734-0.469l-0.41-1.114l-0.789-0.922L26,10.245L25.473,9.7l-0.797-0.159l-0.451,0.193l-0.479,0.67  h-0.125l-1.148-0.604L22.238,8.98l-0.227-0.302l-0.369-0.159l-0.989-0.847h-1.542l-0.034,0.302l-0.117,0.109H16.54l-3.327-1.24  l-0.134-0.134l-2.12,0.109l0.896,1.769l0.025,0.268l0.193,0.193l0.142,0.603l1.466,1.358l0.034,0.235l-0.059,0.092l0.017,0.218  l0.176,0.067v0.185H13.8l-0.402-0.192h-0.369v0.15l0.562,0.503l0.201,0.084l0.185,0.276l0.201,0.034l0.218-0.042l0.126-0.125v0.185  l1.005,0.963l0.008,0.486l-0.092,0.184v0.168l1.801,1.441l0.101,0.335l0.201,0.176l0.218-0.176l0.176-0.276l-0.428-0.712  l-0.335-0.143l-0.235,0.042l-0.159-0.167l-0.017-0.411l-3.578-5.338l-0.042-0.57l-0.193-0.402l0.025-0.586l-0.092-0.184l0.042-0.042  l0.646,0.411l0.385-0.05l0.226,0.226l0.427,0.176l0.009,0.528l0.293,0.386l0.1,0.478l1.533,1.961l0.151-0.118l0.218,0.143  l-0.084,0.293l0.327,0.335l0.361,0.101l0.101,0.285l0.301,0.101l0.151,0.151l0.101,0.268l-0.176,0.192l-0.033,0.243l0.218,0.159  l0.36,0.101l0.185,0.218l0.402,0.235l0.109,0.184l0.042,0.302l2.111,2.146l0.192,0.645l0.176,0.151l0.084,0.201l-0.218,0.578  l0.21,0.109l-0.377,0.327l0.276,0.537l0.529,0.536l0.603,0.176l0.704,0.704l6.461,2.48l1.08-0.453l0.26-0.218l0.201,0.159  l0.545,0.059l2.439,2.078l0.988,0.042l0.31,0.277l0.771,0.185l0.126,0.075l0.998,0.125l0.024-0.109l0.076-0.075l0.385,0.05  l-0.025,0.176l0.109,0.15l-0.066,0.067l-0.127-0.042h-0.066l0.101,0.201l1.567,1.567v0.209l0.066,0.067l0.084,0.034v0.075  l-0.059,0.143h-0.076l-0.05,0.05l-0.058,0.159l0.125,0.218l0.218,0.167h0.101l0.126,0.168l0.108,0.042l0.076-0.067h0.058  l-0.024-0.167l-0.269-0.226l0.067-0.067l0.108,0.042l0.076,0.083l0.108,0.034l0.252,0.293l0.05,0.117l0.084,0.076l0.327,0.101  l0.418,0.285l0.109,0.218l-0.135,0.176v0.117l0.177,0.067l0.185,0.009l-0.068-0.067l0.043-0.159h0.042l0.084,0.092l0.108,0.251  l0.051,0.05l1.072,0.093l0.561,0.544l0.051-0.05l-0.024-0.159l0.067-0.067l0.209,0.276v0.117l0.059,0.167l0.092,0.092l0.201,0.017  l0.234-0.243l0.159,0.025l0.084-0.092v-0.134l-0.142-0.084l-0.244-0.293v-0.184l0.092-0.092h0.244l0.15-0.059l0.369-0.494  l0.536-0.05l0.478,0.562h0.076l0.134-0.051l0.05-0.058l0.219,0.234v0.134l-0.109-0.134h-0.176l-0.034,0.033l-0.034,0.143  l-0.065,0.059v0.109l0.594,0.788l-0.008,0.167l0.284,0.276l-0.041,0.394l0.1,0.101v0.327l-0.074,0.075l-0.025,0.318l0.125,0.134  l-0.051,0.67l0.085,0.084l-0.15,0.159l0.317,0.301l-0.252,0.227l-0.008,0.293l-0.377,0.31v0.293l-0.158,0.125l-0.479-0.017  l-0.117,0.126v0.377l-0.184,0.184h-0.135v0.126l0.108,0.083l-0.075,0.076l0.084,0.083l-0.05,0.16h-0.177l-0.075,0.075l-0.662,0.184  l-0.101,0.093l0.018,0.377l-0.102,0.31l-0.242,0.243L44.645,38.3v0.167l0.102,0.101l-0.512,0.46l0.092,0.092v0.126l-0.1,0.285  l0.133,0.134V39.8l-0.175,0.201l0.376,0.394l0.143,0.042l0.244-0.234l0.083,0.083l0.083-0.083l-0.016-0.235l0.066-0.067v0.226  l0.076,0.101l0.016,0.192l-0.143,0.193v0.117l-0.049,0.143l-0.193,0.193h-0.117l-0.402,0.301l-0.185,0.269l-0.294,0.226  l-0.107,0.227l0.143,0.243v0.235l0.335,0.511l-0.076,0.209l-0.159,0.151l0.025,0.201l1.182,0.755l3.326,6.301l-0.184,0.185  l0.418,0.703l0.411,0.269l0.318,0.486l3.251,1.726l0.193,0.193v0.176l0.846,0.62l0.402,2.983l-0.158,0.368l-0.127,1.207  l-0.166,0.168v0.284h0.1l-0.1,0.243l0.041,1.608l-0.184,0.185l0.1,0.738l-0.695,2.38l-0.135,0.134v0.335l0.126,0.125l0.051,0.722  l-0.386,0.385l0.209,2.497l-0.192,0.109v0.646l-0.084,0.25l-0.192,0.193l-0.276,1.273l-0.168,0.169l-0.318,0.771l-0.125,0.125  l-0.067,0.545h-0.126l-0.017,0.353l-0.092,0.101l-0.252-0.025l-0.051,0.05l-0.032,0.545l0.159,0.168l0.051,0.93l0.107,0.167v0.503  l-0.066,0.219v0.176l-0.143,0.15l-0.227,0.075l0.051,0.629l-0.126,0.126l-0.025,0.192l-0.125,0.126v0.436l0.335,0.269v0.2  l0.242,0.093l0.261-0.26h0.687l-0.109,0.201h-0.158v0.185l0.176,0.175l-0.084,0.369l-0.126-0.218v0.303l0.067,0.066h-0.219v0.251  l0.11,0.109l-0.126,0.125l-0.075,0.227L51.323,80.7l0.185,0.185v0.252l-0.276,0.469h0.234l0.36,0.361l-0.193,0.134v0.21  l-0.234,0.233h-0.184v0.186l0.159,0.158l0.218,0.067h-0.402l-0.159,0.167v0.436l-0.15,0.151l0.092,0.101l0.033,0.159l-0.318,0.402  l-0.075-0.076v-0.209l-0.126-0.135H50.1l0.084-0.083h0.242V83.75l-0.107-0.117h-0.26l-0.109-0.108h-0.251v0.218h0.108v0.311h-0.503  l-0.353,0.353l0.119,0.116l0.116-0.116h0.318l0.083-0.085v0.085l0.235,0.233l0.227,0.075l0.075-0.075h0.193l0.275,0.277  l-0.108,0.108v0.21h-0.269v0.268l0.227,0.227l0.41-0.018l0.269,0.294h-0.083v0.234h-0.193l-0.084-0.083h-0.385l-0.125-0.118h-0.244  l0.528,0.47l-0.118,0.117L50.217,86.7l0.16,0.16h0.125v0.125h-0.143l-0.192,0.192v0.318l0.159,0.167v-0.158l0.219-0.218h0.116v0.15  l-0.116,0.126v0.109l0.142,0.142v0.21l-0.093-0.101l-0.191-0.042l-0.143,0.134l0.117,0.126v0.075l0.15,0.151h-0.109l-0.075,0.066  v0.177l0.185,0.092h-0.185l-0.159,0.159h0.219l0.125,0.125v0.11h-0.125v0.158h0.251l0.218-0.31v0.151l0.101,0.158h-0.134  l-0.159,0.293h-0.235v0.169l0.125,0.125l0.235,0.042v0.284l-0.108,0.168v0.219h0.143l0.176,0.175h0.227l0.083,0.084l0.075-0.076  v-0.209H51.29l-0.108-0.116l0.217-0.219h0.269l0.21,0.21v0.646l0.074,0.075l-0.192,0.193v0.158h0.922l0.126,0.126l-0.092,0.084  h-0.436l-0.201,0.201h-0.369l-0.143,0.134v0.108l0.227,0.134l-0.117,0.118h-0.21l0.142,0.15h0.219l0.193-0.192v-0.176h0.41  l0.368-0.378h0.344v0.193l-0.485,0.494v0.276h-0.177v-0.175h-0.185l-0.125-0.118l-0.1,0.101v0.093l0.435,0.443l0.662,0.043  l0.15-0.151v-0.746l0.134-0.134v-0.243l0.268-0.227h0.178l0.108-0.108h0.2l0.135-0.134h0.269l0.126-0.126v-0.135h0.352l0.569,0.202  l-0.117-0.311l-0.134-0.151l-0.025-0.117l0.017-0.093l-0.242-0.218h-0.201l-0.101-0.059l-0.177-0.008l-0.041-0.042l0.452-0.018  l0.017-0.065l-0.017-0.192l-0.075-0.144l0.017-0.796l0.075-0.143l0.209-0.192l0.269-0.101v-0.185l-0.092-0.101l-0.084-0.042h-0.192  l0.21-0.041l-0.018-0.16l0.369,0.428l0.26-0.093l0.191-0.192l0.051-0.276l0.076-0.143l0.008-0.461l0.502-0.569l0.161-0.066  l0.1-0.135l0.931-0.653l-0.01-0.085l-0.142-0.05h-0.277l0.21-0.093l0.269-0.293l0.033-0.158l-0.05-0.16v-0.125l-0.252-0.143  l-0.754-0.084l-0.544-0.595l-0.143-0.336l0.31-0.679l0.502-0.419h0.294l0.227-0.234h0.41l0.042-0.251l0.102-0.135l0.116-0.084  l0.168-0.477l-0.051-0.545l0.269-0.436l0.293-0.192l0.235-0.067l0.075-0.084l-0.16-0.05l-0.394-0.344l0.294-0.15l0.302,0.066  l0.134,0.126l0.042,0.184h0.251l0.276-0.134l0.075-0.192l-0.075-0.394l-0.175-0.085l-0.411,0.117l0.125,0.126l-0.017,0.101  l-0.234,0.018l-0.335-0.319l-0.218-0.067l-0.067-0.368l0.051-0.192l-0.134-0.42l0.032-0.394l0.144-0.084l1.105,0.445l1.064-0.201  l0.268-0.285l0.043-0.117l-0.21-0.344l0.051-0.444l0.159-0.059l0.15-0.269l-0.067-0.176l-0.159-0.159l-0.008-0.368l0.15-0.118  l0.117,0.076l3.159-0.377l0.06-0.06l0.754-0.326l0.159-0.219l0.041-0.158l0.671-0.854l0.143-0.579l-0.025-0.218l-0.41-0.017  l-0.159-0.167l-0.076-0.462l0.151-0.251l-0.034-0.184l-1.182-0.881l-0.108-0.293l0.143-1.022l0.101-0.041l0.108-0.168l0.025-0.469  l0.059,0.46l-0.234,0.763l0.058,0.26l0.521,0.528l0.637,0.041l0.419,0.276h0.159l0.336,0.202l0.1,0.008l0.177-0.126l0.201-0.041  l0.436,0.143l0.419-0.093l1.365-1.374l0.151-0.067l0.36-0.394v-0.202l0.427-0.695v-0.275l-0.083-0.084l-0.025-0.167l0.829-1.023  l0.017-0.175l0.168-0.169l-0.075-0.067l-0.042-0.158l0.066,0.067l0.244,0.117l0.2-0.059l0.135,0.024l-0.009,0.168l-0.353,0.653  h-0.167l-0.051,0.21l-0.779,0.628V68.6l0.939-0.728l2.237-3.201v-0.193l0.066-0.117l-0.033-0.821L73.84,63.43l-0.025-0.268  l0.075-0.209v-0.101h-0.143l-0.033-0.143l0.268-0.368v-0.236l-0.041-0.116l0.126-0.16l0.352-0.032l0.05-0.201l0.377-0.36l0.277-0.11  l0.41-0.419l0.712-0.352l0.712,0.109l-0.05-0.177l-0.067-0.066l0.821-0.31v-0.269l0.185-0.092l0.503-0.034l0.134,0.075l0.394-0.075  l0.101-0.159l0.06,0.167l0.1,0.043l0.83-0.059l0.066-0.419l0.135-0.185l0.628-0.227l0.269-1.173l0.193-0.076l0.1-0.116l0.118-0.36  l0.184-0.117v-0.15l0.36-0.428l0.084-0.235l0.025-1.072l0.402-0.41l0.126-4.072l0.335-0.429h-0.067l-0.085-0.074l0.018-0.143  l0.16-0.093l0.301,0.168l0.159-0.101l0.687-0.972l0.051-0.335l0.143-0.151l0.025-0.134l1.994-2.111l0.193-1.634L86.082,42.816z   M36.541,21.239v1.927l-0.024-1.902L36.541,21.239L36.541,21.239l0.109-0.109L36.541,21.239z M54.24,55.051h-0.06l0.202-0.135  L54.24,55.051z\");\n        s_southamerica.polygon(36.541, 23.167, 36.541, 21.239, 36.517, 21.265);\n        s_southamerica.polygon(36.541, 21.239, 36.65, 21.13, 36.541, 21.239);\n        s_southamerica.polygon(54.24, 55.051, 54.383, 54.916, 54.181, 55.051);\n        s_southamerica.polygon(51.768, 19.772, 51.684, 19.865, 51.709, 20.091, 51.928, 20.359, 51.96, 20.485, 51.885, 20.669, 51.633, 20.753, 50.217, 20.552, 50.158, 20.669, 50.158, 20.795, 50.293, 20.829, 50.611, 21.105, 50.854, 20.913, 50.972, 20.896, 51.173, 20.988, 52.002, 20.988, 52.161, 20.921, 52.304, 20.921, 52.422, 21.046, 52.505, 21.046, 52.891, 21.407, 52.957, 21.423, 53.176, 21.113, 53.209, 20.971, 53.367, 20.803, 53.846, 20.988, 53.963, 20.988, 54.289, 20.787, 55.003, 20.803, 55.186, 20.871, 55.422, 20.871, 55.706, 20.644, 55.706, 20.585, 55.647, 20.435, 55.279, 20.141, 55.128, 20.141, 54.759, 20.007, 54.759, 19.932, 54.457, 19.873, 54.314, 19.731, 54.314, 19.622, 54.248, 19.555, 52.975, 19.27, 52.756, 19.32, 52.597, 19.471, 52.137, 19.471, 51.868, 19.237, 51.559, 19.161, 51.449, 19.27, 51.256, 19.32, 51.189, 19.396, 51.189, 19.588, 51.441, 19.588);\n        s_southamerica.polygon(40.991, 17.318, 41, 17.46, 41.436, 17.175, 42.131, 16.991, 42.667, 16.622, 43.53, 16.731, 43.488, 16.882, 43.262, 17.041, 43.932, 17.133, 44.008, 17.208, 44.176, 17.275, 44.52, 17.2, 44.703, 17.268, 45.189, 17.661, 45.893, 17.812, 46.17, 17.762, 46.287, 17.879, 46.338, 18.03, 46.338, 18.281, 46.698, 18.608, 47.318, 18.6, 47.628, 18.708, 47.746, 18.826, 47.628, 18.994, 47.377, 19.085, 47.176, 19.295, 47.301, 19.421, 47.711, 19.362, 47.88, 19.262, 49.379, 19.396, 49.514, 19.354, 49.73, 19.127, 50.242, 19.127, 50.367, 19.002, 50.242, 18.876, 50.05, 18.826, 49.908, 18.658, 49.404, 18.491, 49.062, 18.491, 48.901, 18.332, 48.901, 18.206, 48.34, 18.088, 48.122, 17.854, 47.812, 17.753, 47.553, 17.552, 47.485, 17.527, 47.443, 17.494, 46.773, 17.318, 46.656, 17.208, 45.81, 16.916, 45.592, 16.916, 45.164, 16.446, 44.67, 16.371, 44.453, 16.237, 43.857, 16.161, 43.615, 16.237, 43.129, 16.153, 41.167, 16.765, 40.924, 17.075, 41.051, 17.2);\n        s_stat_southamerica = this.get(\'draw_stat_southamerica\');\n        c1 = s_stat_southamerica.circle(cx = \"115\", cy = \"115\", r = \"70\").addClass(\"circle-back\");\n        c2 = s_stat_southamerica.circle(cx = \"115\", cy = \"115\", cr = \"70\").addClass(\"circle-front\").attr({\n          transform: \"r-90\"\n        });\n        s_stat_southamerica.g(c1, c2);\n        txt = s_stat_southamerica.text(x = \"35%\", y = \"50%\", \"8.2%\").addClass(\"orangetext\");\n        s_stat_southamerica.g(txt).addClass(\"textpercentage\");\n        setTimeout(function() {\n          return s_stat_southamerica.addClass(\'eight-percent-filled\');\n        }, 2000);\n        s_africa = this.get(\'draw_africa\');\n        africa_mainland = s_africa.path(\"M94.42,37.32l-2.638,7.907l-12.775,12.38l1.418,14.804l-6.692,7.095l0.406,4.878l-4.056,2.638l-1.22,5.266l-8.924,7.303    L52.436,100l-7.914-20.286l-1.621-10.946l2.836-4.061l-6.282-12.782l-0.609-5.475l-6.896-3.042l-14.402,2.84L5.58,35.494    l0.412-13.18c0,0,10.743-14.401,10.946-15.014c0.208-0.603,4.665-5.473,4.665-5.473l5.478,0.401L40.878,0l2.023,1.415    l-0.203,4.469l10.143,3.235l4.665-2.422l14.809,4.861l-0.406,3.648l8.318,17.042l6.489,5.072H94.42z\");\n        madagascar = s_africa.polygon(91.782, 68.152, 93.408, 73.636, 89.148, 85.391, 85.699, 85.802, 85.496, 79.506, 85.293, 74.24);\n        s_africa.g(africa_mainland, madagascar);\n        s_stat_africa = this.get(\'draw_stat_africa\');\n        c1 = s_stat_africa.circle(cx = \"115\", cy = \"115\", r = \"70\").addClass(\"circle-back\");\n        c2 = s_stat_africa.circle(cx = \"115\", cy = \"115\", cr = \"70\").addClass(\"circle-front\").attr({\n          transform: \"r-90\"\n        });\n        s_stat_africa.g(c1, c2);\n        txt = s_stat_africa.text(x = \"35%\", y = \"50%\", \"25.1%\").addClass(\"orangetext\");\n        s_stat_africa.g(txt).addClass(\"textpercentage\");\n        setTimeout(function() {\n          return s_stat_africa.addClass(\'twentyfive-percent-filled\');\n        }, 2000);\n        s_asia = this.get(\'draw_asia\');\n        s_asia.path(\"M143.4 501.6c0.9-0.3 2.4 2.2 3.9 2.9 1.8 0.8 1.9 4.2 3.4 6 3.1 4 6.6 7.8 4.8 12.7 -1.2 3.2-4 4.8-7.5 4.9 0.4 1-1.1 0.7-1 1.5 -1.4 0-2.8-0.4-3.7-1.2 -1.9-1.8-3.3-4.9-2.6-6.9 1.2-3.1-2.4-5.8-0.9-7.5C143.1 510.1 138 503.7 143.4 501.6L143.4 501.6zM326.9 586.5c0.1-1 0.9-1.9 1.5-2.2 0.6-0.4 1.5 0.1 1.4 1.3 0-0.5-0.1-1 0.1-1.4 0.1-0.4 1 0.6 0.9-0.5 0.5 1.4 1.4 2.7 3 2.7 2.1 0.1 2.9-1.2 5 1.4 -0.3-0.7 0.1 0-0.1 0.2 -0.9 1.5-2.2 2.2-3.5 0.9 1.7 1.9 4.7 4 2.9 6.8 -2.1-4.5-6.5-6.4-11-7.8C326.8 587.7 326.8 587 326.9 586.5L326.9 586.5zM344.7 594.7c0.2-0.3-0.1-1.1 0.1-1.3 1.2-0.9 3-0.6 4.2 0.1 1.3 0.7 0.1 2.9-0.9 3 -0.9 0-1.9 0.9-2.8 0.2C344.8 596.2 343.6 595.9 344.7 594.7L344.7 594.7zM323 573c0.1-0.8-0.1-1.9-0.9-1.7 -1.2 0.3-0.1 1.4 0 2.2 -0.5 0-0.8 0.8-1.4 0.5 0 1.2 0.3 2.6-1 3.4 1-0.9 2.2-0.8 3.4-1 -1 0.1-0.6-0.6-0.4-0.9 0.4-0.6 1.7-0.4 1.7-1 -0.1-0.6-0.5-1.6-1.3-1.9C323 572.7 323 572.8 323 573L323 573zM299.4 558.5c0.1-1.1 1.8-2.2 2.3-0.9 0.3 0.6 0.4 1.9 0 2.2C300.8 560.5 300.5 558.6 299.4 558.5L299.4 558.5zM307.5 564c-0.8-0.4-1.3-0.9-1.9-1.5 -0.3-0.3-0.8 0.1-0.8 0.4 0.1 1.2 1.5 1.3 2.4 1.8C307.3 564.8 307.8 564.1 307.5 564L307.5 564zM313.7 566.4c-0.4-0.4-1.4-0.1-2.2-0.1 0.7 2.1 3 1 4.3 1.9C315 567.7 314.4 567.1 313.7 566.4L313.7 566.4zM309 565.8c0-1.7-1.1-0.1-1.4-0.5 -0.3 0.6 0.4 0.9 0.5 1.4 1-0.4 2.1 1.5 2.9 0L309 565.8 309 565.8zM309 565.8c0-1.7-1.1-0.1-1.4-0.5 -0.3 0.6 0.4 0.9 0.5 1.4 1-0.4 2.1 1.5 2.9 0M279.6 580.8c-0.2-0.1-0.8-0.1-0.9 0 -0.6 2.3 2.1 3.6 3.9 4.7 0.1 0.1 0.6-0.5 0.4-0.8C281.8 583.4 280.8 582 279.6 580.8L279.6 580.8zM286.4 589.8c-0.1-0.4 0.1-1.1-0.1-1.3 -0.2-0.3-0.9-0.1-1.4-0.1 0.9 0.9 1.7 1.8 2.9 2.4C287 591 286.7 590.4 286.4 589.8L286.4 589.8zM291.7 595.7c-0.3-1.2-1-2.4-2.4-1.9 1.9 0.9 2.2 3.4 4.4 3.9 -0.2-1-1.1-1.6-1.4-2.4C292 595.4 291.8 595.5 291.7 595.7L291.7 595.7zM273.4 568.2c-0.1-2.4-2.3-3.6-3-5.8 -0.3-0.9-1.2-0.4-1.9-0.5 0.6 0.7-1.1 0.3-0.4 1 -0.5-0.3-0.9-0.6-1.4-0.5 1.9 2.3 4.1 4 5.9 6.6 0.1 0.2 1.2-0.1 1.3-0.9C273.7 568.2 273.4 568.2 273.4 568.2L273.4 568.2zM277.7 573.9c-1.2 0.4-0.8-1.2-1.4-1.4 -0.5 1.4 0.1 2.9 0.1 4.3 0 0.1 0.7 0.5 0.8 0.4 0.9-1.2 1.3-2.2 1-3.8C278 573.6 277.9 573.9 277.7 573.9L277.7 573.9zM262.8 555.2c-1.2-2.2-3.5-4.8-6.3-3 2.4 0.9 3.7 2.4 5.8 3.7C262.5 556.1 261.7 555.1 262.8 555.2L262.8 555.2zM453.7 609.6c-1 1.7-0.5 5.5 1.9 5 0.9-0.2 1.4-2 1.2-3 -0.1-0.8-1.4 0.7-1.4 0.4 -0.4-1.5 0.9-3.2 2.2-4.2C455.6 606 454.6 608.2 453.7 609.6L453.7 609.6zM450.4 609.2c-1.7 2.7 0.9 4.1 2.4 5.8 0.5-1.4 0.7-2.8 0.4-4.3C452.9 609.1 451 610.4 450.4 609.2L450.4 609.2zM447.5 612.6c-0.4 1.2 0.6 1.9 1.4 1.7 1.1-0.3 0.2-2.7-0.9-3.2C447.8 611.6 447.6 612.1 447.5 612.6L447.5 612.6zM459.3 581.9c0.7 0.8 3 0.7 3.9-0.4 0.7-1-1.1-1.5-1.8-1.6C460.3 579.9 458.4 581 459.3 581.9L459.3 581.9zM457.4 583.9c-0.6 0.9-1.8 1.9-0.6 2.4 1.8 0.7 2-1.2 1.8-2.7C458.2 583.6 457.9 583.4 457.4 583.9L457.4 583.9zM462.9 584.1c-1.2-0.3-2 0.5-2.9 1 -0.1 0.1-0.1 0.7 0 0.8 0.9 0.6 1.9-0.1 2.9-0.4C462.4 585.1 464.1 584.5 462.9 584.1L462.9 584.1zM450.8 579.3c1.3-0.8 2.4-2.4 3.8-1.8 0.3 0.1-0.1 0.8-0.4 0.8C452.8 578.3 451.8 578.2 450.8 579.3L450.8 579.3zM507.2 587.9c0.9-1.2 2.8-0.7 3.9 0.1 0.5 0.4-0.4 0.9-0.4 1.4 -1.4-0.1-3.5 0.6-3.9-1.4C507 588.1 507 587.7 507.2 587.9L507.2 587.9zM490.4 586c1.4-1.3 5-2.5 5.3 0.5 -1.2-0.1-2.3 0.1-3.4 0.5 0.1-0.5-0.1-0.9-0.5-0.9C491.4 585.9 490.8 586 490.4 586L490.4 586zM491.9 576.4c-2 0.6-0.8-0.9-1.4-0.4 0.6-3.3 0.8-6.7-1-9.6 1.8-0.5 3.2-1.5 4.7-2.6 0.4-0.2 0.9-1 0.6-1.8 -0.1 1.4-1.2-0.4-1.4 0.5 -2-2.2-1.4-4.8-0.3-7.1 0.1-0.3 1.7-1.4 2.1-0.1 0.4 1.1 0 2.2-0.7 3.4 -0.7 1.2 1.2 2 0.9 3.3 0-0.3-0.1-0.8 0-0.9 1.1-0.4 2.2-1 3.3-1 -1.3 1.5-0.3 3-0.7 4.8 -0.3 1.2-2.4 1-1.9 2.4 0.5 1.8 2.2 3 2.7 4.9 -1.6-0.9-2.7-2.4-3.8-3.9 -3.8 3.3-1.6 9.4 1.9 12.1 -0.9-0.6-1.4 0.9-1.9 0.4 -1.1-1-3-1.5-2.5-3.2 -1.4 0.5-0.7 1.5-0.4 2.4 -1.6 0.3-1.4-1.5-2.4-1.9 -0.9-0.4-1.6 1.1-2.4 0.4 -0.6-0.6-0.7-1.5-0.9-2.4 -0.1-0.3 0.6-0.6 0.7-0.4 0.1 1.2 1.3 0.7 1.6 1.4l2.7 0.4C491.1 577.2 492.6 576.2 491.9 576.4L491.9 576.4zM496.7 556.6c0.9-0.9 1.5-2.3 2.9-2.4 0.3 0 0.7 0.6 0.4 0.8 -1.4 1-1.9 2.7-3 3.2 -1 0.4-0.6-1.2-0.3-2.1C496.7 556.3 496.7 556.4 496.7 556.6L496.7 556.6zM510.1 574.9c0.9-1.2 2.3-1.4 3.4-1.2 0.7 0.1 1.7 1.2 0.4 2.2 -0.2 0.1-0.7-0.1-0.9 0.1 -0.1 0.2 0.1 0.6-0.1 0.9 -0.7 1.3-1.6-0.2-2.4-0.2C510.1 576.7 511.4 575.3 510.1 574.9L510.1 574.9zM556.9 605.6c-6.9-1.9-14.1-1.7-20.5-4.9 -0.7-0.3-1-1.8-1.7-2.4 -0.6-0.6-1.9-0.1-2.2 0.8 -0.2 0.6 0.1 1.5-0.1 1.8 -1.1 0.9-1.7 3-3.2 2.4 -1.7-0.8-2.4-2.9-3.8-4.3 -0.9-0.9 1.4-2 0.6-3.2 -0.7-1.2-2.4-1.7-3-2.6 -0.7-1.5-1.5-1.9-1.3-3.8 -0.1 1.6-0.6 1.8-1.5 2.9 -1.2 1.3-2.9 2.2-4.6 1 -0.2-0.1-0.2-0.7 0-0.9 1.2-0.7 3.3-0.4 3.1-1.9 -0.2-1.9-2.9-1.5-4.6-2.4 3.3-2.3 6.8 1.4 10.1 1.2 0.3 0 1-1.6 0.4-1.9 -3-1.6-5.8-3-9.5-3.5 -1-0.1-3.2-1-3-3.2 0.1-0.4-0.1-0.5 0.4-1.9 1.5-0.6 1.6 0.4 2.7 2.1 0.1 0.3 1-0.1 1.2 0.2 0.4 0.4-0.9 1.4-0.4 1.6 1.5 0.5 1.8-1.1 3-2.1 0.4-0.3 1.4 0.1 1.7-0.2 1.9-1.7 4.2-5.2 6-3.3 3.4 3.5 7.7 0.8 10.9 3.5 0.2 0.2-0.1 0.9-0.2 1.4 -0.4 1.1 2.2 1.7 1.5 2.7 -2.9 3.9-0.7 7.8 1.5 9.6 0-0.5 0.1-1.2 2-0.9 1.9 0.2 0.4 2.9 1.6 4 0.3 0.3 1 0.2 1.3 0 1.9-1.4 2-4.4 4.9-4.5 0.4-0.1 0.3-1.9 0.7-2.4 1.6-1.6 4.4 0.1 6.5-1.2 0.6-0.4 0.9-1.4 1.6-1.7 0.9-0.4 2.5 0.3 3.1-0.3 0.9-0.9 1.1-2.7 1.2-4.2 0.9 0.4 1.9-1 2.2-0.4 0 0 0.3 3.7-1.2 6.5 -1.5 2.8-4.8 7.6-5 9C559 599.3 556.9 605.6 556.9 605.6L556.9 605.6zM540.3 613c0.1-1.1-0.6 0.3-1.2 0.1 -0.4-0.1-1.4 0.2-0.9 0.7 0.8 0.9 1.9 2 1.2 2.9 -0.4 0.5-0.9 1.4-1.8 1.1 1.1 2 2.6 3.5 4.1 1.3 0.6-0.8-0.4-1.9-1.2-2.7 0.8 0 1.9 0.3 2.2-0.1 1-1.4-0.7-2.2-1.7-3.2C541.5 613.3 539.8 613.2 540.3 613L540.3 613zM529.4 613c-1.9 0.8-3 1.9-2.4 3.2C528.1 618.2 529.7 614.8 529.4 613 529.8 613 529.2 613 529.4 613L529.4 613zM547.3 579.3c1.9 0.5 3.5 2.8 5.2 2.2 1.5-0.6-0.6-1.9-0.9-3.1 -0.7 0.6-1.1 1.4-0.9 2.4 -0.8-0.9-1.5-1.7-2.4-2.4C547.4 577.9 548.1 579.4 547.3 579.3L547.3 579.3zM546.8 584.6c2.7 0 5.5-0.2 8.2 0.1 0 0 0.1 0.6-0.1 0.8 -2.2 2-4.4-0.8-7.1-0.4 0.1 0.1-1-0.4-0.8-0.1L546.8 584.6 546.8 584.6zM543.1 580.4c-0.9 0.9 0.5 1.8 1.3 2.2 0.2 0.1 0.7-0.5 0.4-0.8C544.3 581.2 544 579.5 543.1 580.4L543.1 580.4zM507.8 562.4c2.7 0 5.5 0 8.2 0 -0.1 0.6-0.1 1.1 0.4 1.4C513.4 564.1 510.6 563.6 507.8 562.4L507.8 562.4zM445.1 529.6c-1.3 0.3-3.5-0.6-3.5 0.4C441.7 531.9 443.8 530.4 445.1 529.6L445.1 529.6zM435.9 534.9c-1 0.7-1.3 1.9 0 2.4 -0.5-1.1 0.7-1.9 0.4-3C436.2 534.6 436.1 534.8 435.9 534.9L435.9 534.9zM474 543.5c-1 0.1-0.6 0.7-0.4 0.9 0.3 0.4 0.7 0 0.9-0.4 0.1-0.3 0.1-0.6 0.1-0.9C474.3 543.3 474.1 543.5 474 543.5L474 543.5zM356.4 427.8c1.6 0.2 2.2-1.6 3.7-2 3.2-1 6.2 0.1 9.2 0.8 0.1 0.1 0.2 1-0.1 1.2 -2.2 1.9-3.3 4.2-4.5 6.7 -1 2-3 4.5-5.5 3.8 -2.3-0.5-3.8-1.7-6.3-2 -1.8-0.2-2.2-3.5-0.8-4.2 2.2-1.2 1.5-4.4 4.1-4.6C356.3 427.5 356.3 427.8 356.4 427.8L356.4 427.8zM449.4 387c-0.3 1.4 0.8 1.3 0.4 2.7 -0.4 1.7-2.4 2.4-2.7 4.3 -0.9 4.5-3 8-4.5 12 -0.6 1.5-2.1 2.5-3.5 3.7 -0.9 0.8-0.6 3.5-2 3.2 -3-0.4 0.8-2.4 0-3.7 -1.9-3.4-4.2-6.3-5.5-10 -0.9-2.3 2.4-4.5 4.2-6 3.8-3.3 7.6-6.1 12-8.6 1-0.6 2.7-0.1 2.7 1.3C450.2 386.2 449.7 386.7 449.4 387L449.4 387zM237.9 475.9c0.1 5.5 0.9 11.3-2.3 16.1 -0.9 1.4-0.7-2.3-2.5-1.7 1.2-3.2 1.5-6.6 2.7-9.7 0.9-2.4-0.7-5.1 0.1-7.7L237.9 475.9 237.9 475.9zM232.2 499c-0.6 1.9 2.2 0.4 1.9 1.9 1.4-0.6 0.9-1.9 1-2.9C234 498.1 232.7 497.6 232.2 499L232.2 499zM239.9 512.6c-0.6 0.2 1.2 2.1-1 1.9 1.2 0.1 2.4 0.3 2.8-1C242.2 511.4 240.6 512.4 239.9 512.6L239.9 512.6zM241.8 519.3c2.2 0.8-0.8 4.8 2.9 4.8C243.4 522.7 242.4 521.1 241.8 519.3L241.8 519.3zM480 318.6c-1.9 1.1-5-0.4-5.8 2.9 2.6-0.5 5.6 1.4 7.6-1.1 0.5-0.6 0.1-1.8 0.1-2.7C481.3 318 480.7 318.3 480 318.6L480 318.6zM521.5 285.9c0.4 1.7-3.5 1.2-1.8 2.7 0.4 0.4 1.2 0.9 1.8 1C524.3 290.2 522 287.4 521.5 285.9L521.5 285.9zM520.8 326.6c0.8 0.1 1.2-0.6 1.3-1 0.6-1.4-0.4-2.6-1.2-3.9 -0.6-0.9 0.6-1.6 0.9-2.4 -0.4 0.4-1.3-0.6-1.4 0.5 -0.7-0.9-0.1-2.2-0.6-2.7 -0.9-0.7-1.7 1.7-2.7 1.1 -1.3-0.7-2.6-3.4-3.6-1.9 -1.6 2.1-4.5 2.6-6.4 3.9 -0.8 0.4 1.7 0.7 1.2 2.1 -0.2 0.7-1.9 0.4-1.3 1.4 0.1 0.2 1 0.3 1.3-0.4 0.4 0.6 0.8 1.2 0.4 1.9 -0.6 1.2-1.3 2.8-0.7 3.1 2.9 1.3 3.6-3.3 3.8-6 0.1-0.9 1.1-0.4 1.2 0.1 0.3 0.9 0.4 2-0.1 2.7 -1.4 2.7-1.7 5.5-1.4 8.4 0.1 0.7-1.9 0.9-1.2 1.7 0.7 0.6 2.4 0.2 2.7-1.3 0 0-0.3 1.8 0.1 1.7 0.5-0.1 1.2-1.7 1.9-2.7 -1.8 1.7-0.3 4.7-2.4 6.3 1.3 0.3 3.2-0.1 3.5-0.7 1.7-3.2 4.3-5.9 4-9.9C519.9 328 521.5 327.8 520.8 326.6L520.8 326.6zM504.7 321c-0.7-0.4-0.6 1.2-1.4 1.7 0.6-0.1 1.2-0.1 1.5 0.5C504 321.9 507.6 322.9 504.7 321L504.7 321zM501 323.2c-0.9 1.2-4 1.9-2.7 3 1.9 1.7 1.7-3 4.1-3.5C502.4 322.7 501.8 322.1 501 323.2L501 323.2zM516.4 339.6c-0.5 1.9 1.7 4.8-0.5 5 -1.7 0.1 0-2.1 0.1-3.5L516.4 339.6 516.4 339.6zM513 342c-0.6 1-2.3 1.5-2.1 2.4 0.2 1.2 1.5 0.4 2-0.5 0.4-0.6 0.1-1.6 0.1-2.4C513 341.7 513.1 341.9 513 342L513 342zM541.7 317.9c0.6-1.3 0.9-2.5 1.4-3.8 -2.2-0.1-4.4-2-6.1-0.7 -0.5 0.4-1.3-0.1-1.9 0.5 -1.1 1.2-3.7-0.1-4.8 0.6 -1.5 0.9-3.8 1.6-4.2 3.1 -0.4 1.5-0.9 4.1 0 4.9 1.8 1.6 3.7 3.7 6.4 4.2 0-0.4 0.1-0.7 0-0.9 -0.4-0.9-1.2-0.4-1.9-0.5 0.8 0.3 1.2-0.9 1.9-0.5 0.7-1.9 0.2-4.4 2.9-4.8 -0.2-0.9 0.4-1.6 1-1.8 0.7-0.3 1.6-0.1 2.4-0.1 -0.1 1.2 0.6 2 1 2.4C539.7 320.3 541.5 318.3 541.7 317.9L541.7 317.9zM544.2 308.7c-1.6-1.8-3.8-0.7-5.5-0.1 -0.9 0.4-1.7 2.7-3.5 2.6 0 0.4 0.1 0.9 0 0.9 -0.9 0.5-1.7-0.6-2.4-0.6 -2.8 0-4.8 1.2-7.8 0.5 -1-0.3 0.5 2.2-1.4 2.2 0.6 1.1 0.9 2.4 2.4 1.9 0.1 0.5-0.1 0.9-0.5 0.9 -0.4 0.1-1.2 0.1-1.3 0 -1.2-3.2-5.5-0.7-7-2.2 -1.2-1.4 1.3-3.8 3.5-2.5 0.8 0.4 3-1.9 4.8-3 0.1-0.1 0-0.7 0.1-0.8 1-0.4 2.7 0.4 3.1-0.6 1.2-3.4 5-3.7 7.7-5.4 0.7-0.4 2.7 0.6 2.2 2.1 3.8 0.4 5.9-3.1 9.2-4.3 0.1 0.9-0.9 2-0.4 2.2 1.8 0.5 3.8-0.2 5.6-0.9 1-0.4 0.2-1.9 0.7-2.6 1.5-2.1 4.1-2.2 5-4.5 0.6-1.5-0.7-3.4-0.4-4.7 0.3-1.1 1.4-2.4 2.5-3.5 0.2 1.7-0.8 3.2-0.4 4.8 0.6-0.3 0.8 0.8 1.4 0.5 0 0.8-0.2 1.7 0.1 2.4 0.1 0.1 0.6 0 0.9 0 -0.2-1.4 0.8-2.7 1.6-3.1 4.2-1.9 7.9-4.5 11.6-7.3 0.9-0.8 2.3-1.3 3.7-1.2 -0.1-1.6 2.1-2.2 1.7-3.3 -0.4-1.2-1.8-2.2-3.2-1.9 3.3-2.1 4.8-5 4.2-9.2 -0.3-2.6 3.7-3.2 5.4-5.3 0.9 2.3 3.7 3.5 6.2 1.8 0.2-0.1 0.1-0.9 0.1-1.4 -0.9 0.3-1.7-0.3-2.4-0.4 1.1-1 2.5-1.2 3.9-1.4 -0.4 3.7-0.9 7.3-1.2 11.1 0 1-0.4 2.2-0.8 3.3 -0.9 2.3-3.2 3.1-4.8 4.9 0.8-0.1 0.5 1.3 1.4 0.9 -0.3 0-0.7-0.1-0.9 0.1 -3 2.7-0.2 6.6-2 9.5 -1 1.7-2.4 3.2-2.5 4.9 -0.1 1.4 0.4 3.1 2.1 3.8 -1-0.2-1.9 0.5-2.2 1.1 -0.8 1.4-0.6 3.5-1.7 4.6 -1.5 1.5-4 2.3-5.5 1.7 -1-0.4 1.2-2.6 0.6-3.8 -0.4-0.6-1.5 0.3-2.1 0.6 -1.8 0.9-0.3 4-2.2 4.9 -1.4 0.6-2.8-1.1-4-1.7 -1.6-0.7 0.5-2.5 0.7-4.4 -1.1-0.1-2 0.7-2.2 1.4 -0.3 1.1-1.9 1.5-1.2 2.9 -2.6-0.2-5.4 1.6-7.8-0.5 0.4 0.9-1 1.7-0.4 2.3 0.4 0.4 1.6 0 1.7 0.2 1.4 3.5-4.1 1.3-4.7 3 -0.8 2.2-1.9 4.5-4 6 -1.3 0.9-2.7-0.8-4.2-0.8 0.2-2.2-2.2-2-2.7-3.5 -0.6-1.9 2.1-2.1 3.1-3.3 -0.7-0.1-4.2 1.1-4.3 2.4 -1.1-0.8-0.3-1.8 0.1-2.2 0.6-0.6 0.6-0.2 1.5-0.8L544.2 308.7 544.2 308.7zM569 279.9c-1.7-0.2-2.1 2.3-1.8 3.7 0.2 0.7 1.4 0.7 1.8 1.5 -0.3-1.9 0.6-3 2.4-3.5 0.1-0.1 0.2-1.1 0-1.2C570.7 280 569.8 280.1 569 279.9L569 279.9zM582.6 260.1c-0.9 0.6-1.4 1.7-0.9 2.2 0.4 0.5 1.7 1.1 2.2 0.5 2.2-3.4 5.5-3.3 8.9-3 0.4 0.1 1.3-1.2 0.8-1.5 -2.3-1.7-1.2-4.7-2.1-6.3 -0.3-0.5-1.8-1.2-1.9-1.7 -0.2-1.9-0.1-2.5-1.7-3.9 -0.3-0.3 0.4-0.7 0.4-0.9 -0.1-0.8-1.4-0.8-1.8-1.5 0.6-0.3 0.4-0.9 0.4-1.4 3 0.8 5.3 3.4 8.7 2.9 -0.2-0.9 1-1.1 0.9-1.9 3.5 0.4 6.8 1.9 10 0.7 0.6-0.2-1.1-1.2-0.7-2.1 0.7-1.9 1.9-3.6 3.2-5.4 1.8-2.7 3.1-5.8 1.2-8.4 -0.3-0.4-2.3-0.1-2.9-0.9 -3-4.2-6.2-7.3-10.4-10.4 -0.8-0.6-1.4 0.8-2.4 0.4 0 2.7 3.2 3.5 3.6 5.8 0.4 2.4 1.2 4.5-0.4 6.8 -0.4 0.5 0.2 1.8 1.2 2.2 -1.5 1.2-1.9 3.4-3.5 4.2 -0.9 0.4-2.4 0.7-3.2 0.4 -1.9-0.9-4-1.7-6-3 -0.9-0.6-2.4-0.1-3.2 0.8 1.3 0.8 3.1 1.7 3 2.9 -0.1 1.8-3.3 2.3-3.9 4.4 -0.5 2 1.8 3 2.5 4.4 0.6 1.4-1 2.7-2.2 3.7 2.7 0.7 2.1 2.2 0.9 4.4 0.9 0.2 1.6 1.1 2.4 1.4 -0.9 0.9-0.2 2.7-1.5 3.3 -0.4 0.1-0.9 0.1-1.4 0.1C583.7 259.7 582.5 259.3 582.6 260.1L582.6 260.1zM505.2 312.3c-1 0.4-1.8 2.8-0.1 4.4 1.4 1.3 1.4 0.1 1.9-0.9C504.5 315.4 507.3 311.4 505.2 312.3L505.2 312.3zM508.9 349.5c0.8 1.8-4.2 2.7-0.9 4.7 0.5 0.4 1.5 0.4 1.7 0C510.9 352.6 508.3 351.3 508.9 349.5L508.9 349.5zM502.9 360.2c-0.4-0.6-1.2 0.1-1.7 0.9 -1.4 2.4 1.7 1.7 1.9 2.9C503.2 362.7 503.6 361.2 502.9 360.2L502.9 360.2zM498.3 367.8c-1.6-0.3-2.4 1.2-2.6 2 -0.3 1.2 1.6 0.9 2.6 0.9 0-1.2 0-2.5 0-3.8C498.3 367.1 498.3 367.5 498.3 367.8L498.3 367.8zM494.4 373.6c-3.2 1.6-10.4 0.5-9.3 5.7 0.1 0.2 1.8 0.4 2.4-0.1 0.4-0.2 0.1-1.2 0.1-1.8C491.7 378.9 491.6 375.3 494.4 373.6L494.4 373.6zM532.1 295.5c-1.5 0.4-2.3 1.5-2.9 2.9 0.6 0 1.3 0 1.9 0C530.5 297.1 532 296.5 532.1 295.5L532.1 295.5zM235.2 408.4c-0.3-0.6-0.6-1.3-0.9-1.9 -0.8-1.5 0-3.4-0.6-5 -0.1-0.1-0.6 0.1-0.6-0.1 -1.3-1.7 0.1-3.7-0.6-5.5 -0.1-0.5-0.9-0.4-0.9-1 -0.2 0-0.5 0.1-0.7 0.1 -0.6 0.2-1.7-0.8-1.7-0.1 -0.1 0.9 0.8 1.7 0.2 2.6 -0.1 0.2-0.6 0.4-0.8 0.6 -0.6 0.4-0.1 1.7-0.6 1.9 -1 0.4-1.2-1.2-2-1.7 -1.1-0.7-1.9-2.4-1.4-3.7 0.1-0.3 0.5-0.9 1.1-1 -0.1-0.1-0.3-0.4-0.2-0.4 0.9-1.2 2.3-0.3 3.2-1.7 0.1-0.1 0.3 0.6 0.6 0.6 1.2-0.3 1-2.4 2.4-2.1 0-0.7-0.1-1.5 0.1-2.1 0.4-0.7 1.2-0.7 2-0.9 0.2 0 0.9 0 0.7-0.6 -0.1-0.5-1.1-0.3-1.2-1 0.5 0.1 0.1-0.4 0.2-0.4 -4.6-2-9.9-0.2-14.9-1.2 -0.6-0.1-1.2-0.6-1.7-0.6 -1.2-0.1-2.4-0.4-2.5-1.6 -0.1-1.3-0.3-2.7 0.4-3.9 -1.1-0.5-0.1-2.1-1.4-1.9 0 0 0 0.3 0 0.4 -0.4-0.1-0.9 0.1-1.2 0.4 -0.4 0.3-0.4 0.9-1 0.6 -1.2-0.6-1.4-1.9-2.3-2.7 -0.2-0.3-0.9-0.1-1.4-0.1 -0.1 0-0.3 0.2-0.2 0.4 -1.5-0.5-2.5-2.2-3.8-2.1 -0.6 0 0.5 1.7-0.4 2.5 -0.9 0.9-1.3 1.9-2 3 -0.3 0.4 0 0.9 0.2 1.2 0.4 0.8 0.7-0.2 1.2-0.2 0.2 0 0.6 0 0.6 0.1 0.4 1 1.4 0.7 1.9 1.7 0.6 1 1.7 1.4 2.7 0.9 0 0.4 0.1 0.8-0.1 0.9 -0.9 0.9-2.3 1-3.5 1 0.1 1.7-1.5 1.4-2.7 1.7 0.1 0.7-0.1 1.6-1 1.7 0.7 2.2 3.8 2.8 5 4.5 0.9 1.2 1.6 3.1 0.9 4.8 0 0.1-0.3 0-0.4 0.1 -0.3 0.2-0.6 0.5-0.5 0.9 0.2 0.5 0.6 0.9 1.2 0.7 0.1 0.6-0.5 1.3-0.1 1.9 0.1 0.4 0.4 0.6 0.8 0.9 1.2 0.8-0.6 2-0.1 3.2 0.2 0.6 0.8 1.3 0.7 1.7 -0.2 2 0 4-0.6 6 2.3 0.9 1.4-1.3 2.2-1.6 1.1-0.4 0.9 1 1.7 1.6 0.2 0.1 0.4-0.1 0.4-0.3 0.1-1.2 0.3-2.5 0.1-3.8 0-0.1 0.4-0.7 0.6-0.4 0.2 0.4 0.2 1.2 0 1.6 -0.4 0.9-0.4 1.8-0.4 2.7 0.5-0.8 1.4-0.8 2-1.3 1.2-1.1 0.1-2.7 0.3-4.2 0.1-0.7 0.8-1.5 1.8-1.7 -0.9 1.3-1.2 2.6-0.9 4.1 0.1-0.1 0.3-0.4 0.4-0.5 -0.3 1 0.6 1.5 0.7 2.4 1.2-0.9 2.7-1.8 1.9-3.4 0.3-0.1 0.6-0.4 0.6-0.5 -0.1-1.2 0.7-2.4-0.1-3.5 -0.2-0.3 0.2-0.9 0.4-1.4 1 1.5-0.1 3.2 0.2 4.8 0.3 1.4 0.9 3 1.9 1.5 0.6-0.9 1.5-2.1 0.6-3.1 -1.1-1.2-1.5-2.4-2.2-3.7 -0.2-0.4 0.2-0.5 0.4-0.7 0.1 0.4 0.4 0.6 0.7 0.7 -0.2 0.5 0.2 0.9 0.4 1.2 0.2 0.9 1.5 1.2 1.7 2.2 0.2 0.6-0.1 1.4 0.1 2.1 0.1 0.4 0.5 0.7 0.4 1.2 0.9-1.1 0.1-2.7 0.7-3.4 0.6-0.8 0.6-2.2 1.9-2.4 -0.3 1-0.9 2.2 0 3.1 0-0.4 0.6-0.5 0.8-0.8 0.6-0.6 0.8 0.6 0.9 0.9 0.5 0.9 1.2 1.9 0.9 3 0.6-0.2 0 0.7 0.5 0.5 0.1 0.5-0.6 0.7-0.6 0.9 -0.1 0.9 0.8 1.5 1.2 2.2 0.4 0.9-0.4 2.2 0.1 3 0.3 0.5 0.6 0.8 1 0.9 0 0 0.1-2.2 1.9-2.8 0 0 1.6-0.5 1.4-1.4 -0.1-0.9-0.9-2.2-0.4-3C234.5 408.4 235.2 408.4 235.2 408.4L235.2 408.4zM207.5 365.8c-0.3 1.2-1.6 1.2-1.6 2.3 -0.1 0.9 0.6 1.2 0.6 2.2 1.5-0.2 2.1 1.6 3.4 1.9 0.4 0.1 1 0.1 1.4 0 2.4-0.3 4.8 1.5 6.5-0.9 2.2 0.8 4.4 1.4 6.8 1.1 0.2-0.1 0.7-0.4 1-0.5 0.4-0.3 0.9 0.2 1.4 0.3 1.2 0.1 2.6-0.5 3-1.4 0.6-1.9-0.7-3.8-2.2-5.3 -0.1-0.1 0-0.4 0-0.7 0.4 0.4 0.1-0.5 0.4-0.2v-0.4c2.3-0.5 4.8-0.9 7.1-1.4 -1.4-3 2.7-1.9 3.2-3.9 0.4-1.4 1.2-2.2 2.2-2.7 1.2-0.6 3 0.2 4.2-0.4 2.2-1.1 3.2-4.8 5.8-4.2 1.1 0.3 2.4 1.6 4 1.6 0.4 0 0.6 0.4 0.5 0.9 2.2-0.4 3.4-3.9 5.6-2.7 1.6 0.9 0.8 2.5 0.1 4.1 0.9-0.5 1.8-1.3 2.9-1.4 0 0.9 1.7 0.9 0.9 1.9 -0.9 1.2-2 1.5-3.2 2.2 -0.3 0.1 0.1 0.7 0.4 0.7 1.8 0.1 3.2-0.4 4.8 0.6 -0.1-1.7 1-0.1 1.4-0.5l1.4 1c1.1 2.9-3 3.2-2.7 5.8 0.1 0.9 1.2 2.3 0.6 2.6 -1.4 0.8-2.5-2.6-4.1-1.9 -1.4 0.7-3.3 0.8-4.2 1.9 -0.8 1-1.8 1.7-2.7 2.6 -0.4 0.4-1.4-0.1-1.7 0.2 -1 0.9-2.6 2.2-2.2 3.2 0.4 1.1 0.9 2.4 0.1 3.5 -0.9 1.3-2.2 2.1-2.7 3.5 -0.6 1.4 0.9 3 0.2 4.2 -1.2 1.9-1.6 4-3.5 5.6 -0.4 0.3 0.1 1.5-0.2 2.2 -1.4 2.6-4-0.2-6.2 0.1 0.6 1.4 1 3.1 0.3 4.2 -0.9 1.3-0.9 1.6-0.9 3 0 0.7-0.8 0.5-1.4 0.5 0.5 2.2 0.3 4.5-0.2 6.7 -0.3 1.4-1.6 0.9-2.7 1.2l-0.9-2.2c-0.8-1.5 0-3.4-0.6-5 -0.1-0.1-0.6 0.1-0.6-0.1 -1.3-1.7 0.1-3.7-0.6-5.5 -0.1-0.5-0.9-0.4-0.9-1 -0.2 0-0.5 0.1-0.7 0.1 -0.6 0.2-1.7-0.8-1.7-0.1 -0.1 0.9 0.8 1.7 0.2 2.6 -0.1 0.2-0.6 0.4-0.8 0.6 -0.6 0.4-0.1 1.7-0.6 1.9 -1 0.4-1.2-1.2-2-1.7 -1.1-0.7-1.9-2.4-1.4-3.7 0.1-0.3 0.5-0.9 1.1-1 -0.1-0.1-0.3-0.4-0.2-0.4 0.9-1.2 2.3-0.3 3.2-1.7 0.1-0.1 0.3 0.6 0.6 0.6 1.2-0.3 1-2.4 2.4-2.1 0-0.7-0.1-1.5 0.1-2.1 0.4-0.7 1.2-0.7 2-0.9 0.2 0 0.9 0 0.7-0.6 -0.1-0.5-1.1-0.3-1.2-1 0.5 0.1 0.1-0.4 0.2-0.4 -4.6-2-9.9-0.2-14.9-1.2 -0.5-0.1-1.3-0.6-1.7-0.6 -1.2-0.1-2.4-0.4-2.5-1.6 -0.1-1.3-0.3-2.7 0.4-3.9 -1.1-0.5-0.1-2.1-1.4-1.9 0 0 0 0.3 0 0.4 -0.4-0.1-0.9 0.1-1.2 0.4 -0.4 0.3-0.4 0.9-1 0.6 -1.2-0.6-1.4-1.9-2.3-2.7 -0.2-0.3-0.9-0.1-1.4-0.1 -0.1 0-0.3 0.2-0.2 0.4 -1.5-0.5-2.5-2.2-3.8-2.1 -0.6 0 0.5 1.7-0.4 2.5 -0.9 0.9-1.3 1.9-2 3 -0.3 0.4 0 0.9 0.2 1.2 0.4 0.8 0.7-0.2 1.2-0.2 0.2 0 0.6 0 0.6 0.1 0.4 1 1.4 0.7 1.9 1.7 0.6 1 1.7 1.4 2.7 0.9 0 0.4 0.1 0.8-0.1 0.9 -0.9 0.9-2.3 1-3.5 1 0.1 1.7-1.5 1.4-2.7 1.7 0.1 0.7-0.1 1.6-1 1.7 0.7 2.2 3.8 2.8 5 4.5 0.9 1.2 1.6 3.1 0.9 4.8 0 0.1-0.3 0-0.4 0.1 -0.3 0.2-0.6 0.5-0.5 0.9 0.2 0.5 0.6 0.9 1.2 0.7 0.1 0.6-0.5 1.3-0.1 1.9 0.1 0.4 0.4 0.6 0.8 0.9 1.2 0.8-0.6 2-0.1 3.2 0.2 0.6 0.8 1.3 0.7 1.7 -0.2 2 0 4-0.6 6l0 0c-0.1 0-0.4 0.2-0.5 0.1 -1.3-0.4-1.1-1.8-1-3.2 -0.9 1.6-0.8 3.2-1.4 4 -1.7 2.4-1.9-1.9-3.5-3.5 -0.4-0.4-1.2 0.1-1.3 0.4 -0.1 0.8-0.2 1.9-0.7 2.2 -2.3 1.3-6.6 1.4-6.7 4.1 -0.1 1.3 0.9 3.2-0.1 4.1 -3 2.8-5.5 6.5-9.9 7l-0.3 0.3c-3.2 6-9.8 8.5-14.5 13.2 -1.9 1.9-5 3-7.8 4.4 -0.4 0.1-0.7 1.1-0.4 1.2 1.2 0.6 0.7 0.6 0.9 1.4 -0.4 0.1 0.6 0.6 0.8 0.6 0.6 0.1 1.2 0.9-0.2 1.9 -3 2.2-8.6 0.4-10.9 4.8 -0.3 0.5-1.4 0.7-2.2 0.9 -0.4 0.1-0.6-1-1-1.2 -1.5-0.5-2.8 0.9-3.2 2.3 -0.9 3.2 1.1 6.3 0 9.6 -0.4 1.1 0 2.2 0.6 3.5 0.6 1.2-0.1 3.5-1.8 3.7 1.9-0.4 3.7 0.5 2.7 2.3 -0.9 1.3 0.1 2.7-0.5 3.3 -1.1 1.1-1.7 2.4-2.7 3.5 -1.8 2.3-2.7 5.1-2.4 7.8 1.2-0.6 2.2-1.7 2.6-0.8 0.7 1.4 0.6 3.9 0 5.5 -1.2 2.7-5.5 0.6-6.4 4 0.5 0.1 1.4 0 1.2 0.4 -1.2 1.8-1.2 4.1-2.8 5.3 -1.4 0.9-3.1 1.2-4.6 1.9 -1.5 0.5-0.6 2.7-1.2 4 -0.8 1.6-2.8 2.7-4.5 1.8 -3.5-1.7-5.3-5.1-7.6-8.1 -2.2-2.9-0.5-6.8-2.2-9.9 -3.2-6.1-7.3-11.4-10.4-17.5 -0.8-1.6 0.7-3.6 0.1-5.1 -2.1-5.2-3.7-10.2-7.1-15 -1.4-2-3-3.6-3.7-5.8 -0.3-1.1-0.1-2.2 0.2-3.4 0.4-2.1 0.2-4.2-0.9-6.2 -1-1.9-0.6-4-1.7-5.9 -0.4-0.8-0.5-2.2 0.8-2.8 -0.3 0-0.7 0.1-0.9-0.1 -1.4-1.4 0.3-2.2 0.4-3.8 -0.6 0.4-0.9-0.4-1.4-0.4 0.1-2.8-0.1-5 0.8-7.5 0.6-1.8 0.2-5-1.7-7.1 -0.4-0.5 1.4-0.5 0.7-1.2 -0.4-0.5-0.9-1.2-1.2-1.7 -0.9-1.5 1.2-3 1.3-4.8 -1 0-1.9 0-2.9 0 0.7 1.2-0.1 1.7-0.8 2.6 -0.6 1 0.6 2.9 0.4 3.5 -0.8 1.9-2.9 4.2-5 4.6 -3 0.6-5.5 2.1-8.6 1.3 -0.4-0.1-0.6-0.4-0.4-0.9 -0.5 1.7-1.5 0.3-1.8-0.1 -0.6-1.2-0.3-2.7-1.7-3.7 -2.9-2-6-3.6-6.6-7.3 -0.1-0.3 0.5-0.6 0.8-0.9 0.3 0.7 1.7 0.2 1.4 1.4 3.4-0.9 5.5-3.2 8.2-5.3 -0.6-0.3-1.3-0.9-1.8-0.4 -2.3 2-4.7-0.8-6.8 0.1 -0.4 0.2-1.7 0.7-2 0.4 -1.8-2.2-3.9-3.8-6-5.6 -0.6-0.5-0.2-2.3-0.2-3.6 1.3 1.2 2.6 0.3 3.8 0 -0.8-1.2 1.6-1.2 1-2.4 1.4-0.7 2.7 1 4.4 0.1 0.5-0.3 1.3-0.4 2.1 0.6 1.1 1.3 3-1.2 4.5-0.6 1.5 0.6 3.1 0.5 4.3 0.1 1.3-0.4 1.8-2.4 1.3-3.5 -1.3-2.6-3.5-4.7-3.2-7.8 -0.8 0-1.8 0.2-2.2-0.1 -1.7-1.6-1.7-3.4-1.9-5.6 0-0.3 0.1-1.4-0.7-1.4 -1.4 0.1-2.7-0.3-3.2-1.5 -0.3-0.7-0.3-1.7 0-2.4 0-0.1 0.6 0.1 0.8-0.1 0.4-0.6-0.4-2.2 0.6-2.2 3.2 0 2.7-4 4.1-5.1 1.4-1 3.2 2.7 5.5 1.8 1.4-0.5 3 0.4 3.7-0.4 1.9-2 2.7-4.8 5-6.5 2-1.4 4-2.4 5.5-4.2 1.2-1.4 1.6-3.4 2.7-5 1-1.4 2.7-1.3 4.2-1.7 1.2-0.4-0.5-1.4 0.1-2.2 1.7-2.4 4.2-3.8 6.2-5.8 -1 0.4-1.4-1.1-2.4-0.9 0.1-0.9 0.3-1.8 1.4-1.9 -2-0.4-1.3-2.3-0.7-3.2 1.2-1.9 3.7-3.2 6-3 -0.4-2.9-4-1.1-5.2-2.5 -0.6-0.9 2.2-1.3 1.2-2.1 -1.1-0.7-2.8 1.7-4 0.1 -1.2-1.4-1.4-3.2-2.6-4.7 0.5 0 1 0.1 1.4-0.1 0.4-0.1 0.7-0.6 0.4-0.8 -1.2-0.6-0.7-2.2-1.9-2.5 0.8 0 1.7 0.2 2.4-0.1 0.4-0.1 0.7-1.1 0.5-1.2 -2.6-0.9-3-4.2-1.7-5.8 2.5-2.8 6.7 0.1 9.9 0.9 2.9 0.8 5.7-1.4 8.5-2.2 2.2-0.6 4.7-2.2 6.6-4.6 1.3-1.5 3.7-0.7 4.2 0.5 1.2 3.4 3.5 5.6 6 7.8 1.4 1.2-1.9 3-1.1 5 0.9 2.1 2.9 3.5 5 4.8 2.4 1.4-0.6 4-1.4 6.3 -0.1 0.3-0.9 1-1.7 0.5 -0.8-0.6-1.3-1.3-2-1.8 -0.8-0.5-2.3 0.2-2 0.7 1.5 2.8 2.8 5.5 1.2 8.4 1.1-0.4 1.8 0.9 3 0.2 1.4-0.7 1.6 2 2.4 2.4 3.5 1.7 6.9 3.2 9.6 5.8l1.4 1.1c-0.6 0.8-1 1.8-1.9 2.4 -1.3 0.9-3 0.9-3.2 2.4 -0.2 1.3 0.4 2.5-0.3 3.9 -0.4 0.8-1.2 2-0.6 2.4 1.3 0.9 2.5 3.5 4.2 2 0.1-0.1 0.5 0.1 0.6 0.2 0.3 0.4 0.6 0.9 0.9 1.3 0.3 0.3 1-0.1 1.6 0.3 1.5 1 2.5 2.4 4.1 3.2 0.9 0.4 2 0.2 2.8 0.6 0.5 0.3 1.1 0.7 1.6 1 0.5 0.3 1.3 0 1.9 0.2 1.8 0.6 2.7 2.4 4.8 2.4 0.4 0 0.1 0.8 0.5 0.9 0.7 0.1 1.9 0.3 1.7-0.9 2.1 0.1 4.2-0.1 6.3 0.4 0.7 0.1 1.5 0.4 2.2 0.9 0.6 0.4-0.1 1.7 0.8 2 0.3 0.1 0.9-0.1 1.1 0.1 0.4 0.6 1.1 0.6 1.4 1.4 0.2 0.4 0.9 0.7 1.4 0.9 1 0.4 2.2-1 2.7-0.3 0.6 0.6 1.1 1.7 1.8 1.6 1.3-0.1 2.6-0.5 3.9 0 0.1 0-0.1 0.3 0.1 0.4 0.9 1.1 2.2 0.7 3.3 0.7 0.3-0.1 0.6-0.4 0.7-0.4 2.1 0.1 4.2 0.2 6.3 0.5 0.7 0.1 1.8-0.1 2.7-0.2 0.6-0.1 0.6-1.1 0.8-1.6 0.1-1-1.1-2.2-1-3.1 0-1.2-0.3-2.5 0.1-3.8 0.1-0.6 1-0.7 1.6-1 -0.3-0.5-0.4-1-0.2-1.5 0 0 0.9-1.2 2.4-1.7 0 0 1.4-0.6 1.4 0.4 0.1 1.2 0.2 2.7 0.6 3.3L207.5 365.8 207.5 365.8zM3.3 346.6c1.2-0.4 1.7 0.8 3 1.2 2.5 0.6 5 3.1 6.9 1.9 1.5-0.9 3.3 0.1 4.6 0.4 -0.2-0.2-0.4-0.4-0.5-0.5 0.9-0.2 1.7-0.5 2.4-0.9 3-1.4 5.5 3.1 8.3 0 0-0.1 0.5 0.4 0.4 0.9 2.2-1 4.5-0.9 6.8-1.1 2.5-0.3 4.6-1.9 6.1-3.9 0.6-0.8 1.4-2.1 1.2-2.7 -0.6-3.5 1.3-6.5 4.2-7.3 0.4 3.2 4.8 1.8 4.8 0.5 0.1-2.5 1.8-1.9 2.9-3.9 2 1.2 3.4-1.2 4.5-0.5 1.6 0.9 3.2 2 4.5 0.4 1.6-1.9-0.4-4.5 0.6-6.6 1.2 0.7 0.9-1.4 1.9-1 0-0.6-0.2-1.4 0.1-1.8 0.9-0.9 2.2-0.9 3.2-1.3 1.3-0.6 2.4-2.3 1.3-3.4 -0.9-0.9-3.1-1.7-2.3-3 0.9-1.4 3.1-1.8 4.9-1 1.3 0.6 2.9 1.3 3.7 0.6 0.9-0.8 1.1-2.7 0.6-4.1 -0.1-0.1-0.6 0-0.9 0 0.7-2.5 3.4-3.5 4.4-5.8 1.3-3.3-1.9-5.5-2-8.2 0-1.3 2.3-2.5 4.3-3.1 0.1 0-0.1-1 0.1-1.2 2-1.2 3.6-0.8 5.6-1.9 1.4-0.7 2.6 0.2 4.4 0.1l0.6-2.4c1.3-0.8 3.2-1.1 3.2-1.1l0.2-1c-1.6-0.9-2.6-2.4-4.4-1.4 -1.7 0.8-2.8 2.7-4.5 3.5 -2.6 1.2-5.5 1.3-8.1 2.1 -0.1-0.8-0.4-1.4-0.8-2.1 -0.8-1.2 2.1-1.8 1.2-3.2 -0.8-1.1 0-2.1-0.4-3 -0.5-1-1.6-0.4-2.4-0.5 0.9-0.4 0.5-1.4 0.8-2 0.6-1.4-1.5-2.2-2.4-2.5 -2.4-0.9-3.7 2.9-6.1 4 0.7 1.4 2.5 2.1 0.8 3.2 -1.4 1-3-1.3-4.6-0.9 -0.7 0.1-1.7 0.8-2.3 1.4 -0.7 0.6 2.8 0.6-0.2 2.5 -0.9 0.6-1.9-0.1-3-0.6 -2.4-1.3-4.2 2.7-6.6 1.9 -0.8-0.2-2.4-0.4-2-2.2 -0.9 0.3-2 0.2-2.9 0.2 -0.8 0.1-1.6-0.9-2.2-2 -0.5-0.8-1.9 0.9-3.1 0.8 -2.2-0.1-4.4-1.4-6.7-0.8 -0.7 0.2-0.6 1.5-1.5 1.7 -1.2 0.4-2.8 0.3-3.7 0.9 -3.2 2.1-2.4 7.1-6 8.6 -2.4 1-5.2 1.2-7.5 2.4 -1.5 0.9 0.1 3.5-0.9 4.3 -1.9 1.7-5.1 1.3-7.3 0.8 -1.2-0.3 1.7-0.8 1.2-1.4 -0.5-0.6-1.9 0.4-2.7 0.1 -1.3-0.3-3-0.5-3.5-2.2 -0.1 0.4-0.1 0.6-1.3 1.2 -0.9 0.5-0.1 1.3 0.4 2.6 -0.8-0.1-0.1 1.2-0.9 1 0.4 2.2-0.6 4-1.9 5.8 0.4 0.2 0.7 0.6 0.4 0.9 -2.3 1.4-4 3-2.6 5.3 0.1 0.3 0.6 1.7 1.7 1.1 0.1 1.2-0.6 2-0.7 3 -0.6 2.9 2.7 5.9 1.2 7.8 -1.3 1.7-0.7 3.9-0.1 5 0.9 1.7 4 1.6 5.5 2.3 5.6 2.8-2.9 6.3-4.5 9.7C2.9 344.5 2 345.6 3.3 346.6L3.3 346.6zM124.1 302.1c-1.9 2.4-4.5 4-6.6 4.6 -2.8 0.8-5.6 3-8.4 2.2 -3.3-0.9-7.5-3.7-9.9-0.9 -1.4 1.6-1 4.8 1.6 5.8 0.3 0.1-0.1 1-0.4 1.2 -0.7 0.4-1.6 0.1-2.4 0.1 1.2 0.4 0.6 1.9 1.9 2.5 0.3 0.1-0.1 0.7-0.4 0.8 -0.5 0.1-1 0.1-1.4 0.1 1.2 1.4 1.4 3.3 2.5 4.7 1.2 1.5 3-0.9 4-0.1 1.1 0.8-1.8 1.2-1.1 2.1 1.2 1.4 4.8-0.4 5.1 2.5 -2.4-0.2-4.8 1.1-6 3 -0.6 0.9-1.3 2.8 0.7 3.2 -1.2 0.1-1.4 1-1.4 1.9 1-0.1 1.4 1.3 2.4 0.9 -2 2-4.5 3.4-6.3 5.8 -0.5 0.8 1.2 1.9-0.1 2.2 -1.5 0.4-3.2 0.2-4.2 1.7 -1.2 1.7-1.5 3.7-2.7 5 -1.5 1.7-3.5 2.8-5.5 4.2 -2.4 1.7-3.2 4.5-5.1 6.5 -0.8 0.8-2.4-0.1-3.7 0.4 -2.2 0.9-4-2.8-5.4-1.8 -1.5 1.2-1 5.1-4.2 5.1 -0.9 0-0.1 1.5-0.6 2.2 -0.1 0.1-0.7 0-0.8 0.1 -0.3 0.7-0.3 1.7 0 2.4 0.6 1.2 1.8 1.6 3.3 1.5 0.7 0 0.6 1.2 0.7 1.4 0.1 2.2 0.1 4 1.8 5.6 0.4 0.4 1.5 0.1 2.3 0.1 -0.4 3.2 1.8 5.3 3.1 7.8 0.6 1 0 3.1-1.2 3.5 -1.3 0.4-2.8 0.5-4.4-0.1 -1.5-0.6-3.4 1.9-4.5 0.6 -0.8-0.9-1.7-0.9-2.1-0.6 -1.7 0.9-3-0.9-4.5-0.1 0.6 1.2-1.8 1.2-0.9 2.4 -1.3 0.3-2.6 1.2-3.9 0 0 1.3-0.4 3.1 0.2 3.6l-5.9-2c-1.8-0.6-1.2-3.4-1.7-5.4 -0.4-1.3-2.6-1-2.5-2.4 0.1-2.3-0.9-4.5-3.2-5 -1.7-0.4-3.2 1-4.8 1.4 -4.9 1.2-9.9-0.6-14.9 1 -2.7 0.9-5.3-0.1-7.7-1.2 -0.1 0.9-1 1.2-1.4 1.2 -1.9 0.1-3.1 2.4-4.7 1.4 -2-1.4-2-4.1-1.1-6.6 0.6 0.6 0.2-1.1 0.9-0.5 -1.7-3.2 1.6-4.2 4.3-4.3 -0.2-0.9 0.9-1.2 1-1.9 1.8 0.4 3.4 0.8 4.7-0.6 0.9-1.1 0.7-2.7 0.6-4.2 -0.9 0.4-2.2 0.9-2.7 0.4 -1.3-1.4 0.6-3.5-0.2-5.1 -0.6-1.2-0.2-2.7-1.4-3.3 -0.9-0.4-1.9 0.9-2.7 0.2 -0.3-0.2 0-1.2-0.6-1.2 -1 0-2-0.2-2.8-0.7 -3.8-2.5-4.5-7.1-7.3-10.4 1.8-1 3.6 0.7 4.9 1.1 2.4 0.6 4.9 3.1 6.9 1.9 1.4-0.9 3.3 0.1 4.5 0.4 -0.1-0.1-0.3-0.4-0.4-0.5 0.8-0.2 1.6-0.5 2.4-0.9 3-1.4 5.5 3.1 8.2 0 0.1-0.1 0.6 0.4 0.4 0.9 2.2-1 4.4-0.9 6.7-1.1 2.6-0.2 4.7-1.8 6.1-3.9 0.6-0.8 1.4-2.1 1.3-2.7 -0.6-3.5 1.2-6.5 4.2-7.3 0.4 3.2 4.8 1.8 4.8 0.5 0.2-2.5 1.8-1.9 2.9-3.8 2.1 1.1 3.4-1.3 4.6-0.6 1.6 0.9 3.2 2 4.5 0.4 1.5-1.9-0.4-4.5 0.6-6.6 1.2 0.7 0.9-1.4 1.9-1 0-0.6-0.2-1.4 0.1-1.8 0.8-0.9 2.1-0.9 3.2-1.3 1.3-0.6 2.4-2.3 1.3-3.4 -0.9-0.9-3.1-1.7-2.4-3 0.9-1.4 3.2-1.8 5-1 1.2 0.6 2.9 1.3 3.7 0.6 0.9-0.8 1.1-2.7 0.6-4 -0.1-0.1-0.6-0.1-0.9-0.1 0.6-2.4 3.4-3.5 4.3-5.8 1.4-3.3-1.9-5.5-1.9-8.2 -0.1-1.3 2.3-2.5 4.3-3 0.1-0.1-0.1-1.1 0.1-1.2 2.1-1.2 3.9-1.1 6-2.1 1.8-0.9 4.9 1.6 6.8 0.2 2.3-1.9 5-2.5 7.4-1.5 0.1 0.1 2.7 0.1 2.7 0.4 3.4-0.8 5.4 1.7 7.1 4.1 0.9 1.4-1.7 3.7 0.1 4.9 1.7 1.2 2.1-0.2 3.7 0.4 2.2 0.8 6.4 2.5 8.7 3.5C125.8 301.3 124.9 301.2 124.1 302.1L124.1 302.1zM127.5 300.4c2.9-3 8.1-4.5 12-2.3 1.8 1 4.2 2 5.8 3.2 1.2 0.9-0.5 3.2-1.2 4.2 -1.6 2.7-3.9 5.7-6.6 7.1l-3.7-0.4c0 0 1.3-0.9 0.3-1.8 -0.6-0.6-4.5-3.5-6-7.8 -0.4-1-1.8-1.4-1.8-1.4L127.5 300.4 127.5 300.4zM146.6 346.2c0.9-0.6 1.3-1.7 1.9-2.4 1.1-1.4 1.8 1.4 2.9 2 0-0.5-0.1-1 0.1-1.4 0.3-0.5 1.1-0.7 1.5-1.1 0.4-0.4 1.4-0.9 2-0.6 2.4 1.2 4.3 2.7 6.7 4 1.7 0.9 3.8 1.6 4.8 3.3 0.7 1.3 2 3.9 3.1 3.2 0.9-0.5 0.9-3.1 2.2-1.7 0.8 0.8 0.6 2.5 1.4 3.6 0.6 1 2.1 0.5 3.1 1.4 0.8 0.7 2.2-0.4 3.2 0.1 0.6 0.2 1 1.4 1.4 2.2 0.3 0.7 0.8 0.4 1.4 0.1 1.2-0.4 2 1.6 3.1 0.9 0.1 0.6 0.5 1.8 1.2 1.4 1.2-0.8 2.2 0.9 3.4 0.2 0.1 0 0-0.5 0.3-0.6 1.9-0.6 3.2 0.6 4.8 1.4 2.4 1.3 5.5 0.4 8.3 0.2 -0.4 0.7-0.4 1.4 0 2.2 -0.6 0.3-1.4 0.4-1.6 1 -0.4 1.3-0.1 2.6-0.1 3.8 -0.1 0.9 1.2 2.1 1 3.1 -0.1 0.5-0.2 1.5-0.8 1.6 -0.9 0.1-1.9 0.4-2.7 0.2 -2.1-0.3-4.2-0.4-6.3-0.5 -0.1 0-0.4 0.4-0.7 0.4 -1.2 0-2.4 0.4-3.3-0.7 -0.1-0.1 0-0.4-0.1-0.4 -1.3-0.5-2.6-0.1-3.9 0 -0.7 0.1-1.2-0.9-1.8-1.6 -0.6-0.7-1.7 0.7-2.7 0.3 -0.5-0.2-1.2-0.5-1.4-0.9 -0.3-0.8-1-0.8-1.4-1.4 -0.1-0.2-0.8 0-1.1-0.1 -0.9-0.4-0.1-1.6-0.8-2 -0.6-0.5-1.4-0.7-2.2-0.9 -2.1-0.5-4.2-0.4-6.3-0.4 0.3 1.2-0.9 1.1-1.7 0.9 -0.4-0.1-0.1-0.9-0.5-0.9 -2.2 0-3-1.8-4.8-2.4 -0.6-0.2-1.4 0.1-1.9-0.2 -0.5-0.3-1.1-0.7-1.6-1 -0.8-0.4-1.9-0.1-2.8-0.6 -1.6-0.8-2.6-2.2-4.1-3.2 -0.6-0.4-1.3 0-1.6-0.3 -0.3-0.4-0.6-0.9-0.9-1.3 -0.1-0.1-0.6-0.3-0.6-0.2 -1.7 1.5-3-1.1-4.2-2 -0.6-0.4 0.2-1.6 0.6-2.4 0.7-1.4 0.1-2.6 0.3-3.9C143.7 347.1 145.3 347.1 146.6 346.2L146.6 346.2zM205.9 368.1c0-1.2 1.3-1.1 1.6-2.3 0.3-0.9 2.7-1.4 1.9-3 0.4 0.1 0.7-0.1 0.9-0.4 0.7-0.4 0.8-1.4 1.5-1.8 1.2-0.6 1.9-1.8 3.4-1.9 -0.1 0.5 0.9 0 0.7 0.7 0.6 0.1 1.3-0.4 1.5-0.1 0.5 0.5 0.9 1.2 1.6 1.2 1.2 0.2 2.2 0.5 3.4 0.7 1.1 0.2 2.4-0.7 3-0.4 1.2 0.6 1.8 2.4 2.7 3.6 -0.3-0.3-0.1 0.6-0.4 0.2 0 0.3-0.1 0.6 0 0.7 1.5 1.4 2.8 3.4 2.2 5.3 -0.4 0.9-1.7 1.6-3 1.4 -0.5-0.1-1-0.6-1.4-0.3 -0.3 0.1-0.8 0.4-1 0.5 -2.4 0.3-4.5-0.3-6.8-1.1 -1.7 2.4-4.1 0.6-6.5 0.9 -0.4 0.1-1 0.1-1.4 0 -1.3-0.3-1.9-2.1-3.4-1.9C206.5 369.3 205.8 369.1 205.9 368.1L205.9 368.1zM277.7 499c-0.4-1.7-0.2-3.5 0.4-5 0.8-2.3 2-4.2 1.6-6.8 -1.7 0.9-3.1 0.1-4.3 1.9 0.7-2.3 3-3 4.2-4.9 0.1-0.2-0.5-0.8-0.4-1.4 -0.7 0.2-1.1-1.1-1.9-0.5 0.6-0.7-1.5-0.6-0.4-1.4 0.2-0.1 0.8 0 0.8-0.1 1.5-3 0.3-6.5-1.8-8.6 -0.1 0.9-0.7 1.5-1.4 1.9 0.4-2.7 1-5.5 0.3-8.1 -0.3-0.9-1.4-1.5-1.7-2.4 -0.9-3-0.6-6-1.4-9.2 -0.3-1.2 0.4-2.5 0.8-3.8 -1.1 0.4-2.3 1-3.3 0.4 -2-1.4-1.8-4-0.1-5.7 -0.3 1-1.2 1.2-1.9 0.9 -0.6-0.4-0.4-1.7-1-2.3 0.3 1 1.4 1.9 0.8 2.8 -0.7 1.2-1.6 2-1.3 3.5 -2.1 0.2-3.1 2.8-5.3 1.9 -0.1-0.1 0.1-0.7-0.1-0.8 -0.6-0.4-0.4 1.2-1.4 0.9 -0.4 1.1-0.4 2.2-0.5 3.4 0 0.8-1.2 0.2-1.4 0.9 0.4-0.9-1.1-0.6-1-1.4 -0.9 0.2-1 2.1-2.4 1.4 -0.4-0.1-0.7-0.5-0.4-0.9 0.4-0.6 0.6-1.5 1.4-1.9 -1.3 0.9-2.8 1.2-4.3 1.4 0.1-0.8-0.4-1.7 0.5-2.4 -1.2 0.5-1.7 1.6-2.5 2.2 -1.6 1.1-2.4-1-1.7-2.2 0.5-1 0.8-2.1 1.2-3 0.2-0.7-0.7-1.9-0.2-2.8 2.3-3.9 0.9-7.5-0.4-11 -0.4-1.2-1.2-2.2-1.7-3.5 -1.4 0.9-1.9 2.7-3.4 3.4 -0.1-1.4 0.4-2.5 0.8-3.9 0.6-2.1-1.5-2.7-1.6-4.8 0-1.3-1.2-0.9-2.5-1.3 -0.9-0.2-3.2-2.3-3.7-5 -0.4-1.7-3.6-1.1-3.9-3 -0.4-2.1 0-3.9 2.6-4.6 1.7-0.5-0.5-2.7 0.2-4 0.9-1.3 3.6 0.2 4-1.6 0.5-2.2 0.7-4.5 0.2-6.7 0.6 0 1.4 0.2 1.4-0.5 0-1.4-0.1-1.7 0.9-3 0.7-1.1 0.4-2.8-0.3-4.2 2.2-0.3 4.8 2.5 6.2-0.1 0.3-0.6-0.1-1.9 0.2-2.2 1.9-1.6 2.3-3.7 3.5-5.6 0.7-1.2-0.8-2.7-0.2-4.2 0.6-1.4 1.9-2.2 2.7-3.5 0.8-1.1 0.4-2.4-0.1-3.5 -0.4-0.9 1.2-2.2 2.2-3.2 0.3-0.3 1.4 0.1 1.7-0.2 0.9-0.9 1.9-1.6 2.7-2.6 0.9-1.1 2.8-1.2 4.2-1.9 1.6-0.7 2.7 2.7 4.1 1.9 0.6-0.3-0.4-1.7-0.6-2.6 -0.4-2.6 3.7-2.9 2.7-5.8 0.7 0.1 1.2-0.4 0.9-0.9 -0.4-0.5-0.5-0.9-0.4-1.5 0.5 0.3 1-0.4 1.5 0 1.7 1.3 3.6 2.4 4.1 4.4 0.3 1.3-0.4 2.5 0.8 3.1 0.4 0.2 1.6-0.6 2.2-0.1 0.9 0.7 1.4 1.9 0.7 3.4 -0.9 1.8 2 3.1 1.1 5.3 -0.6 1.6-2.7 3-1.2 4.7 -1.1 0.5-2.2 1.4-2.2 2.4 -0.1 2.2-2.4 2.8-3.9 3.6 -1.4 0.7-0.9 2.9-2.6 3.6 1.2 2.2 3.1 4.6 0.5 6.8 1.8-1 3.2-1.8 5-2.6 1.4-0.6 3.5-0.8 5.2 0.2 -1.9 0.7-1 3.6-0.1 4.8 0.6 0.8-0.4 1.7-0.2 2.3 0.5 1.7 3.5-0.1 3.7 0.7 0.6 2.2-2.2 5-0.7 7.4 0.9 1.4 3.7-0.2 4.8 1.2 0.6 0.7-0.2 1.9-0.8 2.7 0.7 0 1.3 0.5 1.9 0.7 0.5 0.1-0.7 1-0.4 1.1 2.8 0.4 5.3-1.7 8.1-1.8 -0.3 1.1-0.4 0.6-0.6 1.6l0 0c-0.7-0.1-0.6 1.4-1.4 0.8 0 0.4 0 0.6 0 1 -1-0.2-1.7 0.6-2.2 1.1 -0.4 0.4 0.1 1.7-0.3 2.2 -0.9 0.9-2.7 1.6-3.3 2.2h-0.6c-1.4-0.1-2.8 0.2-4 0.6 -0.6 0.1 0.9 1.5 0.6 1.9 -1.1 1.7-3.5-0.6-4.4 0.4 -0.6 0.7-0.1 2.6-1.3 2.8 -2.2 0.5-5.5-0.9-6.1 0.9 -0.5 1.5-1.3 2.9-1.3 4.7 0 0.3 0.4 1.2 0.2 1.3 -1.8 1.1-3.4 2.4-2.7 4.5 1.7 5 5.8 8.3 7.5 13.4 0.3 1 1.8 2.1 3.5 1.6 -2.1 1.2-2.2 3.2-2.3 5.3 -0.1 1.3-2.7 1.1-3.4 2.5 -0.9 1.8 0.3 3.7 1 5.6 0.6 1.5 2.6 1.7 3.7 3 1.1 1.2 1.5 2.6 1.7 4 0.3 2.2 1.1 5-0.7 6.7 1.1 1.2 2.8-0.2 3 0.2 2.5 3.9 0.1 8.6-2.8 12 -1.2 1.4-2 3-2.7 4.8l-0.9 2.7L277.7 499 277.7 499zM289.1 526.5c-0.3-0.1-1.9 1.4-3 0.4 -1.7-1.4-0.3-3.7 0.3-5.5 -1.7 0.2-0.4-1.7-1.4-1.9 -1.2-0.4-2.8-0.4-3.2-1.5 -0.4-1.2-0.7-2.4-0.9-3.8 0-0.6-1-1.2-1.7-0.9 -1.6 1-1.6 4.2-3.3 2.2 -0.9-1.1 0.9-2.9 0.1-4 -1.4-2-0.5-4.1 0.1-5.8 1.4-4.8 1.9-9.9 5.2-13.9 2.9-3.5 5.3-8.1 2.8-12 -0.2-0.4-1.9 0.9-3-0.2 1.8-1.7 1-4.5 0.7-6.7 -0.1-1.4-0.6-2.8-1.7-4 -1.2-1.2-3.2-1.4-3.7-3 -0.7-1.9-1.9-3.8-1-5.6 0.7-1.4 3.3-1.2 3.4-2.5 0.1-2.1 0.2-4 2.3-5.3 -1.7 0.5-3.2-0.6-3.5-1.6 -1.7-5.1-5.8-8.4-7.5-13.4 -0.6-2 0.9-3.4 2.7-4.5 0.2-0.1-0.2-1-0.2-1.3 0-1.8 0.8-3.2 1.3-4.7 0.6-1.8 3.9-0.4 6.1-0.9 1.2-0.2 0.6-2.1 1.3-2.8 0.9-1 3.3 1.3 4.4-0.4 0.3-0.4-1.2-1.8-0.6-1.9 2.4-0.9 5.7-1.2 7.3 0.9 0.9 1.2-0.1 3.9 1.4 4.3 1.4 0.4 3.1-0.1 4.8 0.3 -0.3 0.6 0.9 1 0.4 1.4 -1.2 0.9-0.8 2.5 0.5 3.1 0.2 0.1 0.2 1 0 1.2 -0.5 0.5-1.1 1-1.9 1.1 0.5 1.5 0.1 2.2-1.2 3.2 -1 0.7 1.3 1.4 1.4 2.2 0.2 1.9-3.7 3.4-0.5 4.5 3 1 4.7-3.6 6.8-4.7 1.5-0.7 3.4 2.2 5.1 2.2 1.8 0 2.4-3.3 4.8-3.5 1.9-0.1 3.5 0.7 4.8 0 0.9 2.6 2.9 4.3 4.7 6.4 0.5 0.6 1.4 1.4 1 2.2 -0.6 1.2-1.3 2.3-0.7 3.4 3 5.1 7.3 9.7 5.1 16l-2.6 2.4c-0.4-0.4-0.9-1.2-1.3-1.4 -1.4-0.6-2.6 0.5-3.9 1 -1.1 0.5-2.7-0.2-4.2-0.1 -0.9 0-1.6-0.9-2.4-0.4 -1 0.7-1.7 0.8-2.9 1 -1 0.2-0.8 1.5-1.2 2.2 -1.4 2-3.9 2.9-4.9 5 -0.3 0.6 1.2 0.1 1.2 0.9 0 0.6 0.4 1.5-0.4 1.9 2.8 5.3 2.4 6.7 2.5 9.6h-0.4c-1 0-1.8 0.1-2.1 0.5 0.3-1.2-0.2-2.5-0.7-3.2 -1.2-1.5-1.7-3.3-2.7-5 -1.6 1.4-2.1-0.4-3.4-0.9 0.1 0.4-0.1 0.9-0.5 0.9 -1 0-1.7 0.4-2.4 0.9 -1.2 0.7-3-0.1-2.2-1.7 0.6-1.1 1.6-2.6 0.8-4 -1.2-2.2-3.7-2.4-5.7-1.8 -0.7 0.3-0.6 1.4-0.5 2.3 0.4-0.1 0.8 0.1 0.9 0.4 0.1 0.5 0 1 0 1.4 -0.7-0.6-0.3 1.1-0.9 0.5 0.2 1.4 0.9 2.9 0.4 4.3 -1.4 4.2-2.1 8.2-4.5 12.2 -1.2 1.9-2.4 4.4-1.4 6.5 0.4 0.9-0.3 1.9 0.3 2.4 1.7 1.7 3.3 3 5.1 4.5 0.3 0.2-0.1 0.9-0.1 1.4 -0.4 1.9 2 2.7 2.6 4.3 0.4 1.2-0.4 2.8-0.1 3.7 0.9 2.6 2.9 5 5.5 6.3 1.2 0.6 2.1-0.9 3.3-0.9 -0.2 1.4 1.8 1.9 1.4 3.4 1.2-0.3 2.2 0.3 2.3 1.4l-0.1 0.5c-0.2-0.1-0.5-0.1-0.7 0 0.2 1.7-1.1 2.2-2.4 2.4 0.1-0.4-0.1-0.8-0.4-0.9 -1.9-0.4-0.9 2.7-2.4 2.2 -0.7-0.1-1.2-0.9-1.9-1.3 2.3-3.7-1.4-5.1-4.4-6.1 -0.6-0.2-1 0.1-1.2 0.5L289.1 526.5 289.1 526.5zM316.8 466.9c-0.9 0-1.6-0.9-2.4-0.4 -1 0.7-1.7 0.8-2.9 1 -1 0.2-0.8 1.5-1.2 2.2 -1.4 2-3.9 2.9-4.9 5 -0.3 0.6 1.2 0.1 1.2 0.9 0 0.6 0.4 1.5-0.4 1.9 2.7 5.3 2.7 6.8 2.5 10.7 -0.1 0.7 0.9 4.6 1.6 5 1.2 0.9 2.9-2.3 3.9-1.4 1.7 1.5-0.1 2.1 0.9 4.3 0.2 0.6 3.4 1.7 4.1 1.7 0-0.3-0.1-0.8 0-0.9 1.1-0.3 2.5 0.3 3.2-0.3 0.9-0.6 1.4-1.7 2.6-2.2 0.7-0.4 0.7-0.9 0-1.4 1.4-1.3 3 0.3 4.3-0.1 0.8-0.2 1.5-0.8 2.4-0.9 -0.6 0.7 1.1 0.3 0.5 0.9 1.1 0 2.2 0 3.3 0 -0.4-1.7-2.9-2.4-3.5-3.5 -1.5-3.5 1.9-1.6 4.4-2.8 0.2-0.1-0.1-1.1 0.1-1.2 1-0.9 1.9-1.1 3.2-1.2 1-0.1 1-1.8 2-2.2 0.4-0.1 1.1 0.1 1.4-0.1 3.3-2.9 0.8-7.1 0.8-10.5 0-0.2-0.5-1.1-1.2-1.6 -0.2-0.1-0.2-1 0-1.2 0.4-0.4 1.1-0.7 1.2-1.1 0.6-1.4 0.2-3.3-1.2-3 -1.4 0.2-2.9 1.3-4 2.6 -1.6-2.1-4.6-1.2-6.6-0.2 -0.8 0.4 0.7 1.7 1.2 2.7 0.6 1.4-1.3 1.7-2.2 1.3 -1.2-0.6-1.2-3.2-2.9-2.2 -0.1 0.1-0.3 0.8-0.5 0.7 -1.4-0.6-1.7-2.5-3-3.2 -1.4-0.6-2.6 0.5-3.9 1C319.9 467.6 318.3 466.9 316.8 466.9L316.8 466.9zM357.1 560.3c1.2-0.1 1-2.7 2.6-2.2 0.7 0.2 0.4 0.9 0.6 1.4 1.1 1.9 3 1.6 4.8 1.5 -0.4 0.9 1.1 0.6 0.9 1.4 0.6 0 1.5 0.2 1.9-0.1 1-0.9 2.1-1.5 1.5-3.2 0.5 0 1.2 0.1 1.4-0.1 0.4-0.6-0.1-1.6 0.2-2.3 0.9-1.9 2.9-2.7 4.8-3.2 2.3-0.6 4.8 0.7 7.2-0.2 1.1-0.5 2.2-0.8 3.4-1.4 1.2-0.6 1.5-2 2.1-3 2-3.2 2.2-7.7 5.3-9.6 2.4-1.4 5.8-1.1 8.3-2.6 0.8-0.6-1.4-2-1-3 0.6-1.7 2.6-0.7 4.1-0.6 -0.1-0.1-0.3-0.3-0.5-0.4 5.8 0.1 4.5-7.3 7.3-10.7 0.3 1.2 0.6 2.7 1.9 2.2 0.6-0.2 1.4-0.6 1.9-1.2 0.1 0.9-0.4 2.3 0.6 2.7 0.9 0.4 2.5-0.1 2.7 1.2 0.2 1.4-1.9 2.1-1.8 3.8 -0.1-0.5 0.1-0.9 0.5-0.9 0.8-0.1 1.9-0.3 2.3 0.1 0.4 0.5-0.6 1.4-0.4 2.3 3-1.6 5.7 0.2 8.3 1.8 0.7 0.4 1.9 0.1 2.8 0.1 -0.5 2.3-2.9 2.3-4.5 3.2 -0.9 0.5-2.2 0.2-3.2 0.2 1.1 1.7 2.8 2.9 4.8 3.4 -3 1.8-6 1.1-9.2 1.1l-0.5 0.7c-1.4-1.5-3-0.7-4.9-1.5 -1.9-0.9-4.2 1-6.6-0.3 -1.2-0.6-1.7 1.2-2.9 0.9 0.2 1.3-0.4 2.2-1.3 3.1 -0.6 0.6 1.3 1.5 0.8 2.7 -0.4 0.9-1.4 0.2-1.8 0.6 -0.9 1.1 0.4 2 0.1 3.2 -0.1 0.7-1.5 0.3-2.1 0.7 -1 0.7-0.6 2.1-0.1 3.2 -1.5 0.4-1.9 1.8-2.3 2.9 -0.4 0.9 0.3 2.2-0.7 2.7 -2.4 1.4-5.6-0.1-8.1 1.6 0.9 0.1 0.6 1.2 1.3 1.6 0.6 0.5-1 0-0.9 0.8 -3.5-1.7-6.7-5.1-11.1-4.3 0.4 0.4-0.6 1.3 0.5 1.4 -0.5 1.3-1.8 1.6-3 1.9 -4.1 1-7.9 0.5-11.5 3 -1.2-2.7-3.1-5.5-6.2-6.4H357.1L357.1 560.3zM381.8 627.1c1.7 0.7 0.9 3 2.4 3.8 2.6 1.2 5.7-1.2 7.4 0.4 1.2 1.1 2.7-0.2 3.2 1.1 0.4 1.2-0.6 2.1-1.4 2.9 1.5 1.2 2.3 2.5 1.9 4.4 0.5 0 0.8 0.8 1.4 0.4 -2.7 1.3-5.6 0.2-8.1-0.6 -2.4-0.8-3.2-3.8-5.8-4.6 -1.2 3.8-5.5 0.4-7.8 0.3 -4.1-0.3-8.6 0.6-12.3-1.2 -3.5-1.7-6.8-1.1-10.2-2 -3.2-0.9-6.4-2.2-9.8-1.9 0.4 0.1 0.7-0.1 0.9-0.5 0.4-0.6-0.4-1.2-0.5-1.3 -3.2-0.9-6.8 0.6-9.6-2.1 0.9 0.3 1.6-0.3 2.4-0.5 -0.9-2.5 2-3 2.4-5.3 -1.1 0.1-0.4-0.8-0.4-0.9 0.1-1.1 1.5-1.6 2.2-1.3 2.4 1.1 4.6 0.1 6.8 0.4 3.1 0.4 4.8 3.8 8.2 3.7 -0.2 0.6-0.8 1.4-0.4 1.7 3.1 1.9 6.7 0.6 10 0.7 0.7 0 1.4-2.3 2.5-3.3 0.3-0.2 1.4-0.5 1.8 0.4 0.1 0.3 0 0.9 0.1 0.9 1.4 0.3 2.8-0.1 4.2 0.2 0.1 0 0 0.7 0.1 0.7 1.1 0.3 2.7-0.3 3.1 0.3 1.4 2 3.7 0.8 5.5 1.7 -0.5 0.6 1.2 1.4 0 1.9C382.3 627.5 382.1 627.2 381.8 627.1L381.8 627.1zM385.2 626.1c2.7-1.6 5.8 0.1 8.7 0.5 -1.7 1.7-3.9 0.7-5.8 1.3 -1.7 0.5-3.7 0.5-4.8-1.4 -0.4-0.8 1.1-0.1 0.9-0.9C384.5 625.9 385.4 625 385.2 626.1L385.2 626.1zM406.5 601.5c-0.6 1.9-0.2 3.5 1.4 3.5 3 0 0.9-4.5-0.2-5.6 -0.6-0.6-1.7 0.9-1.7 2.2C406.2 601.5 406.3 601.5 406.5 601.5L406.5 601.5zM433 571.1c1.5-1.3 0.7-4.9 2.3-4.3 3.1 1.1 3.6-3.5 6-3.7 0.5-0.1 0.7 1.4 1.4 1.6 3.7 1.1 7.3 1.2 11.2 2.2 3 0.8 6.7 0.7 9.3-1 3-2 4.8-5.2 7.2-8.1 0.7-0.9 2 0.4 1.8 1.7 -0.2 1.2-1.6 1.2-1.9 1.9 -0.5 1.2 0.8 2.7 0.2 3.7 -0.8 1.7-1.7 3.1-2.4 4.8 -0.1 0.4-1.2 0.9-1.8 0.9 -1.7 0.2-3.5-0.3-5.3-0.7 -3.9-1.1-7.3 1.6-11.1 1.1 -3.7-0.6-7.5-1.9-11-0.9 -2.9 0.8-3.5 5.5-2.4 8.3 0 0.1 0.5 0.1 0.9 0.1 -0.1 2.2 2 2.7 3.2 4 0.4 0.3 0.1 1.2 0.1 1.8 0.4-0.2 1 0.4 1.4 0 1-1.2 1.7-3.3 2.5-3.4 3.2-0.4 6.9 0.1 9.9-0.9 1.5-0.4 3.1-1.8 5-1.5 -0.1 0.6 0.4 1.7-0.5 1.8 -2.7 0.1-5.3 2.2-6.5 4.8 -0.9 1.9-3 2.7-5 2.4 -1-0.1-1.3-1.1-2.4-0.8 0.4-0.1 0.9 0.1 0.9 0.4 0.1 0.9-0.6 0.9-1.4 1 2.6 2.4 6.3 3.6 8 6.8 1.2 2.1-1.1 3.5-0.4 5.5 0.6 1.7 4 4.3 1.8 5.5 -1.4 0.8-4.2-0.6-5.8 0.6 -0.6 0.6-0.8 2.4-2.2 2.2 -0.7-0.1-0.4-1-0.8-1.5 -0.9-1.4 1.4-2.6 0.8-4.2 -0.9-2.1-3.8-2.7-4.1-4.9 -0.1-1.4 2.2-1.6 1.7-3.3 -0.4-1.7-2.5-2.6-3.6-1.7 -1.3 1.2-2.4 1.2-4 1.2 0.2 1.7 1.6 2.9 2.2 4.4 0.6 1.2-1.4 2.4-0.7 3.7 0.1 0.1 0.6 0.1 0.9 0.1 -0.2 3 0.7 6.1-0.9 8.6 1.2 0.2 0.4 1.4 1 1.9 0.6 0.5 1.6 0.2 2.4 0.6 -0.8 0.6-1.4 1.9-2.4 1.7 -3.2-0.5-8.2-0.1-8-4.2 0.1-2.5 1.7-5.2 1.8-7.7 0.1-2.8-1.7-5.2-5.3-6 -1.7-0.4-3-4.5-1.7-7.1 4 2.2 4.5-2.4 4.4-5.3 0.6 0 1.2 0 1.9 0 -0.6-1.8-2.1-3.4-1.3-5.3 0.6-1.4 1.9-2.1 3.1-3.1 1.2-1-0.4-3.1 0.6-4.6C432.8 572.6 434.2 571 433 571.1L433 571.1zM473.1 586.5c-2.3-0.2-4.5-0.6-6.8-0.4 0.1 0.5-0.2 0.6-0.4 1 -0.3 0.4 0.1 0.9 0.4 0.9 3.4-0.4 6.7-0.9 10.1-0.2 1.9 0.4 1.7 2.9 3 4.2 0.9-1.2-1.2-1.7-0.6-3 0.4-0.8 0.9-1.5 1-2.4C477.5 586.5 475.3 586.7 473.1 586.5L473.1 586.5zM490.4 596.7c-1.5 1.3-2.9-0.4-4.4 0 -0.7 0.2-0.6 1-0.4 1.4 1.3 1.8 3.3 3 5.2 1 0.8 1.2 1.9 0.3 2.3-0.1 0.4-0.4 1.1-1.7 0.5-2.1 -0.7-0.4-1.9-1.2-2.7-0.6 -0.2 0.1-0.3 0.6-0.6 0.9C490.4 597 490.4 596.8 490.4 596.7L490.4 596.7zM496.2 595.2c2.2-0.1 4.6 1 6 2.7 0.6 0.7 1.8-0.5 2.7-0.6 2.2-0.2 2.9 3.1 5.3 3.2 -0.7 2.2 1.9 3.7 1.4 5.8 -3.2-2.2-6-5-10.1-5.5 -0.4-0.1-1.1-0.9-1.6-1.7 -0.4-0.5-0.7 0.7-1.4 0.4 -0.1 0.6-2.3 0.8-0.4 1.9 -0.9-0.1-0.7-1.2-1.4-1.5 0.1 0.8-1.4 0.5-1 1.5 0.4 0.9 2.2 0.4 1.7 1.3 -0.6 1.3-3.5 0.1-3.7-1.8 0.6 0.3 0.9-0.8 1.5-0.5 0-0.3 0-0.6-0.1-0.9 -0.1-0.4-0.4-0.6-0.9-0.5C495.2 597.8 496.3 597 496.2 595.2L496.2 595.2zM476.9 631.4c2-2.1 4.8 0.5 7.2-1C482.6 633 479.2 633.4 476.9 631.4L476.9 631.4zM485.6 635.5c-2.4-0.5-4.8-0.6-6.6 0.1 -1 0.4-2.1 1.9-3.2 2.9 -2.4 2.1-5.5 2.6-8.3 4.2 -1.4 0.9-4.2 0.9-4.6 1.9 -1.2 3.5-3.7 5.7-6.8 7.1 -1.1 0.4-0.5 1.6-0.4 1.8 1.4 1.4 3.9 0.9 5.6 0.4 1.7-0.5 2-2.4 3.2-3.9 2.2-2.7 5.9-3.2 8.8-5.3 0.7-0.5 1.6-1.4 2.2-1.9 1.3-1.2 3.4-0.8 5.2-0.7 0-0.5-0.2-1.1 0.1-1.4 1.9-2.4 5.3-2.1 7.5-4 0.3-0.2 0.4-1.1-0.4-1.3C487.1 635.1 486.2 635.6 485.6 635.5L485.6 635.5zM452.3 652.6c-1.9 0.3-3.7 1.6-5.8 1.4C448.3 655.9 451.2 654.4 452.3 652.6L452.3 652.6zM488 630.4c0-0.4-0.1-1.1 0.1-1.3 0.7-0.6 1.5 0.4 2.4 0.4C490.3 630.9 488.7 630.3 488 630.4L488 630.4zM491.4 633.8c1.1 0.5 2.4 0.6 3.2 1.2 0.6 0.4-0.4 1.4-1.3 1.2C492.3 635.8 491.8 634.7 491.4 633.8L491.4 633.8zM507.3 632.8c0 1.2 2.3 1.2 2.2 0.5C509.4 632.4 508.1 632.9 507.3 632.8L507.3 632.8zM500.1 634.8c0.8-0.7 2.2 1.3 2.1 0C502 633.8 501.2 633.7 500.1 634.8L500.1 634.8zM519.3 628c-0.1 0.5 0.1 0.7 0.5 0.9 -1.9 1.2-2.7 3.5-4.8 4.4 -0.4-2.6 0.1-5.3 3.4-4.4 -0.1-0.8 0.7-0.9 0.9-1.4C519.3 627.6 519.4 627.9 519.3 628L519.3 628zM457.6 635.2c-2.7-2.3-4.6 1.4-7.1 0.3 -3.4-1.6-7.3 0.9-10.7-0.9 -0.5-0.3-0.8-1.2-1.5-1.2 -1 0.1-1.9 0.9-2.8 1.4 -1.4 0.7-0.7 2.8-2 3.7 3-1.4 6.1-2.8 8.7 0 5.2-1.7 10.8-1.2 15.9-3.4C457.9 635.2 457.7 635.3 457.6 635.2L457.6 635.2zM464.4 634.8c1.7-1.2 3.4-0.9 5.3-1.1 0.4 0 0.6-0.4 0.5-0.9 0.4 0 0.8-0.1 0.9 0.1 0.2 0.4 0.2 1.1 0 1.3C469 635.9 466.6 635.7 464.4 634.8L464.4 634.8zM440.4 647.3c-0.1-2.2-3-3.7-5.5-3.4 -0.1-1.2-0.4-2.4-1.4-2.7 -2.3-0.6-5 0.1-6.6 1.9 -0.5 0.6 0.2 2.5 1.2 2.1 3.9-1.6 6 1.4 9.4 2.4C438.4 647.9 440.4 648.3 440.4 647.3L440.4 647.3zM445.8 649.1c-0.1 0.2-1 0.6-0.6 0.9 0.8 0.6 1.9 0.1 2.7-0.4 0.1-0.1 0.1-0.6 0.1-0.9C447.5 649.8 446.6 647.4 445.8 649.1L445.8 649.1zM432.9 636.3c-0.4-0.4-1.2-1.1-1.7-0.6 -0.7 0.6-0.4 1.4 0.4 1.8 0.2 0.1 0.6 0.1 0.9 0C433.2 637.4 433.2 636.6 432.9 636.3L432.9 636.3zM428.2 636.6c-1-3.2-5.1-1.9-7.1-2.8 -1.4-0.7-3.2-0.9-4.5-0.5 1 1 3.3 1.3 3.1 2.8 -0.1 0.6-1 1.6-2.2 1.5 0.1 1.4 1.8 1.2 2.3 0.8 0.6-0.4 1.2-1.2 1.7-1.7 0.4-0.4 1.2 0 1.4 0.9 1.9-0.8 3.6-1.3 5.8-0.9C428.5 636.7 428.2 636.7 428.2 636.6L428.2 636.6zM415.6 636.7c0-0.5 0.2-1.2-0.1-1.4 -1.2-1.2-3.1-0.5-4 0.1 -1 0.7-1.5 2.7-0.9 4 0.5 1.3 1.9 2.1 2.2 1 0.6-3.1 2.4-2.9 4.8-2.9 0.4 0 0.7-0.6 0.4-0.8 -0.6-0.4-0.9-1.6-1.9-1.1C415.8 635.9 415.5 636.2 415.6 636.7L415.6 636.7zM408.9 636.1c-1.1-1.9-3-2.5-5-1 -0.4 0.3-1.2 0.1-1.8 0.1 0.3 0 0.8-0.1 0.9 0.1 0.4 0.9 0.6 2 1.2 2.7 0.7 0.9 2.1 1.6 2.4 0.5 0.4-1.5 1.1-2.6 2.7-2.3C409.2 636.2 409 636.2 408.9 636.1L408.9 636.1zM402.1 637.1c-0.5-1.2-2.2-1.9-2.7-1.3 -1.2 1.7-1.9 2.2-3.6 3.2 0.5 0.9 1.2 1.6 2.4 1.4 0.8-0.1 0.2-1.4 0.9-1.4 1.8 0.2 3-0.4 4.2-1.2 0.9-0.7-0.8-1.2-1.3-1.7 -0.3 0.9-1.4-0.9-1.4 0.5L402.1 637.1 402.1 637.1zM402.1 637.1c-0.5-1.2-2.2-1.9-2.7-1.3 -1.2 1.7-1.9 2.2-3.6 3.2 0.5 0.9 1.2 1.6 2.4 1.4 0.8-0.1 0.2-1.4 0.9-1.4 1.8 0.2 3-0.4 4.2-1.2 0.9-0.7-0.8-1.2-1.3-1.7 -0.3 0.9-1.4-0.9-1.4 0.5M374.1 594.4c-0.9-0.4-0.4 0.4-0.4 0.8 0.3 0 0.7-0.1 0.9 0.1 1.6 1.2-0.8 2.7-0.4 4.3 0.1 0.4 0.7 0.7 0.8 0.4 0.6-1.7 2.6-1 3.3-1.7 0.6-0.6 1.2-1 1.9-1.4 0.9-0.6 2.2-1.3 2.6-2.7 0.4 1.1 1.2 1.8 2.4 1.1 0.1-0.1 0.6 0.4 0.4 0.9 0.5 0 0.9 0 1.4 0 -0.5 1.1 0.7 1.9 0.5 2.9 2.3-0.9 4.8-0.7 7.2-0.9 -0.1 2.5 0.6 5.1-0.9 7.2 1 0.2 2 0 2.8-0.6 0.2-0.1 0-0.7 0.1-0.8 1.6-0.9 3.6-0.2 5.2-1.2 1.6-0.9 3-2.2 4.2-3.5 0.6-0.7-0.2-2.7 0.4-3.5 0.4-0.6 1.9-1.2 1.9-1.5 -0.4-2.8 1.4-3.7 2.2-5.8 -0.6 0.1-1.3-0.2-1.3-0.5 0.1-0.9 0.1-1.7-0.6-2.4 1.4-1.3 3-2.4 4-4.2 0.6-1.2 2.9-0.3 3.5-1.7 0.4-0.9 2.2-1.4 1.4-2.2 -1.9-2.2-1.3-4.6-1.8-6.9 2.2-0.3 0.9-0.8 1.9-2.7 1.6-2.9-1.3-7.1 1.7-9.6 1.2-1.1 4.3 0.9 4.5-0.4 0.5-2.4-3.5-2.3-5.3-4.2 0.7-0.4 0.8-1.4 1.4-1.9 -1 0.2-1.6-0.8-2.2-1.2 -1.2-0.8-2.7-2.1-2.7-3.2 0-1.9 2.8-0.9 4.4-1.7 0.6-0.3-1.2-0.5-1.2-1.2 0-0.3 0.8-0.7 0.7-0.9 -1.2-2.4-4.2-1.7-6.3-2.7 -1.9-0.9-4.2 1-6.6-0.3 -1.2-0.6-1.7 1.2-2.9 0.9 0.2 1.3-0.4 2.2-1.3 3.1 -0.6 0.6 1.3 1.5 0.8 2.7 -0.4 0.9-1.4 0.2-1.8 0.6 -0.9 1.1 0.4 2 0.1 3.2 -0.1 0.7-1.5 0.3-2.1 0.7 -1 0.7-0.6 2.1-0.1 3.2 -1.5 0.4-1.9 1.8-2.3 2.9 -0.4 0.9 0.3 2.2-0.7 2.7 -2.4 1.4-5.6-0.1-8.1 1.6 0.9 0.1 0.6 1.2 1.3 1.6 0.6 0.5-1 0-0.9 0.8 -3.5-1.7-6.7-5.1-11.1-4.3 0.4 0.4-0.6 1.3 0.5 1.4 -0.5 1.3-1.8 1.6-3 1.9 -4.1 1-7.9 0.5-11.5 3 -1.3-3.1-4.8-8.1-8.6-5.6 -0.2 0.1-0.5 1.3 0.4 1.8 -1.8 1.1-1.2 2.7-0.9 4.3 -0.9-0.1-0.9 0.7-1.4 0.9 1.3 2.4 3.5 4.3 1.7 7.4 -0.1 0.1 1.3 0.5 1.7 1.3 0.9 2.1 0.1 4.6 1.9 6.3 0-0.5-0.1-1.2 0.1-1.4 0.6-0.4 1.5-0.9 2.3-0.5 2.6 1.5 1.1 4 1.3 6.2 0.1 0.5 1.1 1.4 1.4 2.1 0.4 0.6 0.8 1.4 0.6 2.2 -0.2 0.9-1.7 1.4-0.4 2.4 0-0.3-0.1-0.8 0-0.9 1.8-0.7 3.4 1.4 5.2-0.2 1.1-0.9 2.3 2.4 4.5 0.7 0.1-0.1 0.4 0.5 0.5 0.8C373.9 594.9 374.4 594.4 374.1 594.4L374.1 594.4zM261.4 534.8c-2.8-1.7-5.7-4.3-8.6-2.1 -0.9 0.6-0.1 2.4 0.5 3 2.4 2.1 3.6 5.2 6.2 6.7 6 3.5 9.9 8.9 12.9 14.7 6.4 1.2 8.6 7.5 9.4 13.5 0.1 0.2 0.8 1.3 1.2 1.3 4.5 0.4 7.1 5 8.8 8.6 1 2.1 1.8 4 3.1 6.2 0.4 0.7-0.1 1.9 0.2 2.8 0.6 2 2.3 2.4 3.7 4 0.3 0.4-0.1 1.3 0.2 1.8 2.2 4 6.3 5.8 9.4 8.9 0.9 0.9 1.7 2.2 2.7 3.1 0.9 0.8 2.1 1.3 3.2 1.7 3.4 1.3 3.7 5.8 6.8 7.6 -0.3-1.3 0.2-1.8 0.9-2.9 2 1.4 3.2 1.4 4.3-0.9 1.8 1.2 2.7 3.2 3.5 5.2 0.1 0.2 0.8 0.1 1.3 0.1 -0.5-2.4-0.5-4.8 0.3-7.3 0.5-1.7-1.2-3.3-0.7-5.3 0.3-1.2 1.8-2.1 1.3-3.3 -0.4-1-1.7-1.8-1.2-2.9 0.1-0.4 0.5-1.2 1.4-1 0.1-1.2-0.7-2.8 0.1-3.2 1.7-0.7 1.3-1.7 2.8-2.7 -0.6 0-1.4 0.2-1.9-0.1 -2.1-1.1-3.9-2.7-6-3.5 -1.5-0.6-4 0.4-4.7 2.2 -1.4-1.7 0.8-5-2.4-4.8 0.9-2.2-0.1-4.5 0-6.8 -1.9 1.2-4.2 0.6-5.7-0.6 -1.7-1.5 0.7-2.1 1.4-3.7 -0.8 0-1.7 0-2.4 0 1-0.8 1.7-1.8 2.4-2.9 -1.5-0.9-3-1.1-3.4-2.9 -1.6 0.6-0.3-0.2-1.7 0.6 1.2-0.4 0.1 0.7-0.4-0.6 -0.9-2.2-3-2.4-5.2-2 0-0.8-0.4-1.6-0.6-2.4 -0.6-2.4-2.7-3.4-4.5-5 -1.5-1.5-3.8-4.8-5.7-2.5 -0.3 0.4 0.9 1.6 1.2 2.7 -4.2-1.4-6.3-5.5-9.1-8.8 -0.4-0.4 0.1-1.4-0.2-1.8 -2.3-3.2-7-3-8.6-6 -0.9-1.7-0.8-4-2.7-5.7 -0.3-0.2 0.1-1-0.2-1.3 -2-2.2-5.2-1.4-7.6-1.5C265.3 534.8 263.3 535.9 261.4 534.8L261.4 534.8zM322.1 561.5c0.9 0.9 0.4 2.2-0.2 2.7 -1.7 1.5-1.7-2.5-3-1.9 -1.2 0.6-2.8 2.1-3.7 1.3 -5.3-4.1-11.8-5.5-15.8-10.6 -0.6-0.7-1.1-2.3-1.5-3.5 -0.7-2.1-3.2-3.1-4.1-5.4 -1-2.7 0.1-5.6-1.6-8.1 -0.5-0.7-1.2-1.4-1.6-2.2 -0.7-1.2 0.7-2.7 0.1-4.2 -0.4-1.3-2-2.4-1.2-3.8 0.4-0.7 0.4-2.3 1.7-1.9 3 1 6.7 2.4 4.4 6.1 0.7 0.4 1.2 1.2 1.9 1.3 1.5 0.5 0.4-2.6 2.4-2.2 0.4 0.1 0.6 0.4 0.4 0.9 1.4-0.2 2.7-0.7 2.4-2.4 2.1-0.2 3.5 0.9 4.7 2.7 1.7 2.4 5.3 3.2 6 6.1 1.2 4.3-0.9 8.9 0.1 13.3 0.9 4 5.3 6 5.9 10.2 0.1 0.5-0.8 0.8-0.9 1.4H322.1L322.1 561.5zM322.1 561.5c0.9 0.9 0.4 2.2-0.2 2.7 -1.7 1.5-1.7-2.5-3-1.9 -1.2 0.6-2.8 2.1-3.7 1.3 -5.3-4.1-11.8-5.5-15.8-10.6 -0.6-0.7-1.1-2.3-1.5-3.5 -0.7-2.1-3.2-3.1-4.1-5.4 -1-2.7 0.1-5.6-1.6-8.1 -0.5-0.7-1.2-1.4-1.6-2.2 -0.7-1.2 0.7-2.7 0.1-4.2 -0.4-1.3-2-2.4-1.2-3.8 0.4-0.7 0.4-2.3 1.7-1.9 3 1 6.7 2.4 4.4 6.1 0.7 0.4 1.2 1.2 1.9 1.3 1.5 0.5 0.4-2.6 2.4-2.2 0.4 0.1 0.6 0.4 0.4 0.9 1.4-0.2 2.7-0.7 2.4-2.4 2.1-0.2 3.5 0.9 4.7 2.7 1.7 2.4 5.3 3.2 6 6.1 1.2 4.3-0.9 8.9 0.1 13.3 0.9 4 5.3 6 5.9 10.2 0.1 0.5-0.8 0.8-0.9 1.4M305.3 405.9c1.2 1.2 2.5 2.3 3.2 4.1 0.6 1.5 3.8-0.4 3.4 1.4 -0.4 1.4-1.6 3.4-0.4 4.2 2.8 1.9 6.3 0.1 9.4 0.9 1.9 0.5 0.1 3.1 1.6 4 1.1 0.8 2.5 1 3.2 2.2 0.4 0.6-0.8 1.2-0.6 2.3 0.1 1.6-2 2.3-3.6 2.9 0.1-0.4-0.1-0.8-0.5-0.9 -0.8-0.3-2.2 0-2.1 0.4 0.4 3.6 4.4 5.1 7.4 5.8 -0.3 0.9 0.6 1.6 0.8 2.3 0.3 1.2 2.2 1.9 2.9 3.1 1.6 2.6 3.7 4.3 5.5 6.6 -1.1-0.1-0.2 0.7-0.5 1 0.6 0.4 1.4 0.3 1.9 0.9 -0.6 0-1.3 0-1.9 0 2.6 1.8 4.8 4 7.6 5.5 0.7 0.4 0.7 1.7 1.5 2.2 -0.5 0-0.9-0.9-1.4-0.4 -0.7 0.7-0.4 1.9 0.1 2.2 2.4 1.4 3.2 3.5 2.5 5.9 -0.1 0.4-0.4 0.9-0.6 1.2l-0.9 0.9c0.9 0.4 0.7 1.7 0.3 2.7 -0.2 0.4-0.9 0.7-1.3 1.1 -0.2 0.3-0.2 1.1 0 1.3 0.7 0.4 1.2 1.3 1.2 1.5 0.1 3.5 2.6 7.6-0.8 10.6 -0.3 0.2-0.9-0.1-1.4 0.1 -0.9 0.4-1 2-1.9 2.2 -1.4 0.1-2.3 0.4-3.3 1.2 -0.2 0.2 0.1 1.2-0.1 1.2 -2.4 1.3-5.9-0.6-4.3 2.9 0.5 1.2 3 1.7 3.5 3.5 -1.2 0-2.2 0-3.4 0 0.6-0.7-1.1-0.3-0.5-1 -0.9 0.1-1.6 0.6-2.4 0.9 -1.4 0.4-2.8-1.2-4.3 0.1 0.7 0.5 0.8 1.1 0 1.4 -1.2 0.5-1.7 1.6-2.5 2.3l-0.3 0.2c0.8 0.1 1.5 0.4 2.2 0.7 1 0.4 1.2 0.9 2.3 1.5 1 0.6-1.4 1.4-1.7 2.6 -0.6 3-0.4 5.8-1 8.6 0.9 0 1.7 0.2 2.4-0.1 0.6-0.3 0.8-1.2 1.2-1.7 1.5-2.8 6-1.9 7.2-4.6 0.4-1.1-0.4-3-2.1-3.7 1.9-0.3 1.2 2.5 2.9 2.4 0.8 0 1.7 0 2.4 0 -0.1-1.5-1.8-2.3-1.9-3.9 0.9 1.5 2.4 1.6 3.9 1.9 -0.1-2.2-3.2-3.2-1.4-5.2 0.4-0.6 1.1 0.7 1.8 0.4 0.4-0.2 0.6-0.5 0.5-0.9 2.9 3.7 5.8-0.9 8.3-2.2 0.6-0.3 1.4-1.1 2.3-0.6 -0.1-0.8 1.4-0.5 1-1.5 0.9 0 1.9-0.4 2.8-0.6 0.9-0.3-0.1-1.6 0.2-2.1 0.4-0.6 1.9-0.8 2-1.2 1-2.6-1.8-5.3-0.2-8.1 0.3 0.2 0.6 0.5 0.4 0.9 0.4 0 0.6 0 1 0 -1.2-0.9 0.4-1.4 0.3-1.9 -3-8.6-2.8-18.4-9.4-24.6 -2.3-2.1-5.5-3.7-8.5-5.6 -2-1.3-3.5-3.5-5-5.5 1.2 0.3 1.3-0.9 1.9-1.4 -2.7-2.3-4.2-5.8-7.3-7.7 0.6-0.6 1.9-0.5 1.8-1.4 -0.3-2.2-2.2-4-0.2-5.7 0.5-0.4 1.7 0.1 2.2-0.3 0.9-0.6 1.9-1.4 2.3-2.3 0.6-1.2-0.1-2.7 1.5-4 0.3-0.2 0.4-1.3-0.4-1.8 2.2-0.5 3.4 2.6 5.2 1.7 1.1-0.5 2.2 0.4 2.9-0.4 0.3-0.2 0.1-0.9 0.1-1.4 -1.2 0.3-1-1.4-1.9-1.4 0.8-1.4 1.7-2.7 2.9-3.8 -0.5-0.5-0.9-1.2-1.4-1.4 -1.5-0.1-3-0.1-4.3-0.7 -1.4-0.6-1.9-3-3.9-2.7 0.9-1.5 0.9-3.3 1.9-4.9 0.6-1-0.7-0.9-1.1-1.2 -0.7-0.9-2.1 0.9-3.2 0.2 -1.7-1-3.8 0.3-4.5-1.1 -1-1.8-3.1-3.2-4.5-2.4 -1.8 0.8-2.2 2.5-1.6 4.6 -1.2-0.1-1.8-0.7-2.8 0.1 -0.1 0.1 0.1 0.6-0.1 0.8 -0.1 0.2-0.6 0.1-0.9 0.1 0.1-0.4-0.1-0.7-0.5-0.9 -0.6 1.2-1.8 1.5-2.9 1.9 -0.6-2-2-2.4-3.8-2.2 -1.1 0.1-1.2 2.2-2 2.4 -1.1 0.2-2.7-0.6-3.5-2 -0.1-0.2-1.2-0.2-1.2 0 -0.6 1.4-0.8 1.7-1.2 3.2L305.3 405.9 305.3 405.9zM390.6 404.7c0 0 0-0.3 0-0.4 -2.4 0.9-1.4 3.5-0.3 4.6 1.2 1.2 3.2 0.7 4.5-0.1 1.5-0.9 0.8-3.3-0.1-4.3C393.9 403.6 392.1 405.2 390.6 404.7L390.6 404.7zM496.5 277c0-0.5 1.1 1 1.4 1.5 0.9 1.2 0.3 3.5 1.4 4.5 6.4 5.8 7.6 14.8 5.1 22.2 -0.8 2.6-5 4-8.2 2.5 -0.4 1.7-2.2 1.2-3.4 1.9 -0.3-0.5-1.2-0.6-0.9-1.4 -1.5 1.4-3.7 2.1-4.8 3.9 -0.3-3.2-4-1.9-5.8-1 0.9-3.3 4.7-5.8 1.9-9.1 1.9-0.8 1.1-3.2 2.4-4.3 -0.9-0.6-1.6 0.8-1.8 0.4 -0.3-0.9-0.7-2.3 0.3-3.2 -1.7-0.6-2.9-0.1-2.4-2.4 -0.9 0.2-1.4 1.1-2.4 0.9 1.4-2.4 3.5-3.3 6.3-3.3 -0.4-1.7-1.4-3-3.2-3.7 -0.9-0.4-1.5-1.8-0.7-3 0 0 1.1-0.5 2.4 0 1.2 0.5 7.2 2 10.7-1.1C494.7 282.2 496.6 280.6 496.5 277L496.5 277zM515.5 243.4c-0.6-0.6-1-1.4-1.6-2.1 -0.1-0.2-0.9 0.1-1.3-0.1 -1.9-0.8-3.7-4.8-5.5-2.2 -0.6 0.9-0.1 2.7-0.9 3.5 -0.4 0.5-2-0.1-2.6 0.3 -1.2 1.1-2.5 2-3.7 3 -1.4 1.1-4.9-0.6-5.5 1 -0.8 1.8 1.8 4.4-1.4 4.8 -2.4 0.4-5.4-0.6-6.1-3.5 -0.1-0.4-1.5 0.4-2.5 0.6 -1.2 0.2-0.9 1.8-1.6 2.7 -4.2 5.3-11.4 5-15.6 9.9 -1.2 1.4 0.2 3.7 1.7 4.3 1.8 0.7 4.5-0.4 5.5 1.8 0.8 1.9-1 3.7-1.3 5.7 0.9-0.3 0.2 1.2 1 0.9 -0.1 2.1-3 3.1-2.3 5.3 0.6 1.8 1.7 2.9 3 4.1 1.3 1.2 2.7-0.4 4.2-1.2 0 0.4 0 0.6 0 1 0.5-1 1.8-0.1 2.4-1 0.1 0.4-0.5 1.2 0.5 1 2-0.3 3.4 0.2 5.4 0.6 3.4 0.8 7.7-0.3 8.9-4.1 1.3-3.8-1.2-6.4-4.5-8.4 -1.1-0.6-3.2-2.3-1.5-4 0.9-0.9 1.4-2.4 1.9-2.6 1.1-0.4 9.8-4.1 11.4-5.4 0.6-0.5 1.2-1.4 1.6-2.2 0.4 0.4 1.2-0.6 1.4 0.5 0.3-0.6 0.7-1.3 0.9-1.9 0.5-1.5-0.8-3-0.3-4.3C508.5 247.5 511.1 243.9 515.5 243.4L515.5 243.4zM288.3 155c-0.8-0.1-1.7 0.1-2.4-0.1 -0.1-0.1 0.1-0.6-0.1-0.9 -1.2-1.3-2.9-1.1-4-2.8 -0.1-0.2-1.4-0.5-1.6 0.4 -0.2 1-0.5 2.1-0.9 2.8 -0.4 0.9-1.9 1.4-2.6 2.5 -0.3 0.6 0.3 1.6-0.6 1.9 -0.6 0.1-1.5-0.1-1.7 0.1 -2.2 3 0.5 7 1.7 9.8 1.2 2.9-3 5.5-5.8 6 -2.7 0.5-5.5-1.4-8.6-1.7 -0.5 0-1.6-0.9-1.9-0.9 -4-0.2-8 0.6-11.4-1.9 -0.4-0.3 0.1-1.8-0.3-2 -5-3-10.8-2.8-16.3-4.1 0 0.6 0.2 1.2-0.4 1.4 -0.9 0.4-1.9-0.9-2.2-0.4 -1.5 2.1-4.1 1.7-5.8 2.7 -1.9 1.2-3.8 2.4-6 2.7 -0.6 0.1-1.2 0.9-1.6 1.1 -2.3 0.9-3.3 1.8-4.6 3.9 -0.7 1.4-2.8 0.9-4.2 2.4 -0.9 0.8-3.2-0.2-4.5 0.5 -1.7 0.9-2.3 3.2-2.3 5 0 0.2 0.8 0.7 1.2 1.1 0.5 0.6-0.4 0.6-0.9 0.9 2.8 1.9 5.1 4.7 8.3 6.1 3.3 1.5 7.4-0.4 9.9 3.2 1.8 2.6 2.7 6 5 8.4 0.9 0.9-0.5 3.4-0.1 5.5 0.3 1.9-4.1 3-3.3 5.6 0.4 1.4 0.8 3.2 2.4 3.8 5.8 2.1 11.7 0.6 17.8 2.1 2.6 0.6 4 3.4 6.3 4 2.4 0.7 4.8 1.4 7.1 2.4 1.4 0.6 2.7 2.4 3.2 3.8 5.1 14.6 22.4 11.8 34.6 10.3 3.4-0.4 6.9 0.5 10.1 2.2 6 3.1 12.6 4.8 19.4 4.8 0.7 0 0.3 1.5 0.9 1.2 1.7-0.9 3 0.4 4.4 0.6 3.8 0.4 5.8-3.8 8.9-4.8 8.4-3 17.9 0.3 26.1-2.9 2.8-1.1 4.8-4.5 7.7-6.4 2.3-1.5 6-1.6 7.6-3.5 1.4-1.7-1.8-3.3-3.2-5.2 -2-2.6 0.5-6.3 3.2-7.2 2.8-1 5.6 1.2 8.6 2 3.1 0.7 6.5 0.3 8.3-2.1 1.2-1.4 2.1-3 3.8-3.5 2.7-0.7 6 0.9 8.4-0.9 2.7-2.1 3-6.3 6.5-7.9 0.9-0.4 2 0.3 2.8-0.1 0.9-0.5 1.6-2 2.4-2.1 3.5-0.2 6.8-2.9 10-1.4 1.9 0.9 3.9 0.7 5.9 0.6 0.7 0 1-1 1.2-1.4 0.7-1.5-0.4-3.3-1.8-4 -1-0.6-2.4-1.1-3-1.9 -2.5-3.7-6.4-5.6-10.3-4 -1.4 0.6-2.7 2.1-4.4 1.8 -0.5-0.1-0.9-0.6-1.2-0.7 -2.1-1.2-4.2-0.6-6.6-0.9 -0.7-0.1-2.1 0.9-2.9 0.9 -1.9 0.1-3.3-3-2.1-4.2 0.6-0.6 2.2-1.2 3.5-1.2 0-0.9-0.9-1.9-0.4-2.9 1.4-3.1 3.8-5.6 5.1-8.7 0.4-1 0.6-2.6 0-3.2 -2.8-2.8-6.6 0.9-9.9-0.4 -1.6-0.6-2.4-2.6-4-3 -0.9-0.2-2.7 1.2-3.3-0.2 -3.8 1.8-7.1 3.9-10.7 6.6 -0.9 0.7-2.6 0.4-3.6 0.9 -0.6 0.3-1.6 0.9-2 0.9 -2.4-0.2-4.7 0-6.5 2 -0.4 0.4-1.6 1.2-2.1 0.5 -0.8-0.9-1.8-1.5-2.6-1.6 -3-0.2-5.8 1.7-8.8-0.4 -2.9-2-8.9 1.3-9.2-3.2 -0.1-0.7 0.9-1.4 0.6-2.4 -0.5 0.5-1.2 0.5-1.9 0.4 0.6-0.8-0.4-1.5-0.6-1.7 -1.7-1.2-4.3 0-6-0.6 -1.6-0.5-2.7-3.7-4.9-2.8 -0.4 0.2-1.3 0.5-1.6 0.6 -2 0.2-4-2-6.2-1.2 -6.7 2.7-14.3 3-19.9-1.1 -2.1-1.5-1.4-6.3-3.6-7.6C299.3 156.5 293.9 156 288.3 155L288.3 155zM200.7 180.8c-1.9-1.8-3 1.4-4.8 0.4 -1-0.6-1.7 0-2.6-0.1 -0.3 0-0.8 0.5-0.9 0.9 0 0.6 1 0.9 0.8 1.4 -0.6 1.4-2.2 2.3-3.5 3.2 -1.2 0.7-3.2-0.2-4.5 0.4 -0.6 0.3-1.9 0.2-1.9 1.2 -0.1 1.9-0.5 4 1.2 5.5 0.3 0.2-0.4 0.9-0.6 1.4 -0.6 1.2 1.7 2.2 1.1 3.2 -1.4 2.3-4.5 4.1-6.3 3.5 -3.8-1.4-7.8-0.5-11.5-2.4 -1.2-0.6-4 0.7-3.9 2.5 0.1 4.4-1.8 8.1-3.2 12 1.4-0.1 1.6 1.4 2.3 2.1 0.3 0.3 0.4 1.7-0.4 1.6 -2.7 0-4.9-0.2-7.5-1.8 -2.1-1.2-5.1 0.9-7.9 1.2 -1.4 0.1-3 0.8-3.7 1.9 -1.1 1.8 0.9 2.7 2.7 2.3 0.3 2.5-1.1 4.9 0.9 7.3 0.5 0.6-0.9 1.4-0.3 2.3 1 1.4 3.1 2.6 2.6 4.3 -0.6 2.2-4.4 1.6-4.3 3.9 0.1 1.4 1.3 2.7 1.2 4.4 -0.1 0.6-1.3 2.6-1.9 2.7 -5.1 1.6-8.9 2.2-13.2 5 -3.3 2.2-7.1 1.2-10.4 2.2 -2.6 0.9-3.1 4.7-6 5.8 -1 0.4-2.2 0-3.3 0.6 0-0.6-0.8-0.9-0.5-1.5 -2-0.9-3.8 0.5-5.8 0.6 -1.1 0.1-1.7 1.1-2.4 1.9 -0.9 1.3-1.9-0.1-2.3 0.1 -1 0.9-3.1 1.7-2.4 3.8 0.6 1.8-2.8 3-2.6 4.2 0.4 2.4 1.2 7.3 3.8 6.9 1.7-0.3 4.2-0.6 5.2 0.9 0.2 0.4 0.4 1.2-0.1 1.9 -0.7 1.4 1.7 3 0.7 4.8 1 0.3 0.3 1.4 0.9 1.9 -3.3 0.7-10.4 0.8-11.3 2.2l-0.4 1.1 -0.4 1.2c0 0 0.9 1.2 2.7 0 1.9-1.4 3.7-2.2 5.3-1.9 1.7 0.3 4.8 0.6 5.3 0.8 0.5 0.1 1.9-0.4 3.5 0.9 1.6 1.2 2.6 2.4 3.2 4 0 0 0 0.5-0.4 1.5 -0.4 1-0.9 1.5 0.1 2.4 1 0.9 1.5 0.8 2.5 0.6 1-0.1 1.2-0.1 2.4 0.5 1.2 0.6 7.4 2.9 7.4 2.9s0.6 0.5 1.3-0.1c0 0 3.7-4.2 8.7-4 0 0 2.2 0.1 3.2 0.6 0 0 5.9 3 6.4 3.5 0.5 0.5 1 0.7 0.5 2 -0.5 1.4-3.2 5.2-4 6.1 0 0-1.2 1.9-4 3.4l-3.5-0.3 -0.7 1.2c-0.5 0.9-0.9 0.6-0.3 1.9 0.9 2.1 2.9 3.5 5 4.8 2.4 1.4-0.6 4-1.4 6.3 -0.1 0.3-0.9 1-1.7 0.5 -0.8-0.6-1.3-1.3-2-1.8 -0.8-0.5-2.3 0.2-2 0.7 1.5 2.8 2.8 5.5 1.2 8.4 1.1-0.4 1.8 0.9 3 0.2 1.4-0.7 1.6 2 2.4 2.4 3.5 1.7 6.9 3.2 9.6 5.8l0.8 0.6 0.6 0.5c1.1-1.4 1.8 1.4 2.9 2 0-0.5-0.1-1 0.1-1.4 0.3-0.5 1.1-0.7 1.5-1.1 0.4-0.4 1.4-0.9 2-0.6 2.4 1.2 4.3 2.7 6.7 4 1.7 0.9 3.8 1.6 4.8 3.3 0.7 1.3 2 3.9 3.1 3.2 0.9-0.5 0.9-3.1 2.2-1.7 0.8 0.8 0.6 2.5 1.4 3.6 0.6 1 2.1 0.5 3.1 1.4 0.8 0.7 2.2-0.4 3.2 0.1 0.6 0.2 1 1.4 1.4 2.2 0.3 0.7 0.8 0.4 1.4 0.1 1.2-0.4 2 1.6 3.1 0.9 0.1 0.6 0.5 1.8 1.2 1.4 1.2-0.8 2.2 0.9 3.4 0.2 0.1 0 0-0.5 0.3-0.6 1.9-0.6 3.2 0.7 4.8 1.4 2.5 1.2 4 0.5 6.8 0.4l1.5-0.1c1.5-0.8 0.2-0.1 1.9-1 0.5-0.2 1.7-0.4 1.7 0.4 -0.1 1.4 0.2 2.7 0.8 3.7v0.4c0.3-0.9 2.7-1.4 1.9-3 0.4 0.1 0.7-0.1 0.9-0.4 0.7-0.4 0.8-1.4 1.5-1.8 1.2-0.6 1.9-1.8 3.4-1.9 -0.1 0.5 0.9 0 0.7 0.7 0.6 0.1 1.3-0.4 1.5-0.1 0.5 0.5 0.9 1.2 1.6 1.2 1.2 0.2 2.2 0.5 3.4 0.7 1.1 0.2 2.4-0.7 3-0.4 1.2 0.6 1.8 2.4 2.7 3.6l1.6-0.8c2.1-0.4 3.3-0.6 5.5-1 -1.4-3 2.7-1.9 3.2-4 0.4-1.4 1.2-2.2 2.2-2.7 1.2-0.5 3 0.2 4.2-0.4 2.2-1.1 3.2-4.8 5.8-4.2 1.1 0.3 2.4 1.6 4 1.6 0.4 0 0.6 0.4 0.5 0.9 2.2-0.5 3.4-3.9 5.7-2.7 1.5 0.9 0.7 2.5 0.1 4.1 0.9-0.6 1.8-1.3 2.9-1.4 0 0.8 1.7 0.9 0.9 1.9 -0.9 1.2-2 1.5-3.2 2.1 -0.3 0.1 0.1 0.8 0.4 0.8 1.9 0.1 3.2-0.4 4.8 0.6 -0.1-1.7 1-0.1 1.4-0.5l0.9 0.6 0.6 0.4c1.4 0.1 0.9-0.9 0.9-0.9 -0.4-0.5-0.5-0.9-0.4-1.5 0.5 0.3 1-0.4 1.5 0 1.7 1.3 3.6 2.4 4.1 4.4 0.3 1.3-0.4 2.5 0.8 3.1 0.4 0.2 1.6-0.6 2.2-0.1 0.9 0.7 1.4 1.9 0.7 3.4 -0.9 1.8 2 3.1 1.1 5.3 -0.6 1.6-2.7 3-1.2 4.7 -1.1 0.5-2.2 1.4-2.2 2.4 -0.1 2.2-2.4 2.8-3.9 3.6 -1.4 0.7-0.9 2.9-2.6 3.6 1.2 2.2 3.1 4.6 0.5 6.8 1.8-1 3.2-1.8 5-2.6 1.4-0.6 3.5-0.8 5.2 0.2 -1.9 0.7-1 3.6-0.1 4.8 0.6 0.8-0.4 1.7-0.2 2.3 0.5 1.7 3.5-0.1 3.7 0.7 0.6 2.2-2.2 5-0.7 7.4 0.9 1.4 3.7-0.2 4.8 1.2 0.6 0.7-0.2 1.9-0.8 2.7 0.7 0 1.3 0.5 1.9 0.7 0.5 0.1-0.7 1-0.4 1.1 2.8 0.4 5.3-1.7 8.1-1.8 -0.1 0.6-0.3 0.6-0.4 0.8l-0.2 0.8c0 0 2.4 1.9 3 2.2 0.6 0.2 1.3 0.5 2.2-0.4 0.9-0.9 0-3 0-3s-1.4-1.5-1.6-3c-0.2-1.5-0.1-1.5-0.5-1.7 -0.4-0.2-0.9-1.2-0.2-2.1 0.7-0.8 1.9-0.7 2.7-0.4 0.6 0.3 2.3 1.2 3 1.3 0.1 0 0.3-0.7 0.3-0.7 0.4-1.5 0.3-1.4 0.9-2.8 0.1-0.2 1.1-0.2 1.2 0 0.8 1.4 2.4 2.2 3.5 2 0.8-0.1 0.9-2.2 2-2.4 1.8-0.3 3.2 0.1 3.8 2.2 1.1-0.4 2.3-0.7 2.9-1.9 0.4 0.2 0.6 0.5 0.5 0.9 0.3 0 0.7 0.1 0.9-0.1 0.2-0.1 0-0.7 0.1-0.8 1-0.8 1.7-0.2 2.8-0.1 -0.6-2.1-0.2-3.8 1.6-4.6 1.4-0.7 3.5 0.6 4.5 2.4 0.7 1.4 2.9 0.1 4.5 1.1 1.1 0.6 2.4-1.1 3.2-0.2 0.4 0.4 1.7 0.2 1.1 1.2 -0.9 1.6-0.9 3.4-1.9 4.9 2-0.2 2.4 2.1 3.9 2.7 1.3 0.6 2.8 0.6 4.3 0.7 0.5 0.1 0.6 0.3 1.1 0.8l0.4 0.6c4.5 0-1 0.9 3.5 0.9 2.2-3.7 6.2 0.4 9.1 1.4 -0.7 1.4-0.6 2.9-0.3 4.2 0.6 3.2 4.2 4.9 7 3.7 1.2-0.5-1.2-0.4 0.1-1.7 -1.3-0.9-3.5-0.1-3.1-1.9 0.6-3.1 2.2-6.2 4.4-7.8 2.9-2.1 7.3 1.4 10.5-0.9 1.4-1 3.2-1.2 4.5-1.8 1.6-0.7 2.4-4.5 4.8-3.5 0.3 0.1 0.7 1.1 1.1 1.1 0.1 0.1 0.2 0.1 0.3 0.1 0 0 0.2-1.2 1.6-1.8 0 0-0.4 0.8 1.2 0.5 0 0 2.6-1.2 3.2-0.1l0.5 1c1.4-1.3 3.2-2.1 5.3-2.2 0.1 0 0.8-0.6 1.4-0.7 2.2-0.4 4 0.2 5.7-0.2 3.2-0.8 3.7-5.8 6.8-5.6 3.2 0.1 3.9-3.4 6.8-4.3 -0.3-0.4-0.7-0.9-0.4-1.4 2.5-3.7 6-5.9 10.5-6 1.1 0 1.9-1.3 3-1.7 -1.7-1.3-3.3 1.3-4.1 0.3 -1.2-1.4 2.4-2.3 1.5-4.1 -0.3-0.5-0.5-1.1-0.2-1.4 2-2.9 3.8-5 5.8-7.6 2.6-3.2 4.1-7.1 7.6-9.8 1.4-1.1 0.4-2.9 1.8-4 0.3-0.2 0.4-1-0.4-1.4 1.5-2.6 2.4-5.6 5-7.5 0.4-0.3 1.5-0.3 1.6-0.7 0.6-1.8-0.9-3.8 0.2-5.8 -2.2-0.9-3.5-1.4-5.8-1.9 0.5-1.3-0.9-1.4-0.7-2.4 0.3-1.8 0.4-3.7 2.2-4.8 -1.2-0.3-2.3 0-3.5-0.2 -1.8-0.3-3.7 1.2-5.7 0.6 -2.2-0.8-3.7-2.9-6.3-2.8 2.7-0.3 5.3 1.1 7.6 0.6 1.3-0.2 1.9-2.8 3.5-3.2 1.2-0.3 1.7-0.5 2.8-1.2 -1.4-0.6-3.2-1.3-4-2.2 -1.9-2.4-3.1-5.3-4-8.4 -0.6-1.9-4.2-0.9-5.3-3 -0.6-1.2-0.4-2.7-1.2-3.7 -0.5-0.6-1.8-0.6-2.7-1.1 1.7-0.4 0.5-2.2 1.5-2.8 1.3-0.9 2.8-1.4 3.7-2.6 1.2-1.7 2.1-4.2 1.1-6.1 1.9 1.8 4.5 0.7 5.5-0.7 3.9-5.2 10.2-6 16.2-6 0.5 0-0.1-2.5 1.2-4 0.5-0.5 0.6-2.2 0.1-2.5 -3-1.5-7.9-3.4-10 0.3 -3.3-3.7-8.7-3.4-13.5-3.4 0 1.1 0.1 2.2-0.1 3.3 -0.8 3.2-3.9 4.4-6.6 4.9 -0.5-3.1 2.3-6.3 0.1-8.4 -2.2-2.1-6.3 0-9.2-1.4 -1.9-1-2.8-3.4-1.4-5 0.9-1.2 1.9-2.2 3.7-2.1 -0.1 0.9 1.2 0.1 1 1 1.9 0.1 3.7-1.1 5.8-1 0-1.3 1.7-0.6 1.8-1.4 0.1-1.4 0-3.1 0.8-4.2 1.4-2 4.1-1.7 6-3.1 1.8-1.4 3.5-3 5.4-3.5 1.4-0.4 3.4-0.5 4.6 0 0.9 0.4-0.1 2.3-0.1 3.6 0.1 1-0.9 2.3-1.8 2.7 -1.2 0.5-2.7 1.1-2.5 2.1 0.3 2.9 3.6 1.3 6 2 -1.2 2.6-3 4.5-5.8 5.8 0.9 0.9 2.8 1.8 3 0.4 0.8-4.6 5.8-5.5 8.9-7 3.5-1.7 7.4-3.1 11.4-4v-0.6c-0.4-0.9-0.6-1.9 0.1-2.6 4.2-5 11.4-4.7 15.6-9.9 0.7-0.9 0.4-2.4 1.6-2.7 1-0.1 2.4-0.9 2.5-0.6 0.7 3 3.7 3.9 6.1 3.5 3.2-0.4 0.6-3 1.4-4.8 0.6-1.6 4.1 0.1 5.5-1 1.2-0.9 2.6-1.9 3.7-3 0.6-0.4 2.2 0.2 2.6-0.3 0.8-0.8 0.4-2.7 0.9-3.5 1.9-2.7 3.6 1.4 5.5 2.2l0.9-0.5c1.4-0.9 2.7-2.4 3-3.4 0.5-1.5 1.7-2.4 1.8-4.2 -0.9 0.3-0.1-1.1-0.9-0.9 0.9-3.7 0.4-7.6-1.9-10.7 2.3-1 4.4-2.7 5.8-4.8 1.7 1.3 2.7 2.4 4.8 1.4 -0.1 0.9 0.5 0.9 1 0.9 1.3 0.4 2.5-0.2 3.8-0.4 -0.3-1.8 0.6-3.3 2.3-4.5 0.4-0.2-0.1-1.3 0.2-1.7 0.9-1.3 2-2.4 3.1-3.6 0.6-0.6 0.3-1.9-0.3-2.7 1.2-0.4 1.5-1.7 2.3-2.5 0.8-0.8-0.7-2.2-0.2-2.5 1.9-1.2 1.2-2.4 1.3-4.1 1.7 0.3 4.3-0.5 3.5-2.3 -0.5-1.3-1.1-2.7-0.9-4 0.1-0.6 0.3-1.4 0.8-1.9 -1.2 0.1-2.2-1.2-2.8-0.7 -3 1.7-6.8 0.8-9.6 2 -1.4 0.6-2.2 2.1-4 2.5 0.4 0.3 0.7 0.6 0.4 0.9 -2.3 1.7-5.3 1.3-7.7 0.2 -0.9-0.4-1.9-0.1-3 0.7 -0.3 0.2-1.3 0.3-1.2-0.4 0.1-0.4-1.3-1.5 0.4-1.5 -0.5-0.6-1.8-0.7-1.8-1.4 0.1-2.4-0.2-4-1.6-5.8 1-0.2 0.4-1.7 1.4-1.9 -1.9 0.4-3.6-0.2-5.3-1 -0.9-0.4-0.8-1.5-1.2-2.3 -1.1-2.2-3.9-0.9-5.5-1.8 -1.2-0.6-2.4-1-3.6-1.4 -1.6-0.6-3.5-0.2-5.3-0.2 0-1.3-1.7-0.9-1.9-1.9 -0.3-1.2 1.3-2.2 0.4-3.4 -0.5-0.6-1.6-1.2-1.6-1.4 -0.1-4.2-2.3-6.8-5-9.8 -0.7-0.8 1.4-1.3 0.8-2.2 -1.9-3.2-3-6.4-4.7-9.5 -0.7-1.4-1.7-3.2-3.1-4.4 -0.7-0.5-1.8-0.7-2.8-1 -1.7-0.4-3.7 0.3-5.2-0.3 -1.6-0.7-3.2-1.9-4.7-2.8 -2.3-1.4-5.5-2.1-8.4-1.6 -0.3 0.1-1.1 0.3-1.6 0.6 -1.3 0.8-3.1-1.4-4-0.6 -2.7 2.3-6.4 0.6-8.6 2.1 -2.2 1.4-3.8 3.2-6.4 4.2 -0.5 0.1-0.9 2.3-0.1 2.2 3.9-0.1 5 3.3 4.7 5.6 -0.3 2.4-3.8 4-5.7 6.8 -0.9 1.4-0.6 3.5-2 4.2 -0.9 0.4-1 1.3-1.7 1.8 -2 1.7 0.4 4.4-0.6 6.6 0.3 0 0.6 0 0.9 0 -0.9 0.2-1.3 1.3-1.9 1.3 -3.6-0.1-5.9 1.9-8.9 3.2 -2.8 1.2-5.5-1.6-8.6-2.1l-1.6-0.8c0.9 1.7 0.4 2.2 0 3.2 -1.3 3.1-3.7 5.6-5.1 8.7 -0.4 1 0.4 1.9 0.4 2.9 -1.3 0.1-3 0.6-3.5 1.2 -1.2 1.3 0.1 4.4 2.1 4.2 0.8 0 2.2-0.9 2.9-0.9 2.4 0.3 4.5-0.3 6.6 0.9 0.3 0.1 0.6 0.6 1.2 0.7 1.7 0.3 3-1.2 4.4-1.8 3.9-1.6 7.8 0.4 10.3 4 0.6 0.8 2 1.2 3 1.9 1.4 0.7 2.5 2.5 1.8 4 -0.2 0.4-0.5 1.4-1.2 1.4 -2 0.1-4 0.2-5.9-0.6 -3.2-1.4-6.5 1.2-10 1.4 -0.9 0.1-1.5 1.6-2.4 2.1 -0.8 0.4-1.9-0.2-2.8 0.1 -3.5 1.6-3.7 5.8-6.5 7.9 -2.4 1.8-5.7 0.1-8.4 0.9 -1.7 0.5-2.7 2-3.8 3.5 -1.8 2.4-5.2 2.8-8.3 2.1 -3-0.8-5.8-3-8.6-2 -2.7 0.9-5.2 4.6-3.2 7.2 1.4 1.9 4.5 3.5 3.2 5.2 -1.6 1.9-5.3 2-7.6 3.5 -2.9 1.9-4.9 5.3-7.7 6.4 -8.2 3.2-17.7-0.1-26.1 2.9 -3 1-5 5.2-8.9 4.8 -1.4-0.1-2.7-1.4-4.4-0.6 -0.6 0.3-0.1-1.2-0.9-1.2 -6.8 0-13.3-1.7-19.4-4.8 -3.2-1.7-6.7-2.6-10.1-2.2 -12.2 1.5-29.4 4.3-34.6-10.3 -0.5-1.4-1.7-3.2-3.2-3.8 -2.2-1-4.6-1.7-7.1-2.4 -2.4-0.6-3.7-3.4-6.3-4 -6-1.4-12 0-17.8-2.1 -1.6-0.6-1.9-2.4-2.4-3.8 -0.8-2.6 3.6-3.7 3.3-5.6 -0.4-2.2 0.9-4.6 0.1-5.5 -2.3-2.4-3.2-5.8-5-8.4 -2.5-3.6-6.6-1.7-9.9-3.2 -3.2-1.4-5.5-4.2-8.3-6.1 0.4-0.2 1.4-0.3 0.9-0.9 -0.4-0.4-1.2-0.9-1.2-1.1L200.7 180.8 200.7 180.8zM326.2 467.4c0.4-1.2 2-1 2.6-2.4 2.3-6.2-2.1-10.9-5.1-16 -0.6-1.1 0.1-2.2 0.7-3.4 0.4-0.9-0.5-1.7-1-2.2 -1.8-2.1-3.7-3.8-4.7-6.4 -1.4 0.7-2.9-0.1-4.8 0 -2.4 0.2-3 3.5-4.8 3.5 -1.7 0.1-3.6-2.9-5.1-2.2 -2.2 1.1-3.8 5.7-6.8 4.7 -3.2-1.2 0.7-2.6 0.5-4.5 -0.1-0.7-2.4-1.4-1.4-2.2 1.4-1 1.7-1.7 1.2-3.2 0.8-0.1 1.4-0.6 1.9-1.1 0.2-0.2 0.2-1.1 0-1.2 -1.3-0.6-1.7-2.2-0.5-3.1 0.5-0.4-0.6-0.7-0.4-1.4 -1.7-0.4-3.4 0.1-4.8-0.3 -1.5-0.4-0.4-3.2-1.4-4.3 -0.8-0.9-1.3-1.2-2.6-1.3l0.1-0.4c0.7-0.7 2-1.1 3.1-2.1 0.4-0.4-0.1-1.7 0.3-2.1 0.5-0.5 1.3-1.3 2.3-1.2 0-0.3 0-0.6 0-0.9 0.7 0.6 0.4-1.4 1.5-0.6 1.6 1 3 3 4.6 1.9 1.4-0.9 0.6-3.2-0.1-3.9 -1.1-1.1-1-2.3-1.3-3.6 0-0.4-0.7-0.6-0.8-1 -0.4-2.2 2.2-2.7 3.8-1.4l1.9 0.7c1.3 1.2 2.6 2.4 3.3 4.1 0.6 1.5 3.8-0.4 3.3 1.4 -0.4 1.5-1.6 3.4-0.4 4.2 2.8 1.9 6.3 0.1 9.4 0.9 1.9 0.5 0.1 3.1 1.5 4.1 1.2 0.7 2.6 0.9 3.2 2.1 0.4 0.6-0.7 1.2-0.6 2.4 0.1 1.5-1.9 2.3-3.5 2.9 0.1-0.5-0.1-0.9-0.5-0.9 -0.8-0.2-2.2 0.1-2.1 0.4 0.4 3.6 4.3 5.1 7.4 5.8 -0.3 0.9 0.6 1.6 0.7 2.4 0.4 1.2 2.2 1.9 3 3.1 1.6 2.6 3.7 4.3 5.5 6.6 -1.1-0.1-0.1 0.7-0.4 0.9 0.6 0.4 1.4 0.3 1.9 1 -0.6 0-1.3 0-1.9 0 2.6 1.8 4.8 3.9 7.6 5.4 0.7 0.4 0.7 1.7 1.5 2.3 -0.6-0.1-0.9-0.9-1.4-0.4 -0.7 0.6-0.4 1.9 0.1 2.2 2.4 1.4 3.2 3.6 2.6 5.9 -0.2 0.9-0.9 1.5-1.5 2.1 0 0-0.4-0.9-2.1 0.1 -1.7 1-2.8 2.2-2.8 2.2s-1.1-1.7-3.8-1.2c0 0-3.2 0.4-3 1.7 0 0 1.4 1.3 1.4 1.9 0.1 0.6 0.2 1.3-1.1 1.5 -1.2 0.3-1.9-1-1.9-1s-0.4-1.9-1.6-1.4c0 0-0.4 0-0.6 0.5 -0.2 0.4-0.2 0.2-0.7 0C327.1 468.7 326.2 467.4 326.2 467.4L326.2 467.4zM432 491.6c0.1 0.1-0.4 0.8-0.9 0.9 0.4 1.4 1.2 3.5 3.4 3 0.1 0 0.7 0.9 0.4 1.2 -1 0.9-2.6 0.2-3.7 0.7 -0.4 0.1-0.7 0.8-1.1 1.3 -0.7 1-2.4 0.1-2.7 1 -0.9 3-4 6.1-6 7.8 -1.7 1.4-4.8 1.4-5.6 3.8 -0.3 0.9-0.6 2.6-2.1 2.3 1.3-1.3 0.9-3.5 2.4-4.8 1.7-1.4 2.2-3.6 3.9-4.7 1.8-1.1 3.6-2 4.9-3.9 0.9-1.3 2.2-1.7 3.3-3 0.3-0.3 1.2-0.1 1.8-0.1 -1.2-2.7-0.7-5.8 2.1-7.1C432.6 490.1 430.7 490.7 432 491.6L432 491.6zM436.2 485.1c0.3-1.1-1.2-1.6-2.2-1.4 1.5 0.9 1.2 1.9 0.9 3.4C436 486.9 436 485.8 436.2 485.1L436.2 485.1zM445.1 483.3c0.9-1.5 0.4-3.3 0.2-4.8 -0.3-1.4-0.9-3.5-2.7-3.7 -1.2-0.2-2.7-0.7-3.8 0.4 1.8 1.6 1.5 3.7 2.6 5.6 0.7 1.3 2.2 2.6 4.2 1.6C445.3 482.7 445.2 483 445.1 483.3L445.1 483.3zM466.7 481.8c-0.6 0-1.5 0.2-1.8-0.1 -0.9-1.1-1.4-2.7-2.2-3.5 -1.9-1.8-4-2.7-5.8-4.9 -0.6-0.7-2.2-2.3-2.8-1.4 -0.8 1.1 2.7 3.7 1 4.2 -1.4 0.4-3.1-0.9-4.8-1.9 -0.9-0.5-2.4 0.1-3.1-0.4 -2.2-1.6-5.3-0.9-6-2.9 -0.3-0.8 2.2-0.8 2.7-1.5 0.9-1.2 0.4-3.3-1.2-4.6 -0.6-0.4-0.9 0.4-1.4 0.5 0.9 0.4 0.4 1.2 0.5 1.9 -2.7-0.4-4.1-2.6-6-4.1 -2.2-1.7-0.7-5-2-7.5 -0.5-0.9-0.1-2.4 0.4-2.6 1.2-0.4 2.7 0.6 4.2 0.7 -2.1-4-1.3-8.7 0.1-12.3 0.4-1.2 0.7-3.2 2-3.7 2.4-1.2 5.4 0.4 8.1 1.4 1.3 0.5 3.2-1.4 4-0.5 0.8 1.1-1.4 1.5-1.9 2.7 -0.8 1.9 1.7 3.4 3.1 4.8 0.6 0.5 0.7 1.3 0.4 1.9 -0.9 1.4-1.9 2.7-2.6 4.2 -0.9 1.8-4.2 1.9-4.8 4 -0.4 1.3-1.2 2.4-1.3 3.4 -0.3 4.4 1.8 12.2 7.8 10.1 -0.2 0.8 1.2 0.1 0.9 0.9 2.1-0.6 4.5-1.1 6.1-0.1 1.3 0.7 0.7 3.2 2.2 4.4 0.6 0.5 1.4 0.8 2.4 0.6 -1.1-0.9-0.2-3.6 0.8-3.1 1 0.6 1.5 2.2 3 2.7 -1.1 0.6-1.5 1.9-2.7 2.7 -0.9 0.6 0.9 2.4 2.2 3.1 -0.1 0-0.3 0-0.4 0 0.6 0 1.7-0.1 1.7 0.1 0.9 2.1-2 2.5-3.7 1.9C466.1 482.5 466.4 482.2 466.7 481.8L466.7 481.8zM469.7 485.2c-0.8-0.1-0.2-1.2-1-1.4 1.7-1 3.7-2 5.2-1.5 1.5 0.5 1.7 3.2 1.7 4.9 0.1 2.1 1.7 4.9 0.1 5.9 -1.7 1-1.7-3.1-3.5-4.5 -1-0.9 1.3-0.8 0.9-1.9 -1.5 2.2-3.3-0.2-3.8-1.9C469.3 484.9 469.5 485.1 469.7 485.2L469.7 485.2zM472.1 491.1c-1.9-1-3.8-1.1-3.6-3.9 0-0.2-0.6 0.8-1.2 0.5 0 1.7 1.1 2.6-0.1 4.1 -1.2 1.6 1 3.4 3 2.7 0.7 2.1 0.4 6 3.9 5.3 -1-0.7-2.2-0.6-1.3-1.8 0.4-0.6 1.7 0.9 2 0.3 0.9-1.8-3-1.9-2.2-4.2 1 0.4-0.1-1.4 0.9-1 0-1.3-1.1-1.7-1.9-2.4C471.8 490.7 471.9 490.8 472.1 491.1L472.1 491.1zM459 493.9c-1.6 0.4-3.1 1.2-4.8 0.5 -0.4 1.2-1.9 2.7-0.4 3.7 0.8 0.5 1.6-0.2 2.4-0.4 -1.6 1.1-0.1 2.7-0.7 3.7 -0.6 1.1-2.3 0.5-3.6 0.7 -0.7 0.1-0.6 1-0.4 1.3 2.2 2.5 5.5 4.5 8.4 3.1 0.6-0.2-0.7-1.7-1-2.7 -1-3.3 2.3-6.5 1.4-9.9 -0.2-0.8-1.5-1.4-2.7-1.1L459 493.9 459 493.9zM459 493.9c-1.6 0.4-3.1 1.2-4.8 0.5 -0.4 1.2-1.9 2.7-0.4 3.7 0.8 0.5 1.6-0.2 2.4-0.4 -1.6 1.1-0.1 2.7-0.7 3.7 -0.6 1.1-2.3 0.5-3.6 0.7 -0.7 0.1-0.6 1-0.4 1.3 2.2 2.5 5.5 4.5 8.4 3.1 0.6-0.2-0.7-1.7-1-2.7 -1-3.3 2.3-6.5 1.4-9.9 -0.2-0.8-1.5-1.4-2.7-1.1M449 484.8c-0.2 1.7 1 3.6 0.4 5.5 -0.6 1.8 0.6 4.4-1 6.6 2.7 0.2 4.4-2.4 7.2-2.6 0.8-0.1 2-1 2.2-1.8 0.3-1.2 0.9-2.4 0.6-3.8 -4.1 0.9-5.7-2.5-8.7-4.7C449.7 483.9 449 484.4 449 484.8L449 484.8zM450.9 480.5c-0.7 0.8-1.6 1.2-0.9 2.3 0.1 0.2 1 0.2 1.2 0 0.4-0.6 0.9-1.5 0.5-2.3C451.6 480.3 451 480.3 450.9 480.5L450.9 480.5zM454.7 481.8c-1.4 1.4-1.3 3.2 0.5 3.9 -0.1-0.7 0.8-1.2 0.4-1.9 -0.2-0.4-0.5-0.6-0.9-0.5C454.7 482.8 454.7 482.3 454.7 481.8L454.7 481.8zM459 481.4c-0.8 1.2-1.4 2.7-0.7 3.7 1.7 2.3 0.7-1.3 2.2-1.7 2.6-0.6 2.4 3.7 5.3 3.2 -1.8-1.8-3.1-4-4.3-6.3 -0.4 0.3-0.6 0.5-0.5 1 -1 0.1-1.9-0.1-2.9-0.5C458.4 481 458.7 481.2 459 481.4L459 481.4zM460 503.1c0.9-1.8-0.1-4.1 1.2-5.6 1.7-2.2 0.6-5.3 3.2-6.9 1.2 4.9-2.7 8.3-3.4 13C460.7 503.4 460.3 503.2 460 503.1L460 503.1zM464.2 503.4c-0.9-1.5 1.2-3.5 3.1-3.9 0.9-0.2 1.9 1.9 1.2 2.4C467.2 502.7 465.2 505 464.2 503.4L464.2 503.4zM462.4 513.2c0-1.9-1.7-3.5-3.3-2.8 -0.7 0.4-0.8 1.6-1.2 2.2 -1.9 2.3-4.5 3.7-6.8 5.6 -0.5 0.4-1.7 0.7-1.8 1.4 -0.4 1.6-1.4 3.5-0.2 5.1 0.5 0.6 1.1-0.7 1.8-0.4 0.7-2.6 0.3-6.6 3.8-6 0.4 0.1-0.4 1.6-0.4 2.6 0.1 0.4 0.7 0.7 0.8 0.4 0.8-3.2 3.4-0.5 4.8-2 0.3-0.3-1.7-1.2-0.3-1.6 1.2-0.2 2.4 0.9 3.7 0.7 -0.5 3.4 0.9 6.3 3.1 8.5 0.7 0.7 2 1.3 3.2 1.6 1.3 0.4 2.7-1.1 3.7-0.2 0.8 0.6-0.8 1.9-0.2 2.6 0.9 1 3.2 0.6 3.3-0.4 0.4-2.4-3-4.5-1.9-7.1 0.7-1.8 1.7-3.5 3.2-4.9 0.1 3.1 0.9 5.9 1.9 8.7 0.6-1.2 0.4-2.7 1-3.8 0.7-1.2 2.8-1.4 2.4-3.4 -0.5-2.2-1.2-3.5-2.3-5.4 -0.4-0.7 0.9-1.6 0.3-2.3 -0.6-0.8-1.3-1.7-0.7-2.3 1.1-1.3 1.6-2.4 0.6-3.3 -1-1-2-2.4-2.9-3.5 -1.2-1.5-3.7-3-5-1.4 -0.9 1.2 1.3 2.7 0.6 4.1 -0.6 1.4-2.5 1.7-3.5 2.3 -3.2 1.8-5.5 4.2-6.5 7.9 0.1-1-0.8-1.9-0.5-2.9C463.1 513.2 462.8 513.2 462.4 513.2L462.4 513.2zM477 500.1c0.2 0.1 0.6 0 0.9 0.1 0.4 0.1 0.6 0.5 0.5 0.9 0.5 0 1.2 0.2 1.4-0.1 0.9-1.3-1.4-1.5-1.4-2.8 -0.3 0-0.7-0.1-0.9 0.1C477 498.8 475.9 499.3 477 500.1L477 500.1zM469.2 506c-0.5 0.9-2.7 0.1-1.8 1.2 0.6 0.6 1.8-0.6 2.7-1.3C469.8 506 469.3 505.9 469.2 506L469.2 506zM461 507.9c1.1 0.4 0.2 1.3 0.5 1.9 0.7-0.4 1.9-0.9 1.3-1.9 -0.4-0.6-1.2 0.6-1.8 0.4C461 508.3 461 508 461 507.9L461 507.9zM450.9 526.3c-0.6 0.7-1.4 0.2-1.9 0.6 -0.4 0.3-0.2 1.2 0.4 1.2 0.9 0 2.1-0.3 2.3-1.4C451.8 526.4 451.2 526 450.9 526.3L450.9 526.3zM483.1 541.2c0.2-0.1 0.4-0.3 0.5-0.4 -0.4 0.8 0.3 1.2 0.4 1.9 0.4-0.1 0.8-0.2 0.9-0.5 0.2-0.4 0.2-1.1 0-1.3 -0.7-0.8-1.4 0.9-2.4 0.4C482.9 541.2 483 541.2 483.1 541.2L483.1 541.2zM481.2 534.9c0.1 0.9 0.6 2.2 1.3 1.7C483.4 536 482.1 535.3 481.2 534.9L481.2 534.9zM473.5 536.8c0.6 0.7 0.5 1.6 0.5 2.4 0.3-0.1 0.8-0.2 0.9-0.5C475.4 537.6 474.4 537.2 473.5 536.8L473.5 536.8zM475.6 547.1c-0.4 0.3-0.4 1.6 0 2.2 0.2 0.4 0.9 0.2 1.3-0.4C475.9 548.7 476.9 546.3 475.6 547.1L475.6 547.1zM448.9 461.6c0.1 1.2 0.7 2.2 0.4 3.4 0.4-0.9 2.2-1 1.7-1.8C450.7 462.5 449.5 462.4 448.9 461.6L448.9 461.6zM456.6 477.5c-0.3 0.7 0.2 1.3 0.4 1.9 0.9-0.6 0.6-1.7 0.4-2.4C457.4 476.8 456.8 477.2 456.6 477.5L456.6 477.5zM445.6 476.6c0.9-0.4 0.8 1.9 1.8 0.9 1-1-0.6-1.2-1-1.7C445.9 475.2 445.8 476.1 445.6 476.6L445.6 476.6zM477.9 495.4c-0.1 0.1-0.1 0.6 0 0.9 0.1 0.4 0.6 0.8 0.9 0.4 0.2-0.3 0.2-0.9 0-1.3C478.6 495.3 478 495.2 477.9 495.4L477.9 495.4zM466.7 470.3c0.9 0.4 0.1 2.4 1.3 1.7 0.6-0.4 1.2-1.9 0.5-2.5C468 468.9 467.3 469.7 466.7 470.3L466.7 470.3zM559.2 597.8l-2.2 8.1c1.6 0.4 3 1.8 4.5 3 0.5 0.4 1.7-0.1 2.2 0.2 0.4 0.3 0.3 1.4 1 1.2 0.3 0 0.8-0.6 0.9-0.3 0.4 1.9 1.5 2.7 1.8 4.3 0.8 4 1.7 6.9 4.6 9.6 -0.5 0-1.2-0.1-1.4 0.1 -0.8 1.4 0.8 2.4 1.8 3.3 -0.4 0.1-0.7-0.1-0.9-0.4 -0.6 0.4-2.1-0.1-1.7 0.9 0.4 0.9 2.4 0.9 2.9 1.7 1.8 2.6-1.5 3.3-3.5 4.8 -0.2 0.2-0.4 1.2-0.6 1.8 3.5-1.1 7-1.2 10.6-0.5 -0.3-0.9 0.6-1.5 0.5-2.4 0 1.6 0.2 3.4 1.5 4.1 2.4 1.4 4 3.2 5.7 5 1-6.6 0.8-13.2 0.3-19.7 -0.1-0.5-1.1-1.6-1-1.9 3.4-8.6 0.7-18.6 0.1-27.6 -0.1-1.8-4.2-1.9-6.7-3.2 -1.3-0.7-3.3-0.9-4.5-1.6 -3.3-1.8-7.6-2.1-9.6-5.8 0 0 0.8 3.5-3.7 10.2L559.2 597.8 559.2 597.8z\");\n        s_stat_asia = this.get(\'draw_stat_asia\');\n        c1 = s_stat_asia.circle(cx = \"115\", cy = \"115\", r = \"70\").addClass(\"circle-back\");\n        c2 = s_stat_asia.circle(cx = \"115\", cy = \"115\", cr = \"70\").addClass(\"circle-front\").attr({\n          transform: \"r-90\"\n        });\n        s_stat_asia.g(c1, c2);\n        txt = s_stat_asia.text(x = \"35%\", y = \"50%\", \"54.1%\").addClass(\"yellowtext\");\n        s_stat_asia.g(txt).addClass(\"textpercentage\");\n        return setTimeout(function() {\n          return s_stat_asia.addClass(\'fiftyfour-percent-filled\');\n        }, 2000);\n      }\n    });\n\n    __exports__[\"default\"] = WorldPopulationInfographicComponent;\n  });//# sourceURL=emberjs-svg-examples/components/world-population-infographic.js");

;eval("define(\"emberjs-svg-examples/controllers/sandbox\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SandboxController;\n\n    SandboxController = Ember.Controller.extend({\n      tabs: [\n        Ember.Object.create({\n          title: \'Infographic-World Population\',\n          linkTo: \'sandbox.worldpopulation\'\n        }), Ember.Object.create({\n          title: \'Infographic-Day\',\n          linkTo: \'sandbox.infographic\'\n        })\n      ]\n    });\n\n    __exports__[\"default\"] = SandboxController;\n  });//# sourceURL=emberjs-svg-examples/controllers/sandbox.js");

;eval("define(\"emberjs-svg-examples/controllers/snapsvg\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SnapsvgController;\n\n    SnapsvgController = Ember.Controller.extend({\n      tabs: [\n        Ember.Object.create({\n          title: \'Clock\',\n          linkTo: \'snapsvg.clock\'\n        }), Ember.Object.create({\n          title: \'Menu Effects\',\n          linkTo: \'snapsvg.menu\'\n        })\n      ]\n    });\n\n    __exports__[\"default\"] = SnapsvgController;\n  });//# sourceURL=emberjs-svg-examples/controllers/snapsvg.js");

;eval("define(\"emberjs-svg-examples/controllers/snapsvg/menu\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SnapsvgMenuController;\n\n    SnapsvgMenuController = Ember.Controller.extend({\n      isChildVisible: false,\n      initialPath: null,\n      actions: {\n        toggle: function() {\n          var path, s;\n          this.toggleProperty(\'isChildVisible\');\n          if (this.get(\'isChildVisible\')) {\n            s = Snap(\'#morph-shape\');\n            path = s.select(\'path\');\n            this.set(\'initialPath\', path.attr(\'d\'));\n            return path.animate({\n              \'path\': s.node.getAttribute(\'data-morph-open\')\n            }, 400, mina.easeinout);\n          } else {\n            s = Snap(\'#morph-shape\');\n            path = s.select(\'path\');\n            return path.attr(\'d\', this.get(\'initialPath\'));\n          }\n        }\n      }\n    });\n\n    __exports__[\"default\"] = SnapsvgMenuController;\n  });//# sourceURL=emberjs-svg-examples/controllers/snapsvg/menu.js");

;eval("define(\"emberjs-svg-examples/controllers/svgjs\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SvgjsController;\n\n    SvgjsController = Ember.Controller.extend({\n      tabs: [\n        Ember.Object.create({\n          title: \'Animation-Rect\',\n          linkTo: \'svgjs.rectangle\'\n        }), Ember.Object.create({\n          title: \'Clock\',\n          linkTo: \'svgjs.clock\'\n        })\n      ]\n    });\n\n    __exports__[\"default\"] = SvgjsController;\n  });//# sourceURL=emberjs-svg-examples/controllers/svgjs.js");

;eval("define(\"emberjs-svg-examples/initializers/export-application-global\", \n  [\"ember\",\"emberjs-svg-examples/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal && !window[classifiedName]) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=emberjs-svg-examples/initializers/export-application-global.js");

;eval("define(\"emberjs-svg-examples/router\", \n  [\"ember\",\"emberjs-svg-examples/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n    var Router;\n\n    Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n      this.resource(\'sandbox\', function() {\n        this.route(\'infographic\');\n        return this.route(\'worldpopulation\');\n      });\n      this.resource(\'svgjs\', function() {\n        this.route(\'rectangle\');\n        return this.route(\'clock\');\n      });\n      return this.resource(\'snapsvg\', function() {\n        this.route(\'clock\');\n        return this.route(\'menu\');\n      });\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=emberjs-svg-examples/router.js");

;eval("define(\"emberjs-svg-examples/routes/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var IndexRoute;\n\n    IndexRoute = Ember.Route.extend({\n      redirect: function() {\n        return this.transitionTo(\'sandbox\');\n      }\n    });\n\n    __exports__[\"default\"] = IndexRoute;\n  });//# sourceURL=emberjs-svg-examples/routes/index.js");

;eval("define(\"emberjs-svg-examples/routes/sandbox\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SandboxRoute;\n\n    SandboxRoute = Ember.Route.extend({\n      afterModel: function() {\n        return this.transitionTo(\'sandbox.worldpopulation\');\n      }\n    });\n\n    __exports__[\"default\"] = SandboxRoute;\n  });//# sourceURL=emberjs-svg-examples/routes/sandbox.js");

;eval("define(\"emberjs-svg-examples/routes/sandbox/infographic\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SandboxInfographicRoute;\n\n    SandboxInfographicRoute = Ember.Route.extend();\n\n    __exports__[\"default\"] = SandboxInfographicRoute;\n  });//# sourceURL=emberjs-svg-examples/routes/sandbox/infographic.js");

;eval("define(\"emberjs-svg-examples/routes/sandbox/worldpopulation\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SandboxWorldpopulationRoute;\n\n    SandboxWorldpopulationRoute = Ember.Route.extend();\n\n    __exports__[\"default\"] = SandboxWorldpopulationRoute;\n  });//# sourceURL=emberjs-svg-examples/routes/sandbox/worldpopulation.js");

;eval("define(\"emberjs-svg-examples/routes/snapsvg\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SnapsvgRoute;\n\n    SnapsvgRoute = Ember.Route.extend({\n      afterModel: function() {\n        return this.transitionTo(\'snapsvg.clock\');\n      }\n    });\n\n    __exports__[\"default\"] = SnapsvgRoute;\n  });//# sourceURL=emberjs-svg-examples/routes/snapsvg.js");

;eval("define(\"emberjs-svg-examples/routes/snapsvg/clock\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SnapsvgClockRoute;\n\n    SnapsvgClockRoute = Ember.Route.extend();\n\n    __exports__[\"default\"] = SnapsvgClockRoute;\n  });//# sourceURL=emberjs-svg-examples/routes/snapsvg/clock.js");

;eval("define(\"emberjs-svg-examples/routes/snapsvg/menu\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SnapsvgMenuRoute;\n\n    SnapsvgMenuRoute = Ember.Route.extend({\n      setupController: function(controller) {\n        return controller.set(\'isChildVisible\', false);\n      }\n    });\n\n    __exports__[\"default\"] = SnapsvgMenuRoute;\n  });//# sourceURL=emberjs-svg-examples/routes/snapsvg/menu.js");

;eval("define(\"emberjs-svg-examples/routes/svgjs\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SvgjsRoute;\n\n    SvgjsRoute = Ember.Route.extend({\n      afterModel: function() {\n        return this.transitionTo(\'svgjs.rectangle\');\n      }\n    });\n\n    __exports__[\"default\"] = SvgjsRoute;\n  });//# sourceURL=emberjs-svg-examples/routes/svgjs.js");

;eval("define(\"emberjs-svg-examples/routes/svgjs/clock\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SvgjsClockRoute;\n\n    SvgjsClockRoute = Ember.Route.extend();\n\n    __exports__[\"default\"] = SvgjsClockRoute;\n  });//# sourceURL=emberjs-svg-examples/routes/svgjs/clock.js");

;eval("define(\"emberjs-svg-examples/routes/svgjs/rectangle\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SvgjsRectangleRoute;\n\n    SvgjsRectangleRoute = Ember.Route.extend();\n\n    __exports__[\"default\"] = SvgjsRectangleRoute;\n  });//# sourceURL=emberjs-svg-examples/routes/svgjs/rectangle.js");

;eval("define(\"emberjs-svg-examples/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n              <a class=\\\"navbar-brand\\\">\\n                <span class=\\\"glyphicon glyphicon-education\\\"></span>\\n                Ember.js + Svg\\n              </a>\\n          \");\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n              <a \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'href\': (\"#sandbox\")\n      },hashTypes:{\'href\': \"STRING\"},hashContexts:{\'href\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n                <span class=\\\"glyphicon glyphicon-inbox\\\"></span>\\n                Svg-Sandbox\\n              </a>\\n            \");\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n              <a \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'href\': (\"#svgjs\")\n      },hashTypes:{\'href\': \"STRING\"},hashContexts:{\'href\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n                <span class=\\\"glyphicon glyphicon-asterisk\\\"></span>\\n                Svg.js\\n              </a>\\n            \");\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n              <a \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'href\': (\"#snapsvg\")\n      },hashTypes:{\'href\': \"STRING\"},hashContexts:{\'href\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n                <span class=\\\"glyphicon glyphicon-asterisk\\\"></span>\\n                Snap.svg\\n              </a>\\n            \");\n      return buffer;\n      }\n\n      data.buffer.push(\"Current route path: \\\"\");\n      stack1 = helpers._triageMustache.call(depth0, \"currentPath\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\\"\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row clearfix\\\">\\n    <div class=\\\"col-md-12 column\\\">\\n      <nav class=\\\"navbar navbar-inverse\\\" role=\\\"navigation\\\">\\n\\n        <div class=\\\"navbar-header\\\">\\n           <button type=\\\"button\\\"\\n                   class=\\\"navbar-toggle\\\"\\n                   data-toggle=\\\"collapse\\\"\\n                   data-target=\\\"#bs-example-navbar-collapse-1\\\">\\n              <span class=\\\"sr-only\\\">Toggle navigation</span>\\n              <span class=\\\"icon-bar\\\"></span>\\n              <span class=\\\"icon-bar\\\"></span>\\n              <span class=\\\"icon-bar\\\"></span>\\n           </button>\\n\\n           \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"sandbox\", options) : helperMissing.call(depth0, \"link-to\", \"sandbox\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        </div>\\n\\n        <div class=\\\"collapse navbar-collapse\\\"\\n             id=\\\"bs-example-navbar-collapse-1\\\"\\n             navbar-selection-main ng-cloak>\\n          <ul class=\\\"nav navbar-nav\\\">\\n\\n            \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'tagName\': (\"li\"),\n        \'href\': (false)\n      },hashTypes:{\'tagName\': \"STRING\",\'href\': \"BOOLEAN\"},hashContexts:{\'tagName\': depth0,\'href\': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"sandbox\", options) : helperMissing.call(depth0, \"link-to\", \"sandbox\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n            \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'tagName\': (\"li\"),\n        \'href\': (false)\n      },hashTypes:{\'tagName\': \"STRING\",\'href\': \"BOOLEAN\"},hashContexts:{\'tagName\': depth0,\'href\': depth0},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"svgjs\", options) : helperMissing.call(depth0, \"link-to\", \"svgjs\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n            \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'tagName\': (\"li\"),\n        \'href\': (false)\n      },hashTypes:{\'tagName\': \"STRING\",\'href\': \"BOOLEAN\"},hashContexts:{\'tagName\': depth0,\'href\': depth0},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"snapsvg\", options) : helperMissing.call(depth0, \"link-to\", \"snapsvg\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n          </ul>\\n\\n        </div>\\n\\n      </nav>\\n    </div>\\n  </div>\\n\\n  \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=emberjs-svg-examples/templates/application.js");

;eval("define(\"emberjs-svg-examples/templates/components/intraday-designer-infographic\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<svg id=\\\"svgstage-wrapper\\\"></svg>\\n\");\n      \n    });\n  });//# sourceURL=emberjs-svg-examples/templates/components/intraday-designer-infographic.js");

;eval("define(\"emberjs-svg-examples/templates/components/snapsvg-clock\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<svg id=\\\"snapsvg-wrapper\\\"></svg>\\n\");\n      \n    });\n  });//# sourceURL=emberjs-svg-examples/templates/components/snapsvg-clock.js");

;eval("define(\"emberjs-svg-examples/templates/components/svg-clock-swissrailway\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<div id=\\\"svg-wrapper\\\"></div>\\n\");\n      \n    });\n  });//# sourceURL=emberjs-svg-examples/templates/components/svg-clock-swissrailway.js");

;eval("define(\"emberjs-svg-examples/templates/components/svg-snappy-rectangle\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<div id=\\\"svg-wrapper\\\"></div>\\n\");\n      \n    });\n  });//# sourceURL=emberjs-svg-examples/templates/components/svg-snappy-rectangle.js");

;eval("define(\"emberjs-svg-examples/templates/components/world-population-infographic\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<header class=\\\"title\\\">\\n	<div class=\\\"container\\\">\\n		<div class=\\\"intro\\\">\\n			<h1>Population growth on this planet</h1>\\n			<p>Growth expected by <strong>the year 2050</strong>.</p>\\n		</div>\\n	</div>\\n</header>\\n\\n<div class=\\\"container-sun\\\">\\n  <svg  id=\\\"sun-worldpopulation-svg-wrapper\\\"\\n        viewBox=\\\"0 0 100 100\\\"\\n        preserveAspectRatio=\\\"xMinYMin meet\\\">\\n  </svg>\\n\\n  <svg  id=\\\"cloud1-worldpopulation-svg-wrapper\\\"\\n        class=\\\"svg-cloud01\\\"\\n        viewBox=\\\"0 0 100 100\\\"\\n        preserveAspectRatio=\\\"xMinYMin meet\\\">\\n  </svg>\\n\\n  <svg  id=\\\"cloud2-worldpopulation-svg-wrapper\\\"\\n        class=\\\"svg-cloud02\\\"\\n        viewBox=\\\"0 0 100 100\\\"\\n        preserveAspectRatio=\\\"xMinYMin meet\\\">\\n  </svg>\\n</div>\\n\\n<div class=\\\"container-globe\\\">\\n  <svg  id=\\\"globe-worldpopulation-svg-wrapper\\\"\\n        class=\\\"svg-earth\\\"\\n        viewBox=\\\"0 0 170 170\\\"\\n        preserveAspectRatio=\\\"xMinYMin meet\\\">\\n  </svg>\\n</div>\\n\\n<div class=\\\"container-europe\\\">\\n  <h1>Population growth in Europe by the year 2050</h1>\\n  <p>2015 the population is 743 million - In 2050 population wil be 709 million</p>\\n  <hr>\\n\\n  <svg  id=\\\"stat-europe-worldpopulation-svg-wrapper\\\"\\n        class=\\\"svgdonut\\\"\\n        viewBox=\\\"-280 -15 250 250\\\"\\n        preserveAspectRatio=\\\"xMinYMin meet\\\">\\n  </svg>\\n\\n  <svg  id=\\\"europe-worldpopulation-svg-wrapper\\\"\\n        class=\\\"svg-europe\\\"\\n        viewBox=\\\"84 72 497.3 453.7\\\"\\n        preserveAspectRatio=\\\"xMinYMin meet\\\">\\n  </svg>\\n</div>\\n\\n<div class=\\\"container-northamerica\\\">\\n	<h1>Population growth in North America by the year 2050</h1>\\n	<p>2015 population is 361 million - In 2050 population wil be 446 million</p>\\n	<hr>\\n\\n	<svg  id=\\\"stat-northamerica-worldpopulation-svg-wrapper\\\"\\n        class=\\\"svgdonut\\\"\\n        viewBox=\\\"-280 -15 250 250\\\"\\n        preserveAspectRatio=\\\"xMinYMin meet\\\">\\n  </svg>\\n\\n	<svg	id=\\\"northamerica-worldpopulation-svg-wrapper\\\"\\n				class=\\\"svg-northamerica\\\"\\n				viewBox=\\\"0 0 100 100\\\"\\n				preserveAspectRatio=\\\"xMinYMin meet\\\">\\n	</svg>\\n</div>\\n\\n<div class=\\\"container-southamerica\\\">\\n	<h1>Population growth in South America by the year 2050</h1>\\n	<p>2015 population is 630 million - In 2050 population wil be 782 million</p>\\n	<hr>\\n\\n	<svg  id=\\\"stat-southamerica-worldpopulation-svg-wrapper\\\"\\n        class=\\\"svgdonut\\\"\\n        viewBox=\\\"-280 -15 250 250\\\"\\n        preserveAspectRatio=\\\"xMinYMin meet\\\">\\n  </svg>\\n\\n	<svg	id=\\\"southamerica-worldpopulation-svg-wrapper\\\"\\n				class=\\\"svg-southamerica\\\"\\n				viewBox=\\\"0 0 100 100\\\"\\n				preserveAspectRatio=\\\"xMinYMin meet\\\">\\n	</svg>\\n</div>\\n\\n<div class=\\\"container-africa\\\">\\n	<h1>Population growth in Africa by the year 2050</h1>\\n	<p>2015 population is 1,166 million - In 2050 population wil be 2,393 million</p>\\n	<hr>\\n\\n	<svg  id=\\\"stat-africa-worldpopulation-svg-wrapper\\\"\\n        class=\\\"svgdonut\\\"\\n        viewBox=\\\"-280 -15 250 250\\\"\\n        preserveAspectRatio=\\\"xMinYMin meet\\\">\\n  </svg>\\n\\n	<svg	id=\\\"africa-worldpopulation-svg-wrapper\\\"\\n				class=\\\"svg-africa\\\"\\n				viewBox=\\\"0 0 100 100\\\"\\n				preserveAspectRatio=\\\"xMinYMin meet\\\">\\n	</svg>\\n</div>\\n\\n\\n<div class=\\\"container-asia\\\">\\n	<h1>Population growth in Asia by the year 2050</h1>\\n	<p>2015 population is 4,385 million - In 2050 population wil be 5,164 million</p>\\n	<hr>\\n\\n	<svg  id=\\\"stat-asia-worldpopulation-svg-wrapper\\\"\\n        class=\\\"svgdonut\\\"\\n        viewBox=\\\"-280 -15 250 250\\\"\\n        preserveAspectRatio=\\\"xMinYMin meet\\\">\\n  </svg>\\n\\n	<svg	id=\\\"asia-worldpopulation-svg-wrapper\\\"\\n				class=\\\"svg-asia\\\"\\n				viewBox=\\\"0 0 612 792\\\"\\n				preserveAspectRatio=\\\"xMinYMin meet\\\">\\n	</svg>\\n</div>\\n\");\n      \n    });\n  });//# sourceURL=emberjs-svg-examples/templates/components/world-population-infographic.js");

;eval("define(\"emberjs-svg-examples/templates/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=emberjs-svg-examples/templates/index.js");

;eval("define(\"emberjs-svg-examples/templates/sandbox\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-page-header\'] || (depth0 && depth0[\'bs-page-header\']),options={hash:{\n        \'title\': (\"App\"),\n        \'sub\': (\"- Sandbox\")\n      },hashTypes:{\'title\': \"STRING\",\'sub\': \"STRING\"},hashContexts:{\'title\': depth0,\'sub\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-page-header\", options))));\n      data.buffer.push(\"\\n\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-tabs\'] || (depth0 && depth0[\'bs-tabs\']),options={hash:{\n        \'contentBinding\': (\"tabs\")\n      },hashTypes:{\'contentBinding\': \"STRING\"},hashContexts:{\'contentBinding\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-tabs\", options))));\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=emberjs-svg-examples/templates/sandbox.js");

;eval("define(\"emberjs-svg-examples/templates/sandbox/infographic\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-page-header\'] || (depth0 && depth0[\'bs-page-header\']),options={hash:{\n        \'title\': (\"Infographic - Intraday\")\n      },hashTypes:{\'title\': \"STRING\"},hashContexts:{\'title\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-page-header\", options))));\n      data.buffer.push(\"\\n\\n<p>\\n  Source of inspiration for this example:\\n  <a href=\\\"http://tympanus.net/codrops/2013/02/06/interactive-infographic-with-svg-and-css-animations/\\\" target=\\\"_blank\\\">\\n    Tutorial - Interactive Infographic with SVG and CSS Animations\\n  </a>\\n</p>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"intraday-designer-infographic\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=emberjs-svg-examples/templates/sandbox/infographic.js");

;eval("define(\"emberjs-svg-examples/templates/sandbox/worldpopulation\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-page-header\'] || (depth0 && depth0[\'bs-page-header\']),options={hash:{\n        \'title\': (\"Infographic - World Population\")\n      },hashTypes:{\'title\': \"STRING\"},hashContexts:{\'title\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-page-header\", options))));\n      data.buffer.push(\"\\n\\n<p>\\n  Source of inspiration for this example:\\n  <a href=\\\"http://designmodo.com/svg-infographic/\\\" target=\\\"_blank\\\">\\n    Tutorial - Creating a Scalable SVG Infographic\\n  </a>\\n</p>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"world-population-infographic\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=emberjs-svg-examples/templates/sandbox/worldpopulation.js");

;eval("define(\"emberjs-svg-examples/templates/snapsvg\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-page-header\'] || (depth0 && depth0[\'bs-page-header\']),options={hash:{\n        \'title\': (\"Snap.svg\"),\n        \'sub\': (\"- SVG Library Demo\")\n      },hashTypes:{\'title\': \"STRING\",\'sub\': \"STRING\"},hashContexts:{\'title\': depth0,\'sub\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-page-header\", options))));\n      data.buffer.push(\"\\n\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-tabs\'] || (depth0 && depth0[\'bs-tabs\']),options={hash:{\n        \'contentBinding\': (\"tabs\")\n      },hashTypes:{\'contentBinding\': \"STRING\"},hashContexts:{\'contentBinding\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-tabs\", options))));\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=emberjs-svg-examples/templates/snapsvg.js");

;eval("define(\"emberjs-svg-examples/templates/snapsvg/clock\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<p>\\n  Source of inspiration for this example:\\n  <a href=\\\"https://github.com/adobe-webplatform/Snap.svg/tree/master/demos/clock\\\" target=\\\"_blank\\\">\\n    Offical Snap.svg library\'s clock example\\n  </a>\\n</p>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"snapsvg-clock\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=emberjs-svg-examples/templates/snapsvg/clock.js");

;eval("define(\"emberjs-svg-examples/templates/snapsvg/menu\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n\\n    <div class=\\\"menu-wrap\\\">\\n\\n      <nav class=\\\"menu\\\">\\n        <div class=\\\"icon-list\\\">\\n          <a href=\\\"snapsvg/menu\\\"><i class=\\\"fa fa-fw fa-bell-o\\\"></i><span>Alerts</span></a>\\n          <a href=\\\"snapsvg/menu\\\"><i class=\\\"fa fa-fw fa-envelope-o\\\"></i><span>Messages</span></a>\\n          <a href=\\\"snapsvg/menu\\\"><i class=\\\"fa fa-fw fa-bar-chart-o\\\"></i><span>Analytics</span></a>\\n        </div>\\n      </nav>\\n\\n      <button class=\\\"close-button\\\" id=\\\"close-button\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggle\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">\\n        Close Menu\\n      </button>\\n\\n      <div class=\\\"morph-shape\\\" id=\\\"morph-shape\\\" data-morph-open=\\\"M-1,0h101c0,0,0-1,0,395c0,404,0,405,0,405H-1V0z\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 100 800\\\" preserveAspectRatio=\\\"none\\\">\\n          <path d=\\\"M-1,0h101c0,0-97.833,153.603-97.833,396.167C2.167,627.579,100,800,100,800H-1V0z\\\"/>\\n        </svg>\\n      </div>\\n\\n    </div>\\n\\n  \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<p>\\n  Source of inspiration for this example:\\n  <a href=\\\"http://tympanus.net/codrops/2014/09/16/off-canvas-menu-effects/\\\" target=\\\"_blank\\\">\\n    Tutorial - Off-Canvas Menu Effects\\n  </a>\\n</p>\\n\\n<div class=\\\"container\\\">\\n\\n  \");\n      stack1 = helpers.view.call(depth0, \"Child\", {hash:{\n        \'isVisibleBinding\': (\"isChildVisible\")\n      },hashTypes:{\'isVisibleBinding\': \"STRING\"},hashContexts:{\'isVisibleBinding\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n  <button class=\\\"menu-button\\\" id=\\\"open-button\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggle\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">\\n    Open Menu\\n  </button>\\n\\n  <p><b>Click Here!</b></p>\\n\\n</div><!-- /container -->\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=emberjs-svg-examples/templates/snapsvg/menu.js");

;eval("define(\"emberjs-svg-examples/templates/svgjs\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-page-header\'] || (depth0 && depth0[\'bs-page-header\']),options={hash:{\n        \'title\': (\"Svg.js\"),\n        \'sub\': (\"- SVG Library Demo\")\n      },hashTypes:{\'title\': \"STRING\",\'sub\': \"STRING\"},hashContexts:{\'title\': depth0,\'sub\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-page-header\", options))));\n      data.buffer.push(\"\\n\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-tabs\'] || (depth0 && depth0[\'bs-tabs\']),options={hash:{\n        \'contentBinding\': (\"tabs\")\n      },hashTypes:{\'contentBinding\': \"STRING\"},hashContexts:{\'contentBinding\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-tabs\", options))));\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=emberjs-svg-examples/templates/svgjs.js");

;eval("define(\"emberjs-svg-examples/templates/svgjs/clock\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<p>\\n  Sources of inspiration for this example:\\n  <ul>\\n    <li>\\n      <a href=\\\"http://jsfiddle.net/wout/Vac2Q/light/\\\" target=\\\"_blank\\\">\\n        Example of svg.js animation\\n      </a>\\n    </li>\\n    <li>\\n      <a href=\\\"http://svgjs.com/\\\" target=\\\"_blank\\\">\\n        Offical svg.js library\'s clock example\\n      </a>\\n    </li>\\n  </ul>\\n</p>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"svg-clock-swissrailway\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=emberjs-svg-examples/templates/svgjs/clock.js");

;eval("define(\"emberjs-svg-examples/templates/svgjs/rectangle\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<p>\\n  Sources of inspiration for this example:\\n  <ul>\\n    <li>\\n      <a href=\\\"http://jsfiddle.net/wout/Vac2Q/light/\\\" target=\\\"_blank\\\">\\n        Example of svg.js animation\\n      </a>\\n    </li>\\n    <li>\\n      <a href=\\\"http://stackoverflow.com/questions/21138072/how-to-make-an-ember-component-with-svg-js\\\" target=\\\"_blank\\\">\\n        How to make an Ember component with svg.js?\\n      </a>\\n    </li>\\n  </ul>\\n</p>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"svg-snappy-rectangle\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=emberjs-svg-examples/templates/svgjs/rectangle.js");

;eval("define(\"emberjs-svg-examples/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=emberjs-svg-examples/tests/app.jshint.js");

;eval("define(\"emberjs-svg-examples/tests/emberjs-svg-examples/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - emberjs-svg-examples/tests/helpers\');\n    test(\'emberjs-svg-examples/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'emberjs-svg-examples/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=emberjs-svg-examples/tests/emberjs-svg-examples/tests/helpers/resolver.jshint.js");

;eval("define(\"emberjs-svg-examples/tests/emberjs-svg-examples/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - emberjs-svg-examples/tests/helpers\');\n    test(\'emberjs-svg-examples/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'emberjs-svg-examples/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=emberjs-svg-examples/tests/emberjs-svg-examples/tests/helpers/start-app.jshint.js");

;eval("define(\"emberjs-svg-examples/tests/emberjs-svg-examples/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - emberjs-svg-examples/tests\');\n    test(\'emberjs-svg-examples/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'emberjs-svg-examples/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=emberjs-svg-examples/tests/emberjs-svg-examples/tests/test-helper.jshint.js");

;eval("define(\"emberjs-svg-examples/tests/helpers/resolver\", \n  [\"ember/resolver\",\"emberjs-svg-examples/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=emberjs-svg-examples/tests/helpers/resolver.js");

;eval("define(\"emberjs-svg-examples/tests/helpers/start-app\", \n  [\"ember\",\"emberjs-svg-examples/app\",\"emberjs-svg-examples/router\",\"emberjs-svg-examples/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      return App;\n    }\n  });//# sourceURL=emberjs-svg-examples/tests/helpers/start-app.js");

;eval("define(\"emberjs-svg-examples/tests/test-helper\", \n  [\"emberjs-svg-examples/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=emberjs-svg-examples/tests/test-helper.js");

;eval("define(\"emberjs-svg-examples/tests/unit/components/intraday-designer-infographic-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForComponent = __dependency1__.moduleForComponent;\n    moduleForComponent(\'intraday-designer-infographic\', {});\n\n    test(\'it renders\', function(assert) {\n      var component;\n      assert.expect(2);\n      component = this.subject();\n      assert.equal(component._state, \'preRender\');\n      this.render();\n      return assert.equal(component._state, \'inDOM\');\n    });\n  });//# sourceURL=emberjs-svg-examples/tests/unit/components/intraday-designer-infographic-test.js");

;eval("define(\"emberjs-svg-examples/tests/unit/components/snapsvg-clock-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForComponent = __dependency1__.moduleForComponent;\n    moduleForComponent(\'snapsvg-clock\', {});\n\n    test(\'it renders\', function(assert) {\n      var component;\n      assert.expect(2);\n      component = this.subject();\n      assert.equal(component._state, \'preRender\');\n      this.render();\n      return assert.equal(component._state, \'inDOM\');\n    });\n  });//# sourceURL=emberjs-svg-examples/tests/unit/components/snapsvg-clock-test.js");

;eval("define(\"emberjs-svg-examples/tests/unit/components/svg-clock-swissrailway-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForComponent = __dependency1__.moduleForComponent;\n    moduleForComponent(\'svg-clock-swissrailway\', {});\n\n    test(\'it renders\', function(assert) {\n      var component;\n      assert.expect(2);\n      component = this.subject();\n      assert.equal(component._state, \'preRender\');\n      this.render();\n      return assert.equal(component._state, \'inDOM\');\n    });\n  });//# sourceURL=emberjs-svg-examples/tests/unit/components/svg-clock-swissrailway-test.js");

;eval("define(\"emberjs-svg-examples/tests/unit/components/svg-snappy-rectangle-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForComponent = __dependency1__.moduleForComponent;\n    moduleForComponent(\'svg-snappy-rectangle\', {});\n\n    test(\'it renders\', function(assert) {\n      var component;\n      assert.expect(2);\n      component = this.subject();\n      assert.equal(component._state, \'preRender\');\n      this.render();\n      return assert.equal(component._state, \'inDOM\');\n    });\n  });//# sourceURL=emberjs-svg-examples/tests/unit/components/svg-snappy-rectangle-test.js");

;eval("define(\"emberjs-svg-examples/tests/unit/components/world-population-infographic-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForComponent = __dependency1__.moduleForComponent;\n    moduleForComponent(\'world-population-infographic\', {});\n\n    test(\'it renders\', function(assert) {\n      var component;\n      assert.expect(2);\n      component = this.subject();\n      assert.equal(component._state, \'preRender\');\n      this.render();\n      return assert.equal(component._state, \'inDOM\');\n    });\n  });//# sourceURL=emberjs-svg-examples/tests/unit/components/world-population-infographic-test.js");

;eval("define(\"emberjs-svg-examples/tests/unit/controllers/sandbox-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'controller:sandbox\', {});\n\n    test(\'it exists\', function(assert) {\n      var controller;\n      controller = this.subject();\n      return assert.ok(controller);\n    });\n  });//# sourceURL=emberjs-svg-examples/tests/unit/controllers/sandbox-test.js");

;eval("define(\"emberjs-svg-examples/tests/unit/controllers/snapsvg-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'controller:snapsvg\', {});\n\n    test(\'it exists\', function(assert) {\n      var controller;\n      controller = this.subject();\n      return assert.ok(controller);\n    });\n  });//# sourceURL=emberjs-svg-examples/tests/unit/controllers/snapsvg-test.js");

;eval("define(\"emberjs-svg-examples/tests/unit/controllers/snapsvg/menu-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'controller:snapsvg/menu\', {});\n\n    test(\'it exists\', function(assert) {\n      var controller;\n      controller = this.subject();\n      return assert.ok(controller);\n    });\n  });//# sourceURL=emberjs-svg-examples/tests/unit/controllers/snapsvg/menu-test.js");

;eval("define(\"emberjs-svg-examples/tests/unit/controllers/svgjs-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'controller:svgjs\', {});\n\n    test(\'it exists\', function(assert) {\n      var controller;\n      controller = this.subject();\n      return assert.ok(controller);\n    });\n  });//# sourceURL=emberjs-svg-examples/tests/unit/controllers/svgjs-test.js");

;eval("define(\"emberjs-svg-examples/tests/unit/routes/index-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'route:index\', {});\n\n    test(\'it exists\', function(assert) {\n      var route;\n      route = this.subject();\n      return assert.ok(route);\n    });\n  });//# sourceURL=emberjs-svg-examples/tests/unit/routes/index-test.js");

;eval("define(\"emberjs-svg-examples/tests/unit/routes/sandbox-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'route:sandbox\', {});\n\n    test(\'it exists\', function(assert) {\n      var route;\n      route = this.subject();\n      return assert.ok(route);\n    });\n  });//# sourceURL=emberjs-svg-examples/tests/unit/routes/sandbox-test.js");

;eval("define(\"emberjs-svg-examples/tests/unit/routes/sandbox/infographic-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'route:sandbox/infographic\', {});\n\n    test(\'it exists\', function(assert) {\n      var route;\n      route = this.subject();\n      return assert.ok(route);\n    });\n  });//# sourceURL=emberjs-svg-examples/tests/unit/routes/sandbox/infographic-test.js");

;eval("define(\"emberjs-svg-examples/tests/unit/routes/sandbox/worldpopulation-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'route:sandbox/worldpopulation\', {});\n\n    test(\'it exists\', function(assert) {\n      var route;\n      route = this.subject();\n      return assert.ok(route);\n    });\n  });//# sourceURL=emberjs-svg-examples/tests/unit/routes/sandbox/worldpopulation-test.js");

;eval("define(\"emberjs-svg-examples/tests/unit/routes/snapsvg-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'route:snapsvg\', {});\n\n    test(\'it exists\', function(assert) {\n      var route;\n      route = this.subject();\n      return assert.ok(route);\n    });\n  });//# sourceURL=emberjs-svg-examples/tests/unit/routes/snapsvg-test.js");

;eval("define(\"emberjs-svg-examples/tests/unit/routes/snapsvg/clock-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'route:snapsvg/clock\', {});\n\n    test(\'it exists\', function(assert) {\n      var route;\n      route = this.subject();\n      return assert.ok(route);\n    });\n  });//# sourceURL=emberjs-svg-examples/tests/unit/routes/snapsvg/clock-test.js");

;eval("define(\"emberjs-svg-examples/tests/unit/routes/snapsvg/menu-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'route:snapsvg/menu\', {});\n\n    test(\'it exists\', function(assert) {\n      var route;\n      route = this.subject();\n      return assert.ok(route);\n    });\n  });//# sourceURL=emberjs-svg-examples/tests/unit/routes/snapsvg/menu-test.js");

;eval("define(\"emberjs-svg-examples/tests/unit/routes/svgjs-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'route:svgjs\', {});\n\n    test(\'it exists\', function(assert) {\n      var route;\n      route = this.subject();\n      return assert.ok(route);\n    });\n  });//# sourceURL=emberjs-svg-examples/tests/unit/routes/svgjs-test.js");

;eval("define(\"emberjs-svg-examples/tests/unit/routes/svgjs/clock-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'route:svgjs/clock\', {});\n\n    test(\'it exists\', function(assert) {\n      var route;\n      route = this.subject();\n      return assert.ok(route);\n    });\n  });//# sourceURL=emberjs-svg-examples/tests/unit/routes/svgjs/clock-test.js");

;eval("define(\"emberjs-svg-examples/tests/unit/routes/svgjs/rectangle-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'route:svgjs/rectangle\', {});\n\n    test(\'it exists\', function(assert) {\n      var route;\n      route = this.subject();\n      return assert.ok(route);\n    });\n  });//# sourceURL=emberjs-svg-examples/tests/unit/routes/svgjs/rectangle-test.js");

;eval("define(\"emberjs-svg-examples/tests/unit/views/child-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'view:child\');\n\n    test(\'it exists\', function(assert) {\n      var view;\n      view = this.subject();\n      return assert.ok(view);\n    });\n  });//# sourceURL=emberjs-svg-examples/tests/unit/views/child-test.js");

;eval("define(\"emberjs-svg-examples/views/child\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ChildView;\n\n    ChildView = Ember.View.extend({\n      isVisible: (function() {\n        return this.get(\'parentView.isChildVisible\');\n      }).property(\'_parentView.isChildVisible\')\n    });\n\n    __exports__[\"default\"] = ChildView;\n  });//# sourceURL=emberjs-svg-examples/views/child.js");

/* jshint ignore:start */

define('emberjs-svg-examples/config/environment', ['ember'], function(Ember) {
  var prefix = 'emberjs-svg-examples';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */



});

if (runningTests) {
  require("emberjs-svg-examples/tests/test-helper");
} else {
  require("emberjs-svg-examples/app")["default"].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}



/* jshint ignore:end */
